#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}const path=require("path"),fs=require("fs"),os=require("os"),ipaddr_js=require("ipaddr.js"),cluster=_interopDefault(require("cluster")),http=require("http"),https=require("https"),zlib=require("zlib"),Koa=_interopDefault(require("koa")),Router=_interopDefault(require("koa-router")),jwt=require("jsonwebtoken"),koaStatic=_interopDefault(require("koa-static")),koaCompress=_interopDefault(require("koa-compress")),koaBodyParser=_interopDefault(require("koa-bodyparser")),koaJwt=_interopDefault(require("koa-jwt")),stream=require("stream"),mongodb=require("mongodb"),vm=require("vm"),parsimmon=require("parsimmon"),crypto=require("crypto"),later=require("later"),url=require("url"),dgram=require("dgram"),child_process=require("child_process"),yaml=require("yaml");let configDir,cwmpSsl,nbiSsl,fsSsl,uiSsl,fsHostname,ROOT_DIR=path.resolve(__dirname,"..");for(;!fs.existsSync(`${ROOT_DIR}/package.json`);){const e=path.resolve(ROOT_DIR,"..");if(e===ROOT_DIR){ROOT_DIR=process.cwd();break}ROOT_DIR=e}const options={EXT_DIR:{type:"path",default:path.resolve(ROOT_DIR,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},allConfig={};function setConfig(e,t,r=!1){if(null!=allConfig[e])return!0;function s(e,t){switch(t){case"int":return Number(e);case"bool":return["true","1"].includes(String(e).trim().toLowerCase());case"string":return String(e);case"path":return e?path.resolve(e):"";default:return null}}"CONFIG_DIR"!==e&&"config-dir"!==e||(configDir=configDir||path.resolve(ROOT_DIR,t)),"CWMP_SSL"!==e&&"cwmp-ssl"!==e||(cwmpSsl=cwmpSsl||String(t).toLowerCase().trim()),"NBI_SSL"!==e&&"nbi-ssl"!==e||(nbiSsl=nbiSsl||String(t).toLowerCase().trim()),"FS_SSL"!==e&&"fs-ssl"!==e||(fsSsl=fsSsl||String(t).toLowerCase().trim()),"UI_SSL"!==e&&"ui-ssl"!==e||(uiSsl=uiSsl||String(t).toLowerCase().trim()),"FS_HOSTNAME"!==e&&"fs-hostname"!==e||(fsHostname=fsHostname||String(t).trim()),"PRESETS_CACHE_DURATION"!==e&&"presets-cache-duration"!==e||setConfig("MAX_CACHE_TTL",t),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==e&&"get-parameter-names-depth-threshold"!==e||setConfig("GPN_NEXT_LEVEL",t),"TASK_PARAMETERS_BATCH_SIZE"!==e&&"task-parameters-batch-size"!==e||setConfig("GPV_BATCH_SIZE",t),"FS_IP"!==e&&"fs-ip"!==e||setConfig("FS_HOSTNAME",t);let n=null;for(const[i,a]of Object.entries(options)){let o=i;if(r&&(o=o.toLowerCase().replace(/_/g,"-")),e===o?(n=s(t,a.type),o=i):e.startsWith(`${o}-`)&&(n=s(t,a.type),o=`${i}-${e.slice(i.length+1)}`),null!=n)return allConfig[o]=n,process.env[`GENIEACS_${o}`]=n,!0}return!1}const argv=process.argv.slice(2);for(;argv.length;){const e=argv.shift();if("-"===e[0]){const t=argv.shift();setConfig(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&setConfig(e.slice(9),t);const configFilename=configDir?`${configDir}/config.json`:`${ROOT_DIR}/config/config.json`;if(fs.existsSync(configFilename)){const e=JSON.parse(fs.readFileSync(configFilename).toString());for(const[t,r]of Object.entries(e))setConfig(t,r)||(process.env[`GENIEACS_${t}`]=`${r}`)}if(configDir&&setConfig("EXT_DIR",`${configDir}/ext`),["true","1"].includes(cwmpSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("CWMP_SSL_CERT",`${e}/cwmp.crt`),setConfig("CWMP_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(nbiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("NBI_SSL_CERT",`${e}/cwmp.crt`),setConfig("NBI_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(fsSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("FS_SSL_CERT",`${e}/cwmp.crt`),setConfig("FS_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(uiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("UI_SSL_CERT",`${e}/cwmp.crt`),setConfig("UI_SSL_KEY",`${e}/cwmp.key`)}if(fsHostname){const e=allConfig.FS_PORT||7567;setConfig("FS_URL_PREFIX",(!!allConfig.FS_SSL_CERT?"https":"http")+`://${fsHostname}:${e}/`)}for(const[e,t]of Object.entries(options))null!=t.default&&setConfig(e,t.default);function get(e,t){if(!t)return allConfig[e];let r=allConfig[e=`${e}-${t}`];if(null!=r)return r;let s=e.lastIndexOf("-");return null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1),null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1),null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1))>0&&null!=(r=allConfig[e.slice(0,s)])?r:null))}const FORWARDED_HEADER=""+get("FORWARDED_HEADER"),cache=new WeakMap,cidrs=[];for(const e of FORWARDED_HEADER.split(",").map(e=>e.trim()))try{cidrs.push(ipaddr_js.parseCIDR(e))}catch(t){try{const t=ipaddr_js.parse(e);cidrs.push([t,8*t.toByteArray().length])}catch(e){}}function parseForwardedHeader(e){e=e.toLowerCase();const t={};let r,s=0,n=-1;for(let i=0;i<e.length;++i){const a=e.charCodeAt(i);if(61===a)s>=0&&(r=e.slice(s,i).trim(),s=-1,n=i+1);else if(59===a)n>=0&&(t[r]=e.slice(n,i).trim()),n=-1,s=i+1;else{if(44===a)return n>=0&&(t[r]=e.slice(n,i).trim()),t;if(34===a&&n>=0){const a=i;if(!e.slice(n,a).trim())for(i+=1;i<e.length;++i){const o=e.charCodeAt(i);if(92===o&&++i,34===o){t[r]=JSON.parse(e.slice(a,i+1).trim()),n=-1,s=i+1;break}}}}}return n>=0&&(t[r]=e.slice(n).trim()),t}function getRequestOrigin(e){let t=cache.get(e);if(!t){const r=e.socket;t={localAddress:r.localAddress,localPort:r.localPort,remoteAddress:r.remoteAddress,remotePort:r.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const s=e.headers.forwarded;if(s){const e=ipaddr_js.parse(r.remoteAddress);if(cidrs.some(t=>e.match(t))){const e=parseForwardedHeader(s);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,r]=e.host.split(":",2);t.localPort=+r||t.localPort}if(e.for)if(e.for.startsWith("[")){const r=e.for.lastIndexOf("]");r>=0&&(t.remoteAddress=e.for.slice(1,r),t.remotePort=parseInt(e.for.slice(r+2))||t.remotePort)}else{const r=e.for.lastIndexOf(":");r>=0?(t.remoteAddress=e.for.slice(0,r),t.remotePort=parseInt(e.for.slice(r+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const r=e.by.lastIndexOf("]");r>=0&&(t.localAddress=e.by.slice(1,r),t.localPort=parseInt(e.by.slice(r+2))||t.localPort)}else{const r=e.by.lastIndexOf(":");r>=0?(t.localAddress=e.by.slice(0,r),t.localPort=parseInt(e.by.slice(r+1))||t.localPort):t.localAddress=e.by}}}cache.set(e,t)}return t}const REOPEN_EVERY=6e4,LOG_FORMAT=get("LOG_FORMAT"),ACCESS_LOG_FORMAT=get("ACCESS_LOG_FORMAT")||LOG_FORMAT,defaultMeta={};let LOG_FILE,ACCESS_LOG_FILE,LOG_SYSTEMD=!1,ACCESS_LOG_SYSTEMD=!1,logStream=fs.createWriteStream(null,{fd:process.stderr.fd}),logStat=fs.fstatSync(logStream.fd),accessLogStream=fs.createWriteStream(null,{fd:process.stdout.fd}),accessLogStat=fs.fstatSync(accessLogStream.fd);function reopen(){let e=1;LOG_FILE&&(++e,fs.stat(LOG_FILE,(t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===logStat.dev&&r.ino===logStat.ino||(logStream.end(),logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),ACCESS_LOG_FILE&&(++e,fs.stat(ACCESS_LOG_FILE,(t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===accessLogStat.dev&&r.ino===accessLogStat.ino||(accessLogStream.end(),accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function init(e,t){defaultMeta.hostname=os.hostname(),defaultMeta.pid=process.pid,defaultMeta.name=`genieacs-${e}`,defaultMeta.version=t,LOG_FILE=get(`${e.toUpperCase()}_LOG_FILE`),ACCESS_LOG_FILE=get(`${e.toUpperCase()}_ACCESS_LOG_FILE`),LOG_FILE&&(logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),ACCESS_LOG_FILE&&(accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd));const r=process.env.JOURNAL_STREAM;if(r){const[e,t]=r.split(":").map(parseInt);LOG_SYSTEMD=logStat.dev===e&&logStat.ino===t,ACCESS_LOG_SYSTEMD=accessLogStat.dev===e&&accessLogStat.ino===t}(LOG_FILE||ACCESS_LOG_FILE)&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function flatten(e){e.sessionContext&&(e.deviceId=e.sessionContext.deviceId,e.remoteAddress=getRequestOrigin(e.sessionContext.httpRequest).remoteAddress,delete e.sessionContext),e.exception&&(e.exceptionName=e.exception.name,e.exceptionMessage=e.exception.message,e.exceptionStack=e.exception.stack,delete e.exception),e.task&&(e.taskId=e.task._id,delete e.task),e.rpc&&(e.rpc.acsRequest?(e.acsRequestId=e.rpc.id,e.acsRequestName=e.rpc.acsRequest.name,e.rpc.acsRequest.commandKey&&(e.acsRequestCommandKey=e.rpc.acsRequest.commandKey)):e.rpc.cpeRequest?(e.cpeRequestId=e.rpc.id,"Inform"===e.rpc.cpeRequest.name?(e.informEvent=e.rpc.cpeRequest.event.join(","),e.informRetryCount=e.rpc.cpeRequest.retryCount):(e.cpeRequestName=e.rpc.cpeRequest.name,e.rpc.cpeRequest.commandKey&&(e.cpeRequestCommandKey=e.rpc.cpeRequest.commandKey))):e.rpc.cpeFault&&(e.acsRequestId=e.rpc.id,e.cpeFaultCode=e.rpc.cpeFault.detail.faultCode,e.cpeFaultString=e.rpc.cpeFault.detail.faultString),delete e.rpc),e.fault&&(e.faultCode=e.fault.code,e.faultMessage=e.fault.message,delete e.fault),e.context&&(e.remoteAddress=getRequestOrigin(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,r]of Object.entries(e))null==r&&delete e[t];return e}function formatJson(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(flatten(e))}${os.EOL}`}return`${JSON.stringify(flatten(e))}${os.EOL}`}function formatSimple(e,t){const r={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};flatten(e);let s="";e.remoteAddress&&(s=e.deviceId&&r.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:`${e.remoteAddress}: `);const n=Object.keys(e);let i="";const a=[];for(const t of n)r[t]||a.push(`${t}=${JSON.stringify(e[t])}`);if(a.length&&(i=`; ${a.join(" ")}`),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${i}${os.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${i}${os.EOL}`}function log(e){e.timestamp=(new Date).toISOString(),"json"===LOG_FORMAT?(e=Object.assign({},defaultMeta,e),logStream.write(formatJson(e,LOG_SYSTEMD))):logStream.write(formatSimple(e,LOG_SYSTEMD))}function info(e){e.severity="info",log(e)}function warn(e){e.severity="warn",log(e)}function error(e){e.severity="error",log(e)}function accessLog(e){e.timestamp=(new Date).toISOString(),"json"===ACCESS_LOG_FORMAT?(Object.assign(e,defaultMeta),accessLogStream.write(formatJson(e,ACCESS_LOG_SYSTEMD))):accessLogStream.write(formatSimple(e,ACCESS_LOG_SYSTEMD))}function accessInfo(e){e.severity="info",accessLog(e)}function accessWarn(e){e.severity="warn",accessLog(e)}let respawnTimestamp=0,crashes=[];function fork(){const e=cluster.fork();return e.on("error",t=>{if("EPIPE"!==t.code)throw t;setTimeout(()=>{if(!e.isDead())throw t},50)}),e}function restartWorker(e,t,r){const s={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(s.exitCode=t),null!=r&&(s.signal=r),error(s);const n=Date.now();crashes.push(n);let i=0,a=0,o=0;if(crashes=crashes.filter(e=>{if(e>n-6e4)++i;else if(e>n-12e4)++a;else{if(!(e>n-18e4))return!1;++o}return!0}),i>5&&a>5&&o>5){process.exitCode=1,cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill();error({message:"Too many crashes, exiting",pid:process.pid})}else(respawnTimestamp=Math.max(n,respawnTimestamp+2e3))!==n?setTimeout(()=>{process.exitCode||fork()},respawnTimestamp-n):fork()}function start(e,t,r){cluster.on("listening",(e,s)=>{4!==s.addressType&&6!==s.addressType||s.address!==r||s.port!==t||info({message:"Worker listening",pid:e.process.pid,address:s.address,port:s.port})}),cluster.on("exit",restartWorker),e||(e=Math.max(2,os.cpus().length));for(let t=0;t<e;++t)fork()}function stop(){cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill()}const worker=cluster.worker;let server,listener;function closeServer(e,t){server?(setTimeout(()=>{if(!t)return;server.removeListener("request",listener),server.setTimeout(1);const e=t;t=null,setTimeout(e,1e3)},e).unref(),server.close(()=>{if(!t)return;const e=t;t=null,setTimeout(e,50)})):t()}function start$1(e,t,r,s,n,i=-1){if(listener=s,r&&r.key&&r.cert){const e={key:r.key.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim()))),cert:r.cert.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim())))};server=https.createServer(e,listener),null!=n&&server.on("secureConnection",n)}else server=http.createServer(listener),null!=n&&server.on("connection",n);i>=0&&(server.keepAliveTimeout=i),server.listen(e,t)}function stop$1(){return new Promise((e,t)=>{setTimeout(()=>{t(new Error("Could not close server in a timely manner"))},3e4).unref(),closeServer(2e4,e)})}function interpretEscapes(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,(e,r)=>{const s=r.charAt(0),n=r.slice(1);return"u"===s?String.fromCharCode(parseInt(n,16)):t.hasOwnProperty(s)?t[s]:s})}function map(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=map(e[s],t);n!==e[s]&&((r=r||e.slice())[s]=n)}return t(r||e)}async function mapAsync(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=await mapAsync(e[s],t);n!==e[s]&&((r=r||e.slice())[s]=n)}return t(r||e)}function binaryLeft(e,t){return parsimmon.seqMap(t,parsimmon.seq(e,t).many(),(e,t)=>t.reduce((e,t)=>{const[r,s]=t;return Array.isArray(e)&&r===e[0]?e.concat([s]):Array.isArray(s)&&r===s[0]?[r,e].concat(s.slice(1)):[r,e,s]},e))}const lang=parsimmon.createLanguage({ComparisonOperator:function(){return parsimmon.alt(parsimmon.string(">="),parsimmon.string("<>"),parsimmon.string("<="),parsimmon.string("="),parsimmon.string(">"),parsimmon.string("<")).skip(parsimmon.optWhitespace)},LikeOperator:function(){return parsimmon.alt(parsimmon.regexp(/like/i).result("LIKE").desc("LIKE"),parsimmon.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},IsNullOperator:function(){return parsimmon.alt(parsimmon.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),parsimmon.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NotOperator:function(){return parsimmon.regexp(/not/i).result("NOT").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("NOT")},AndOperator:function(){return parsimmon.regexp(/and/i).result("AND").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("AND")},OrOperator:function(){return parsimmon.regexp(/or/i).result("OR").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("OR")},Parameter:function(e){return parsimmon.alt(parsimmon.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(parsimmon.string("{").skip(parsimmon.optWhitespace),parsimmon.string("}"))).atLeast(1).map(e=>["PARAM",e.length>1?["||"].concat(e):e[0]]).skip(parsimmon.optWhitespace).desc("parameter")},StringValueSql:function(){return parsimmon.regexp(/'([^']*)'/,1).atLeast(1).skip(parsimmon.optWhitespace).map(e=>e.join("'")).desc("string")},StringValueJs:function(){return parsimmon.regexp(/"((?:\\.|.)*?)"/,1).skip(parsimmon.optWhitespace).map(interpretEscapes).desc("string")},NumberValue:function(){return parsimmon.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).skip(parsimmon.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return parsimmon.alt(parsimmon.regexp(/true/i).result(!0).desc("TRUE"),parsimmon.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NullValue:function(){return parsimmon.regexp(/null/i).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return parsimmon.seqMap(parsimmon.regexp(/([a-zA-Z0-9_]+)/,1).skip(parsimmon.optWhitespace).desc("function"),e.ValueExpression.sepBy(parsimmon.string(",").skip(parsimmon.optWhitespace)).wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace)),(e,t)=>["FUNC",e.toUpperCase()].concat(t))},Value:function(e){return parsimmon.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue)},ValueExpression:function(e){return binaryLeft(parsimmon.string("||").skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("+"),parsimmon.string("-")).skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("*"),parsimmon.string("/")).skip(parsimmon.optWhitespace),parsimmon.alt(e.Value,e.Parameter,e.Expression.wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace))))))},Comparison:function(e){return parsimmon.alt(parsimmon.seqMap(e.ValueExpression,e.IsNullOperator,(e,t)=>[t,e]),parsimmon.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,(e,t,r)=>[t,e,r]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(parsimmon.regexp(/escape/i).result("ESCAPE").skip(parsimmon.whitespace).desc("ESCAPE")),e.ValueExpression,(e,t,r,s)=>[t,e,r,s]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,(e,t,r)=>[t,e,r]))},Expression:function(e){return binaryLeft(e.OrOperator,binaryLeft(e.AndOperator,(t=e.NotOperator,r=e.Comparison.or(e.ValueExpression),parsimmon.seq(t,r).or(r)))).trim(parsimmon.optWhitespace);var t,r}});function parse(e){return e?lang.Expression.tryParse(e):null}function stringify(e,t=0){if(!Array.isArray(e))return JSON.stringify(e);const r={OR:10,AND:11,NOT:12,"=":20,"<>":20,">":20,">=":20,"<":20,"<=":20,LIKE:20,"NOT LIKE":20,"IS NULL":20,"IS NOT NULL":20,"||":30,"+":31,"-":31,"*":32,"/":32},s=e[0].toUpperCase();function n(e){return r[s]<=t?`(${e})`:e}if("FUNC"===s)return n(`${e[1]}(${e.slice(2).map(e=>stringify(e)).join(", ")})`);if("PARAM"===s)return"string"==typeof e[1]?n(e[1]):Array.isArray(e[1])&&"||"===e[1][0]?n(e[1].slice(1).map(e=>"string"==typeof e?e:`{${stringify(e)}}`).join("")):n(`{${stringify(e[1])}}`);if("IS NULL"===s||"IS NOT NULL"===s)return n(`${stringify(e[1],r[s])} ${s}`);if("LIKE"===s||"NOT LIKE"===s)return e[3]?n(`${stringify(e[1],r[s])} ${s} ${stringify(e[2],r[s])} ESCAPE ${stringify(e[3],r[s])}`):n(`${stringify(e[1],r[s])} ${s} ${stringify(e[2],r[s])}`);if(s in r){const t=e.slice(1).map((t,s)=>stringify(t,r[e[0]]+Math.min(s-1,0)));return n("NOT"===s?`${s} ${t[0]}`:t.join(` ${s} `))}throw new Error(`Unrecognized operator ${e[0]}`)}function parseLikePattern(e,t){const r=e.split("");for(let e=0;e<r.length;++e){const s=r[e];if(s===t)r[e]=r[e+1]||"",r[e+1]="";else if("_"===s)r[e]="\\_";else if("%"===s)for(r[e]="\\%";"%"===r[e+1];)r[++e]=""}return r.filter(e=>e)}const isArray=Array.isArray,regExpCache=new WeakMap,REDUCE_SKIP={};function reduce(e,t){let r=!0;for(;r;){r=!1;for(let s=2;s<e.length;++s){const n=t(e[s-1],e[s],s-2);n!==REDUCE_SKIP&&(r=!0,(e=e.slice()).splice(s-1,2,n))}}return 2===e.length?e[1]:e}function likePatternToRegExp(e,t="",r=""){const s={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let n=parseLikePattern(e,t);if(!n.length)return new RegExp("^$",r);(n=n.map(e=>s[e]||e))[0]=".*"===n[0]?"":"^"+n[0];const i=n.length-1;return n[i]=[".*",""].includes(n[i])?"":n[i]+"$",new RegExp(n.join(""),r)}function evalExp(e){if("AND"===e[0])return reduce(e,(e,t)=>isArray(e)?isArray(t)?REDUCE_SKIP:t?e:t:e?t:e);if("OR"===e[0])return reduce(e,(e,t)=>isArray(e)?isArray(t)?REDUCE_SKIP:t||e:e||t);if("NOT"===e[0]){if(!isArray(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return isArray(e[1])?e:null==e[1]||null;if("IS NOT NULL"===e[0])return isArray(e[1])?e:null!=e[1]||null;if("LIKE"===e[0]){if(isArray(e[1])||isArray(e[2])||isArray(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=regExpCache.get(e);return t||(t=likePatternToRegExp(e[2],e[3]),regExpCache.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(isArray(e[1])||isArray(e[2])||isArray(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=regExpCache.get(e);return t||(t=likePatternToRegExp(e[2],e[3]),regExpCache.set(e,t)),!t.test(e[1])}if("="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]===e[2];if("<>"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]!==e[2];if(">"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]>e[2];if(">="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]>=e[2];if("<"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]<e[2];if("<="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]<=e[2];if("*"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:e*t);if("/"===e[0])return reduce(e,(e,t,r)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:0===r?e/t:e*t);if("+"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:e+t);if("-"===e[0])return reduce(e,(e,t,r)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:0===r?e-t:e+t);if("||"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:`${e}${t}`)}return e}function evaluate(e,t,r,s){return map(e,e=>{if(s&&(e=s(e)),!isArray(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(r)return r}else if("UPPER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!isArray(e[1])){let r;return null==(r="function"==typeof t?t(e[1]):t[e[1]])?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return evalExp(e)})}async function evaluateAsync(e,t,r,s){return mapAsync(e,async e=>{if(s&&(e=await s(e)),!isArray(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(r)return r}else if("UPPER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!isArray(e[1])){let r=t[e[1]];return null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return evalExp(e)})}function and(e,t){if(!isArray(e))return e?t:e;if(!isArray(t))return t?e:t;let r=["AND"];return"AND"===e[0]?r=r.concat(e.slice(1)):r.push(e),"AND"===t[0]?r=r.concat(t.slice(1)):r.push(t),r}function or(e,t){if(!isArray(e))return e||t;if(!isArray(t))return t||e;let r=["OR"];return"OR"===e[0]?r=r.concat(e.slice(1)):r.push(e),"OR"===t[0]?r=r.concat(t.slice(1)):r.push(t),r}function extractParams(e){const t=new Set;return map(e,e=>(isArray(e)&&"PARAM"===e[0]&&t.add(e[1]),e)),Array.from(t)}const isArray$1=Array.isArray;function processDeviceFilter(e){return map(e,e=>{if(!isArray$1(e))return e;if("PARAM"===e[0]){const t=e[1];if("DeviceID.ID"===t)return["PARAM","_id"];if("DeviceID"===t)return["PARAM","_deviceId"];if(t.startsWith("DeviceID."))return["PARAM","_deviceId._"+t.slice(9)];if("Events.Inform"===t)return["PARAM","_lastInform"];if("Events.Registered"===t)return["PARAM","_registered"];if("Events.0_BOOTSTRAP"===t)return["PARAM","_lastBootstrap"];if("Events.1_BOOT"===t)return["PARAM","_lastBoot"]}else if(isArray$1(e[1])&&"PARAM"===e[1][0]&&e[1][1].startsWith("Tags.")){const t=e[1][1].slice(5);if("IS NULL"===e[0])return["<>",["PARAM","_tags"],t];if("IS NOT NULL"===e[0])return["=",["PARAM","_tags"],t];if("="===e[0]&&!0===e[2])return["=",["PARAM","_tags"],t];if("<>"===e[0]&&!0!==e[2])return["=",["PARAM","_tags"],t]}else if(["=","<>",">",">=","<","<=","LIKE","NOT LIKE","IS NULL","IS NOT NULL"].includes(e[0])){let t=map(e,e=>isArray$1(e)&&"PARAM"===e[0]&&"string"==typeof e[1]&&!e[1].startsWith("_")?["PARAM",`${e[1]}._value`]:e);if("number"==typeof t[2]){const e=t.slice();e[2]=new Date(t[2]),t=["OR",t,e]}return t}return e})}function processTasksFilter(e){return map(e,e=>{if(!isArray$1(e))return e;if(["=","<>",">",">=","<","<="].includes(e[0])){const t=e.slice();return"PARAM"===t[1][0]&&"_id"===t[1][1]?t[2]=new mongodb.ObjectID(t[2]):"PARAM"===t[1][0]&&"timestamp"===t[1][1]?t[2]=new Date(t[2]):"PARAM"===t[1][0]&&"expiry"===t[1][1]&&(t[2]=new Date(t[2])),t}return e})}function processFaultsFilter(e){return map(e,e=>{if(!isArray$1(e))return e;if(["=","<>",">",">=","<","<="].includes(e[0])){const t=e.slice();return"PARAM"===t[1][0]&&"timestamp"===t[1][1]?t[2]=new Date(t[2]):"PARAM"===t[1][0]&&"expiry"===t[1][1]&&(t[2]=new Date(t[2])),t}return e})}function filterToMongoQuery(e){const t={OR:0,AND:0,NOT:0,"=":1,"<>":1,">":1,">=":1,"<":1,"<=":1,LIKE:1,"NOT LIKE":1,"IS NULL":1,"IS NOT NULL":1};const r=evaluate(e,null,Date.now());if(!isArray$1(r)){if(!0===r)return{};throw new Error("Primitives are not valid queries")}return function e(r,s,n={}){const i=r[0];if(0===t[i]){for(let e=1;e<r.length;++e)if(!isArray$1(r[e])||null==t[r[e][0]])throw new Error(`Invalid expression in ${i} clause`);if(!s&&"AND"===i||s&&"OR"===i){n.$and=n.$and||[];for(let t=1;t<r.length;++t)n.$and.push(e(r[t],s))}else if(!s&&"OR"===i||s&&"AND"===i){n.$or=n.$or||[];for(let t=1;t<r.length;++t)n.$or.push(e(r[t],s))}else"NOT"===i&&e(r[1],!s,n)}else{if(1!==t[i])throw new Error(`Unrecognized operator ${i}`);if(isArray$1(r[2]))throw new Error(`Right operand of ${i} clause is not a primitive`);if(["LIKE","NOT LIKE"].includes(i)&&isArray$1(r[1])&&"FUNC"===r[1][0]&&["UPPER","LOWER"].includes(r[1][1])){if("UPPER"===r[1][1]&&r[2]!==r[2].toUpperCase()||"LOWER"===r[1][1]&&r[2]!==r[2].toLowerCase())throw new Error(`Cannot compare ${r[1][1]}() against non-${r[1][1].toLowerCase()}case pattern`)}else if(!isArray$1(r[1])||"PARAM"!==r[1][0])throw new Error(`Left operand of ${i} clause is not a parameter`);if("="===i){const e=r[1][1],t=n[e]=n[e]||{};s?t.$ne=r[2]:t.$eq=r[2]}else if("<>"===i){const e=r[1][1];let t=n[e]=n[e]||{};s&&(t=t.$not=t.$not||{}),t.$ne=r[2],"_tags"!==e&&(t.$exists=!0)}else if(">"===i){const e=r[1][1];let t=n[e]=n[e]||{};s&&(t=t.$not=t.$not||{}),t.$gt=r[2]}else if(">="===i){const e=r[1][1];let t=n[e]=n[e]||{};s&&(t=t.$not=t.$not||{}),t.$gte=r[2]}else if("<"===i){const e=r[1][1];let t=n[e]=n[e]||{};s&&(t=t.$not=t.$not||{}),t.$lt=r[2]}else if("<="===i){const e=r[1][1];let t=n[e]=n[e]||{};s&&(t=t.$not=t.$not||{}),t.$lte=r[2]}else if("IS NULL"===i)n[r[1][1]]={$exists:s};else if("IS NOT NULL"===i)n[r[1][1]]={$exists:!s};else{let e,t;"NOT LIKE"===i&&(s=!s),"FUNC"===r[1][0]&&"UPPER"===r[1][1]?(e=r[1][2][1],t="i"):"FUNC"===r[1][0]&&"LOWER"===r[1][1]?(e=r[1][2][1],t="i"):(e=r[1][1],t="");const a=likePatternToRegExp(r[2],r[3],t);n[e]=s?{$not:a}:a}}return n}(r,!1)}function processDeviceProjection(e){if(!e)return e;const t={};for(const[r,s]of Object.entries(e))"DeviceID.ID"===r?t._id=1:r.startsWith("DeviceID")?(t["_deviceId._SerialNumber"]=s,t["_deviceId._OUI"]=s,t["_deviceId._ProductClass"]=s,t["_deviceId._Manufacturer"]=s):r.startsWith("Tags")?t._tags=s:r.startsWith("Events")?(t._lastInform=s,t._registered=s,t._lastBoot=s,t._lastBootstrap=s):t[r]=s;return t}function processDeviceSort(e){if(!e)return e;const t={};for(const[r,s]of Object.entries(e))"DeviceID.ID"===r?t._id=s:r.startsWith("DeviceID.")?t[`_deviceId._${r.slice(9)}`]=s:"Events.Inform"===r?t._lastInform=s:"Events.Registered"===r?t._registered=s:"Events.1_BOOT"===r?t._lastBoot=s:"Events.0_BOOTSTRAP"===r?t._lastBootstrap=s:t[`${r}._value`]=s;return t}function parseDate(e){const t=+e;return isNaN(t)?""+e:t}function flattenDevice(e){const t={};return function e(t,r,s,n){for(const[i,a]of Object.entries(t)){if(!r)if("_lastInform"===i)s["Events.Inform"]={value:[parseDate(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_registered"===i)s["Events.Registered"]={value:[parseDate(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBoot"===i)s["Events.1_BOOT"]={value:[parseDate(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBootstrap"===i)s["Events.0_BOOTSTRAP"]={value:[parseDate(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_id"===i)s["DeviceID.ID"]={value:[a,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_deviceId"===i)s["DeviceID.Manufacturer"]={value:[a._Manufacturer,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.OUI"]={value:[a._OUI,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.ProductClass"]={value:[a._ProductClass,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.SerialNumber"]={value:[a._SerialNumber,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_tags"===i){s.Tags={writable:!1,writableTimestamp:n,object:!0,objectTimestamp:n};for(const e of a)s[`Tags.${e}`]={value:[!0,"xsd:boolean"],valueTimestamp:n,writable:!0,writableTimestamp:n,object:!1,objectTimestamp:n}}if(i.startsWith("_"))continue;let o=n;r?+t._timestamp>n&&(o=+t._timestamp):o=+(t._timestamp||1);const c={};null!=a._value?(c.value=[a._value instanceof Date?+a._value:a._value,a._type],c.valueTimestamp=+(a._timestamp||o),c.object=!1,c.objectTimestamp=o):null!=a._object&&(c.object=a._object,c.objectTimestamp=o),null!=a._writable&&(c.writable=a._writable,c.writableTimestamp=o);const l=r?`${r}.${i}`:i;s[l]=c,(c.object||null==a.object)&&e(a,l,s,o)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}function flattenFault(e){const t=Object.assign({},e);return t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function flattenTask(e){const t=Object.assign({},e);return t._id=""+t._id,t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function mongoQueryToFilter(e){return!Object.keys(e).length||function e(t){const r=[];for(const[s,n]of Object.entries(t))if("$"===s[0])if("$and"===s){const t=["AND"];for(const r of Object.values(n))t.push(e(r));r.push(t)}else{if("$or"!==s)throw new Error(`Operator ${s} not supported`);{const t=["OR"];for(const r of Object.values(n))t.push(e(r));r.push(t)}}else if("_tags"===s)if("object"==typeof n){if(isArray$1(n))throw new Error("Invalid type");if(n.hasOwnProperty("$ne"))r.push(["IS NULL",["PARAM",`Tags.${n.$ne}`]]);else{if(!n.hasOwnProperty("$eq"))throw new Error("Invalid tag query");r.push(["IS NOT NULL",["PARAM",`Tags.${n.$eq}`]])}}else r.push(["IS NOT NULL",["PARAM",`Tags.${n}`]]);else if(s.startsWith("Tags.")){let e;if("boolean"==typeof n)e=n;else if(n.hasOwnProperty("$eq"))e=!!n.$eq;else if(n.hasOwnProperty("$ne"))e=!n.$ne;else{if(!n.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!n.$exists}r.push([e?"IS NOT NULL":"IS NULL",["PARAM",s]])}else if("object"==typeof n){if(isArray$1(n))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(n)){let n;switch(t){case"$eq":n="=";break;case"$ne":n="<>";break;case"$lt":n="<";break;case"$lte":n="<=";break;case"$gt":n=">";break;case"$gte":n=">=";break;default:throw new Error(`Operator ${t} not supported`)}e.push([n,["PARAM",s],r])}if(1===e.length)r.push(e[0]);else{const t=["AND"];r.push(t.concat(e))}}else r.push(["=",["PARAM",s],n]);if(1===r.length)return r[0];return["AND"].concat(r)}(e)}function flattenPreset(e){const t=Object.assign({},e);if(t.precondition)try{parse(t.precondition)}catch(e){t.precondition=mongoQueryToFilter(JSON.parse(t.precondition)),t.precondition=t.precondition.length?stringify(t.precondition):""}if(t.events){const e=[];for(const[r,s]of Object.entries(t.events))e.push(s?r:`-${r}`);t.events=e.join(", ")}const r=t.configurations[0];return 1===t.configurations.length&&"provision"===r.type&&r.name&&r.name.length&&(t.provision=r.name,t.provisionArgs=r.args?JSON.stringify(r.args).slice(1,-1):""),delete t.configurations,t}function flattenFile(e){const t={};return t._id=e._id,e.metadata&&(t["metadata.fileType"]=e.metadata.fileType||"",t["metadata.oui"]=e.metadata.oui||"",t["metadata.productClass"]=e.metadata.productClass||"",t["metadata.version"]=e.metadata.version||""),t}function preProcessPreset(e){const t=Object.assign({},e);t.precondition||(t.precondition=""),parse(t.precondition),t.weight=parseInt(t.weight)||0;const r={};if(t.events)for(let e of t.events.split(",")){let t=!0;(e=e.trim()).startsWith("-")&&(t=!1,e=e.slice(1).trim()),e&&(r[e]=t)}if(t.events=r,!t.provision)throw new Error("Invalid preset provision");const s={type:"provision",name:t.provision,args:null};return t.provisionArgs&&(s.args=JSON.parse(`[${t.provisionArgs}]`)),delete t.provision,delete t.provisionArgs,t.configurations=[s],t}let clientPromise;const RESOURCE_COLLECTION={files:"fs.files"};function ensureIndexes(e){e.db().collection("cache").createIndex({expire:1},{expireAfterSeconds:0})}function getClient(){return clientPromise||(clientPromise=new Promise((e,t)=>{const r=""+get("MONGODB_CONNECTION_URL");mongodb.MongoClient.connect(r,{useNewUrlParser:!0},(r,s)=>{r?t(r):(ensureIndexes(s),e(s))})})),clientPromise}function query(e,t,r,s){let n;if(r=r||{},t=evaluate(t,null,Date.now()),Array.isArray(t)){if("devices"===e)t=processDeviceFilter(t);else if("tasks"===e)t=processTasksFilter(t);else if("faults"===e)t=processFaultsFilter(t);else if("users"===e){const e=extractParams(t);if(e.includes("password")||e.includes("salt"))return Promise.reject(new Error("Invalid users filter"))}n=filterToMongoQuery(t)}else if(null!=t&&!t)return Promise.resolve([]);return new Promise((t,i)=>{getClient().then(a=>{const o=a.db().collection(RESOURCE_COLLECTION[e]||e).find(n);if(r.projection){let t=r.projection;"devices"===e&&(t=processDeviceProjection(r.projection)),"presets"===e&&(t.configurations=1),o.project(t)}if("users"===e&&o.project({password:0,salt:0}),r.skip&&o.skip(r.skip),r.limit&&o.limit(r.limit),r.sort){let t=Object.entries(r.sort).sort((e,t)=>Math.abs(t[1])-Math.abs(e[1])).reduce((e,[t,r])=>Object.assign(e,{[t]:Math.min(Math.max(r,-1),1)}),{});"devices"===e&&(t=processDeviceSort(t)),o.sort(t)}s?o.forEach(t=>{"devices"===e?t=flattenDevice(t):"faults"===e?t=flattenFault(t):"tasks"===e?t=flattenTask(t):"presets"===e?t=flattenPreset(t):"files"===e&&(t=flattenFile(t)),s(t)},e=>{e?i(e):t()}):o.toArray((r,s)=>r?i(r):("devices"===e?s=s.map(e=>flattenDevice(e)):"faults"===e?s=s.map(e=>flattenFault(e)):"tasks"===e?s=s.map(e=>flattenTask(e)):"presets"===e?s=s.map(e=>flattenPreset(e)):"files"===e&&(s=s.map(e=>flattenFile(e))),t(s)))})})}function count(e,t){let r;if(t=evaluate(t,null,Date.now()),Array.isArray(t))"devices"===e?t=processDeviceFilter(t):"tasks"===e?t=processTasksFilter(t):"faults"===e&&(t=processFaultsFilter(t)),r=filterToMongoQuery(t);else if(null!=t&&!t)return Promise.resolve(0);return new Promise((t,s)=>{getClient().then(n=>{n.db().collection(RESOURCE_COLLECTION[e]||e).find(r).count((e,r)=>{e?s(e):t(r)})})})}function updateDeviceTags(e,t){return new Promise((r,s)=>{const n=[],i=[],a=/^[0-9a-zA-Z_]+$/;for(let[e,r]of Object.entries(t))if(e=e.trim(),r){if(!e.match(a))return void s(new Error(`Invalid tag '${e}'`));n.push(e)}else i.push(e);getClient().then(t=>{const a=t.db().collection("devices"),o={};n&&n.length&&(o.$addToSet={_tags:{$each:n}}),i&&i.length&&(o.$pullAll={_tags:i}),a.updateOne({_id:e},o,e=>{e?s(e):r()})}).catch(s)})}function putResource(e,t,r){return new Promise((s,n)=>{getClient().then(i=>{i.db().collection(RESOURCE_COLLECTION[e]||e).replaceOne({_id:t},r,{upsert:!0},e=>{e?n(e):s()})}).catch(n)})}function deleteResource(e,t){return new Promise((r,s)=>{getClient().then(n=>{n.db().collection(RESOURCE_COLLECTION[e]||e).deleteOne({_id:t},e=>{e?s(e):r()})}).catch(s)})}function putPreset(e,t){return putResource("presets",e,t=preProcessPreset(t))}function deletePreset(e){return deleteResource("presets",e)}function putProvision(e,t){t.script||(t.script="");try{new vm.Script(`"use strict";(function(){\n${t.script}\n})();`)}catch(e){return Promise.reject(e)}return putResource("provisions",e,t)}function deleteProvision(e){return deleteResource("provisions",e)}function putVirtualParameter(e,t){t.script||(t.script="");try{new vm.Script(`"use strict";(function(){\n${t.script}\n})();`)}catch(e){return Promise.reject(e)}return putResource("virtualParameters",e,t)}function deleteVirtualParameter(e){return deleteResource("virtualParameters",e)}function putConfig(e,t){return putResource("config",e,t)}function deleteConfig(e){return deleteResource("config",e)}function putPermission(e,t){return putResource("permissions",e,t)}function deletePermission(e){return deleteResource("permissions",e)}function putUser(e,t){return new Promise((r,s)=>{getClient().then(n=>{n.db().collection("users").updateOne({_id:e},{$set:t},{upsert:!0},e=>{e?s(e):r()})}).catch(s)})}function deleteUser(e){return deleteResource("users",e)}function putFile(e,t,r){return new Promise((s,n)=>{getClient().then(i=>{const a=new mongodb.GridFSBucket(i.db()).openUploadStreamWithId(e,e,{metadata:t});a.on("error",n),r.on("error",n),a.on("finish",s),r.pipe(a)}).catch(n)})}function deleteFile(e){return new Promise((t,r)=>{getClient().then(s=>{new mongodb.GridFSBucket(s.db()).delete(e,e=>{e?r(e):t()})}).catch(r)})}function deleteFault(e){return deleteResource("faults",e)}function deleteTask(e){return deleteResource("tasks",e)}async function disconnect(){clientPromise&&await(await clientPromise).close()}const MAX_CACHE_TTL=+get("MAX_CACHE_TTL");let clientPromise$1,mongoCollection,mongoTimeOffset=0;async function connect(){const e=""+get("MONGODB_CONNECTION_URL");clientPromise$1=mongodb.MongoClient.connect(e,{useNewUrlParser:!0});const t=(await clientPromise$1).db();mongoCollection=t.collection("cache"),await mongoCollection.createIndex({expire:1},{expireAfterSeconds:0});const r=Date.now(),s=await t.command({hostInfo:1});mongoTimeOffset=s.system.currentTime.getTime()-r}async function disconnect$1(){clientPromise$1&&await(await clientPromise$1).close()}async function get$1(e){const t=new Date(Date.now()-mongoTimeOffset);if(Array.isArray(e)){const r=await mongoCollection.find({_id:{$in:e}}).toArray(),s={};e.forEach((e,t)=>{s[e]=t});const n=[];return r.forEach(e=>{e.expire>t&&(n[s[e._id]]=e.value)}),n}{const r=await mongoCollection.findOne({_id:{$in:[e]}});return r&&r.expire>t?r.value:null}}async function del(e){Array.isArray(e)?await mongoCollection.deleteMany({_id:{$in:e}}):await mongoCollection.deleteOne({_id:e})}async function set(e,t,r=MAX_CACHE_TTL){const s=new Date(Date.now()-mongoTimeOffset+1e3*r);await mongoCollection.replaceOne({_id:e},{_id:e,value:t,expire:s},{upsert:!0})}async function lock(e,t){const r=Math.random().toString(36).slice(2);const s=new Date(Date.now()-mongoTimeOffset),n=new Date(Date.now()-mongoTimeOffset+1e3*t);try{await mongoCollection.updateOne({_id:e,expire:{$lte:s}},{$set:{value:r,expire:n}},{upsert:!0})}catch(r){if(r&&11e3===r.code)return await new Promise(e=>setTimeout(e,200)),lock(e,t)}return async function(t){if(t){const s=new Date(Date.now()-mongoTimeOffset+1e3*t);if(1!==(await mongoCollection.updateOne({_id:e,value:r},{expire:s})).result.n)throw new Error("Lock expired")}else if(1!==(await mongoCollection.deleteOne({_id:e,value:r})).result.n)throw new Error("Lock expired")}}const ARRAY_TYPE="[object Array]",DATE_TYPE="[object Date]",typeOf=e=>Object.prototype.toString.call(e);function escapeRegExp(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}const interval=setInterval(()=>{},12e4);let tasksCollection,devicesCollection,presetsCollection,objectsCollection,provisionsCollection,virtualParametersCollection,faultsCollection,filesCollection,operationsCollection,permissionsCollection,usersCollection,configCollection,clientPromise$2,client;async function connect$1(){clientPromise$2=mongodb.MongoClient.connect(""+get("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0});const e=(client=await clientPromise$2).db();tasksCollection=e.collection("tasks"),await tasksCollection.createIndex({device:1,timestamp:1}),devicesCollection=e.collection("devices"),presetsCollection=e.collection("presets"),objectsCollection=e.collection("objects"),filesCollection=e.collection("fs.files"),provisionsCollection=e.collection("provisions"),virtualParametersCollection=e.collection("virtualParameters"),faultsCollection=e.collection("faults"),operationsCollection=e.collection("operations"),permissionsCollection=e.collection("permissions"),usersCollection=e.collection("users"),configCollection=e.collection("config")}async function disconnect$2(){clientPromise$2&&await(await clientPromise$2).close()}async function getPresets(){return presetsCollection.find().toArray()}async function getObjects(){return objectsCollection.find().toArray()}async function getProvisions(){return provisionsCollection.find().toArray()}async function getVirtualParameters(){return virtualParametersCollection.find().toArray()}function getFiles(){return filesCollection.find().toArray()}async function getConfig(){return(await configCollection.find().toArray()).map(e=>({id:e._id,value:parse(e.value)}))}async function getPermissions(){return permissionsCollection.find().toArray()}async function getUsers(){return usersCollection.find().toArray()}function parseCron(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),later.schedule(later.parse.cron(t.join(" "),!0))}interval.unref&&interval.unref();const REFRESH=3e3,EVICT_TIMEOUT=6e4,snapshots=new Map;let currentSnapshot=null,nextRefresh=1;function computeHash(e){const t=crypto.createHash("md5");for(const r of e.presets)t.update(JSON.stringify(r.name)),t.update(JSON.stringify(r.channel)),t.update(JSON.stringify(r.schedule)),t.update(JSON.stringify(r.events)),t.update(JSON.stringify(r.precondition)),t.update(JSON.stringify(r.provisions));let r;r=Object.keys(e.provisions).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.provisions[s].md5);r=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.virtualParameters[s].md5);r=Object.keys(e.config).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.config[s]));r=Object.keys(e.files).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.files[s]));r=Object.keys(e.users).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.users[s]));const s=Object.keys(e.permissions).sort();t.update(JSON.stringify(s));for(const n of s){const s=Object.keys(e.permissions[n]).sort();t.update(JSON.stringify(s));for(const i of s){r=Object.keys(e.permissions[n][i]).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.permissions[n][i][s]))}}return t.digest("hex")}function flattenObject(e,t="",r={}){for(const s of Object.keys(e)){const n=e[s];"object"!=typeof n||Array.isArray(n)?r[`${t}${s}`]=n:flattenObject(n,`${t}${s}.`,r)}return r}async function fetchPresets(){const e=await getPresets();let t=await getObjects();t=t.map(e=>((e=flattenObject(e))._keys&&e._keys.length||(e._keys=Object.keys(e).filter(e=>!e.startsWith("_"))),e)),e.sort((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight);const r=[];for(const s of e){let e=null;if(s.schedule){const t=s.schedule.trim().split(/\s+/);e={md5:crypto.createHash("md5").update(s.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=parseCron(t.join(" "))}catch(t){warn({message:"Invalid preset schedule",preset:s._id,schedule:s.schedule}),e.schedule=!1}}const n=s.events||{};let i=!0;if(s.precondition){try{i=parse(s.precondition)}catch(e){i=mongoQueryToFilter(JSON.parse(s.precondition))}i=evaluate(i)}const a=s.provisions||[];for(const e of s.configurations)switch(e.type){case"age":a.push(["refresh",e.name,e.age]);break;case"value":a.push(["value",e.name,e.value]);break;case"add_tag":a.push(["tag",e.tag,!0]);break;case"delete_tag":a.push(["tag",e.tag,!1]);break;case"provision":a.push([e.name].concat(e.args||[]));break;case"add_object":for(const r of t)if(r._id===e.object){const t=r._keys.map(e=>`${e}:${JSON.stringify(r[e])}`).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,1]);for(const e in r)e.startsWith("_")||-1!==r._keys.indexOf(e)||a.push(["value",`${s}.${e}`,r[e]])}break;case"delete_object":for(const r of t)if(r._id===e.object){const t=r._keys.map(e=>`${e}:${JSON.stringify(r[e])}`).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,0])}break;default:throw new Error(`Unknown configuration type ${e.type}`)}r.push({name:s._id,channel:s.channel||"default",schedule:e,events:n,precondition:i,provisions:a})}return r}async function fetchProvisions(){const e=await getProvisions(),t={};for(const r of e)t[r._id]={},t[r._id].md5=crypto.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new vm.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function fetchVirtualParameters(){const e=await getVirtualParameters(),t={};for(const r of e)t[r._id]={},t[r._id].md5=crypto.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new vm.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function fetchPermissions(){const e=await getPermissions(),t={};for(const r of e)t[r.role]||(t[r.role]={}),t[r.role][r.access]||(t[r.role][r.access]={}),t[r.role][r.access][r.resource]={access:r.access,filter:parse(r.filter||"true")},r.validate&&(t[r.role][r.access][r.resource].validate=parse(r.validate));return t}async function fetchFiles(){const e=await getFiles(),t={};for(const r of e){const e=r.filename||r._id.toString();t[e]={},t[e].length=r.length,t[e].md5=r.md5,t[e].contentType=r.contentType}return t}async function fetchUsers(){const e=await getUsers(),t={};for(const r of e)t[r._id]={password:r.password,salt:r.salt,roles:r.roles.split(",").map(e=>e.trim())};return t}async function fetchConfig(){const e=await getConfig();e.sort((e,t)=>e.id>t.id?1:e.id<t.id?-1:0);const t={filters:{},device:{},index:{},overview:{}},r={};for(const s of e){const e=evaluate(s.value);if(r[s.id]=e,s.id.startsWith("ui.")){const r=s.id.split(".");r.shift();let n=t;for(;r.length>1;){const e=r.shift();"object"!=typeof n[e]&&(n[e]={}),n=n[e]}n[r[0]]=e}}return[r,t]}async function refresh(){if(!nextRefresh)return await new Promise(e=>setTimeout(e,20)),void await refresh();nextRefresh=0;const e=Date.now(),t=await get$1("presets_hash");if(currentSnapshot&&t===currentSnapshot)return void(nextRefresh=e+(REFRESH-e%REFRESH));const r=await lock("presets_hash_lock",3),s=await Promise.all([fetchPresets(),fetchProvisions(),fetchVirtualParameters(),fetchFiles(),fetchPermissions(),fetchUsers(),fetchConfig()]),n={presets:s[0],provisions:s[1],virtualParameters:s[2],files:s[3],permissions:s[4],users:s[5],config:s[6][0],ui:s[6][1]};if(currentSnapshot){const e=currentSnapshot,t=snapshots.get(e);setTimeout(()=>{snapshots.get(e)===t&&snapshots.delete(e)},EVICT_TIMEOUT).unref()}currentSnapshot=computeHash(n),snapshots.set(currentSnapshot,n),await set("presets_hash",currentSnapshot,300),await r(0),nextRefresh=e+(REFRESH-e%REFRESH)}async function getCurrentSnapshot(){return Date.now()>nextRefresh&&await refresh(),currentSnapshot}function getPresets$1(e){const t=snapshots.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.presets}function getConfig$1(e,t,r,s,n){const i=snapshots.get(e);if(!i)throw new Error("Cache snapshot does not exist");const a={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in a){let e;return r&&r.id?e=r.id:n&&(e=n(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),get(a[t],e)}return null}const o=evaluate(i.config[t],r,s,n);return Array.isArray(o)?null:o}function getConfigExpression(e,t){const r=snapshots.get(e);if(!r)throw new Error("Cache snapshot does not exist");return r.config[t]}function getUsers$1(e){const t=snapshots.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.users}function getPermissions$1(e){const t=snapshots.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.permissions}function getUiConfig(e){const t=snapshots.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.ui}function parseHeaderFeilds(e){const t={},r=e.split(",");let s;for(;null!=(s=r.shift());){const e=s.split("=",1)[0];if(e.length===s.length){if(!s.trim())continue;throw new Error("Unable to parse auth header")}let n=s.slice(e.length+1);if(/^\s*"/.test(n)){for(;!/[^\\]"\s*$/.test(n);){const e=r.shift();if(null==e)throw new Error("Unable to parse auth header");n+=","+e}try{n=JSON.parse(n)}catch(e){throw new Error("Unable to parse auth header")}}else n=n.trim();t[e.trim()]=n}return t}function parseWwwAuthenticateHeader(e){const t=(e=e.trim()).split(" ",1)[0],r={method:t};return Object.assign(r,parseHeaderFeilds(e.slice(t.length+1))),r}function basic(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function digest(e,t,r,s,n,i,a,o,c,l){const u=crypto.createHash("md5");u.update(e).update(":").update(t).update(":").update(r);const p=u.digest("hex"),d=crypto.createHash("md5");if(d.update(n).update(":").update(i),"auth-int"===a){const e=crypto.createHash("md5").update(o||"").digest("hex");d.update(":").update(e)}const f=d.digest("hex"),m=crypto.createHash("md5");return m.update(p).update(":").update(s),a&&m.update(":").update(l).update(":").update(c).update(":").update(a),m.update(":").update(f),m.digest("hex")}function solveDigest(e,t,r,s,n,i){const a=crypto.randomBytes(8).toString("hex"),o="00000001";let c;i.qop&&(c=-1!==i.qop.indexOf(",")?"auth":i.qop);const l=digest(e,i.realm,t,i.nonce,s,r,c,n,a,o);let u=`Digest username="${e}"`;return u+=`,realm="${i.realm}"`,u+=`,nonce="${i.nonce}"`,u+=`,uri="${r}"`,i.algorithm&&(u+=`,algorithm=${i.algorithm}`),c&&(u+=`,qop=${c},nc=${o},cnonce="${a}"`),u+=`,response="${l}"`,i.opaque&&(u+=`,opaque="${i.opaque}"`),u}function generateSalt(e){return new Promise((t,r)=>{crypto.randomBytes(e,(e,s)=>{e?r(e):t(s.toString("hex"))})})}function hashPassword(e,t){return new Promise((r,s)=>{crypto.pbkdf2(e,t,1e4,128,"sha512",(e,t)=>{e?s(e):r(t.toString("hex"))})})}const TIMEOUT=+get("EXT_TIMEOUT"),processes={},jobs=new Map;function messageHandler(e){const t=jobs.get(e[0]);t&&(jobs.delete(e[0]),t({fault:e[1],value:e[2]}))}function run(e){return new Promise(t=>{const r=e[0],s=crypto.randomBytes(8).toString("hex");if(jobs.set(s,t),!processes[r]){const e=child_process.spawn(ROOT_DIR+"/bin/genieacs-ext",[r],{stdio:["inherit","inherit","inherit","ipc"]});processes[r]=e,e.on("error",n=>{processes[r]===e&&(jobs.delete(s)&&t({fault:{code:n.name,message:n.message},value:null}),kill(processes[r]),delete processes[r])}),e.on("disconnect",()=>{processes[r]===e&&delete processes[r]}),e.on("message",messageHandler)}return setTimeout(()=>{jobs.delete(s)&&t({fault:{code:"timeout",message:"Extension timed out"},value:null})},TIMEOUT),!!processes[r].connected&&processes[r].send([s,e.slice(1)])})}function kill(e){return new Promise(t=>{const r=Date.now()+5e3;e.kill();const s=setInterval(()=>{e.connected?Date.now()>r&&(e.kill("SIGKILL"),clearInterval(s),t()):(clearInterval(s),t())},100)})}async function killAll(){await Promise.all(Object.entries(processes).map(([e,t])=>(delete processes[e],kill(t))))}const DEBUG_FILE=""+get("DEBUG_FILE"),DEBUG_FORMAT=""+get("DEBUG_FORMAT"),connectionTimestamps=new WeakMap;function getConnectionTimestamp(e){let t=connectionTimestamps.get(e);return t||(t=new Date,connectionTimestamps.set(e,t)),t}function outgoingHttpRequest(e,t,r,s){if(!DEBUG_FILE)return;const n=new Date,i=e.connection,a={event:"outgoing HTTP request",timestamp:n,remoteAddress:i.remoteAddress,deviceId:t,connection:getConnectionTimestamp(i),remotePort:r.port,method:r.method||"GET",url:r.path,headers:e.getHeaders(),body:s};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(a));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(a)+"\n")}}function outgoingHttpRequestError(e,t,r,s){if(!DEBUG_FILE)return;const n={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:r.hostname,deviceId:t,connection:null,remotePort:r.port,method:r.method,url:r.path,headers:e.getHeaders(),error:s.message};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(n));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(n)+"\n")}}function incomingHttpResponse(e,t,r){if(!DEBUG_FILE)return;const s={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.connection.remoteAddress,deviceId:t,connection:getConnectionTimestamp(e.connection),statusCode:e.statusCode,headers:e.headers,body:r};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(s));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(s)+"\n")}}function outgoingUdpMessage(e,t,r,s){if(!DEBUG_FILE)return;const n={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:t,remotePort:r,body:s};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(n));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(n)+"\n")}}async function extractAuth(e,t){let r,s;const n=await evaluateAsync(e,{},0,async e=>{if(!r&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:r}=await run(e.slice(2));return t?null:r}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(r=e[2]||"",s=e[3]||""),t}return e});return[r,s,n]}function httpGet(e,t,r,s){return new Promise((n,i)=>{const a=http.get(e,t=>{t.resume(),n({statusCode:t.statusCode,headers:t.headers}),r&&(outgoingHttpRequest(a,s,e,null),incomingHttpResponse(t,s,null))}).on("error",t=>{a.abort(),i(new Error("Device is offline")),r&&outgoingHttpRequestError(a,s,e,t)}).on("socket",e=>{e.setTimeout(t),e.on("timeout",()=>{a.abort()})})})}async function httpConnectionRequest(e,t,r,s,n,i){const a=url.parse(e);if("http:"!==a.protocol)throw new Error("Invalid connection request URL or protocol");let o,c,l;for(a.agent=new http.Agent({maxSockets:1,keepAlive:!0});!o||null!=c&&null!=l;){let e=a;if(o)if("Basic"===o.method){if(!r)throw new Error("Basic HTTP authentication not allowed");e=Object.assign({headers:{Authorization:basic(c||"",l||"")}},a)}else{if("Digest"!==o.method)throw new Error("Unrecognized auth method");e=Object.assign({headers:{Authorization:solveDigest(c,l,a.path,"GET",null,o)}},a)}let u=await httpGet(e,s,n,i);if(0===u.statusCode&&o&&(u=await httpGet(e,s,n,i)),0===u.statusCode)throw new Error("Device is offline");if(200===u.statusCode||204===u.statusCode)return;if(401!==u.statusCode||!u.headers["www-authenticate"])throw new Error(`Unexpected response code from device: ${u.statusCode}`);o=parseWwwAuthenticateHeader(u.headers["www-authenticate"]),[c,l,t]=await extractAuth(t,!1)}throw new Error("Incorrect connection request credentials")}async function udpConnectionRequest(e,t,r=0,s,n){const[i,a]=e.split(":",2),o=a?parseInt(a):80,c=Date.now(),l=dgram.createSocket({type:"udp4",reuseAddr:!0});let u,p;for(r&&l.bind({port:r,exclusive:!0}),[u,p,t]=await extractAuth(t,null),null==u&&(u=""),null==p&&(p="");null!=u&&null!=p;){const r=Math.trunc(c/1e3),a=Math.trunc(4294967295*Math.random()),d=crypto.randomBytes(8).toString("hex"),f=`GET ${`http://${e}?ts=${r}&id=${a}&un=${u}&cn=${d}&sig=${crypto.createHmac("sha1",p).update(`${r}${a}${u}${d}`).digest("hex")}`} HTTP/1.1\r\nHost: ${e}\r\n\r\n`,m=Buffer.from(f);for(let e=0;e<3;++e)await new Promise((e,t)=>{l.send(m,0,m.length,o,i,r=>{r?t(r):e(),s&&outgoingUdpMessage(i,n,o,f)})});[u,p,t]=await extractAuth(t,null)}l.close()}async function connectionRequest(e,t){if(!t){const r=await devicesCollection.findOne({_id:e});if(!r)throw new Error("No such device");t=flattenDevice(r)}let r,s,n,i;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(r=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(r=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const a=url.parse(r).host,o=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]){let r=e[1];if("id"===r)r="DeviceID.ID";else if("serialNumber"===r)r="DeviceID.SerialNumber";else if("productClass"===r)r="DeviceID.ProductClass";else if("oui"===r)r="DeviceID.OUI";else{if("remoteAddress"===r)return a;if("username"===r)return n;if("password"===r)return i}const s=t[r];if(s&&s.value)return s.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return a;if("USERNAME"===e[1])return n;if("PASSWORD"===e[1])return i}return e},c=await getCurrentSnapshot(),l=Date.now(),u=+getConfig$1(c,"cwmp.udpConnectionRequestPort",{},l,o),p=+getConfig$1(c,"cwmp.connectionRequestTimeout",{},l,o),d=!!getConfig$1(c,"cwmp.connectionRequestAllowBasicAuth",{},l,o);let f=getConfigExpression(c,"cwmp.connectionRequestAuth");void 0===f&&(f=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),f=evaluate(f,{},l,o);const m=!!getConfig$1(c,"cwmp.debug",{},l,o);let g;s&&(g=udpConnectionRequest(s,f,u,m,e));try{await httpConnectionRequest(r,f,d,p,m,e)}catch(e){if(!g)throw e;await g}}async function watchTask(e,t,r){if(await new Promise(e=>setTimeout(e,500)),!await tasksCollection.findOne({_id:t},{projection:{_id:1}}))return"completed";const s={_id:`${e}:task_${t}`};return await faultsCollection.findOne(s,{projection:{_id:1}})?"fault":(r-=500)<=0?"timeout":watchTask(e,t,r)}function sanitizeTask(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(typeOf(e.expiry)===DATE_TYPE||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`);break;case"refreshObject":case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property")}return e}async function insertTasks(e){if(e&&typeOf(e)!==ARRAY_TYPE)e=[e];else if(!e||0===e.length)return e||[];for(const t of e)sanitizeTask(t),t.uniqueKey&&await tasksCollection.deleteOne({device:t.device,uniqueKey:t.uniqueKey});return await tasksCollection.insertMany(e),e}async function deleteDevice(e){await Promise.all([tasksCollection.deleteMany({device:e}),devicesCollection.deleteOne({_id:e}),faultsCollection.deleteMany({_id:{$regex:`^${escapeRegExp(e)}\\:`}}),operationsCollection.deleteMany({_id:{$regex:`^${escapeRegExp(e)}\\:`}}),del(`${e}_tasks_faults_operations`)])}async function deleteFault$1(e){const t=e.split(":",1)[0],r=e.slice(t.length+1);await Promise.all([deleteFault(e),r.startsWith("task_")?deleteTask(new mongodb.ObjectID(r.slice(5))):null]),await del(`${t}_tasks_faults_operations`)}async function deleteResource$1(e,t){switch(e){case"devices":await deleteDevice(t);break;case"files":await deleteFile(t);break;case"faults":await deleteFault$1(t);break;case"provisions":await deleteProvision(t);break;case"presets":await deletePreset(t);break;case"virtualParameters":await deleteVirtualParameter(t);break;case"config":await deleteConfig(t);break;case"permissions":await deletePermission(t);break;case"users":await deleteUser(t)}await del("presets_hash")}async function postTasks(e,t,r,s){for(const r of t)delete r._id,r.device=e;const n=(t=await insertTasks(t)).map(e=>({_id:e._id,status:"pending"}));await del(`${e}_tasks_faults_operations`);try{await connectionRequest(e,s)}catch(e){return{connectionRequest:e.message,tasks:n}}const i=t[t.length-1];await watchTask(e,i._id,r);const a=[];for(const t of n)a.push(query("tasks",["=",["PARAM","_id"],t._id])),a.push(query("faults",["=",["PARAM","_id"],`${e}:task_${t._id}`]));const o=await Promise.all(a);for(const[e,t]of n.entries())0===o[2*e].length?t.status="done":1===o[2*e+1].length&&(t.status="fault",t.fault=o[2*e+1][0]),deleteTask(t._id);return{connectionRequest:"OK",tasks:n}}async function putResource$1(e,t,r){"presets"===e?await putPreset(t,r):"provisions"===e?await putProvision(t,r):"virtualParameters"===e?await putVirtualParameter(t,r):"config"===e?await putConfig(t,r):"permissions"===e?await putPermission(t,r):"users"===e&&(delete r.password,delete r.salt,await putUser(t,r)),await del("presets_hash")}function authLocal(e,t,r){return new Promise((s,n)=>{const i=getUsers$1(e)[t];i&&i.password?hashPassword(r,i.salt).then(e=>{e===i.password?s(!0):s(!1)}).catch(n):s(null)})}function ping(e,t){let r,s,n;switch(os.platform()){case"linux":r=`ping -w 1 -i 0.2 -c 3 ${e}`,s=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,n=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;case"freebsd":r=`ping -t 1 -c 3 ${e}`,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,n=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/;break;default:return t(new Error("Platform not supported"))}child_process.exec(r,(e,r)=>{let i;if(r){const e=r.match(s);if(e)i={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:+e[4],avg:+e[5],max:+e[6],mdev:+e[7]};else{const e=r.match(n);e&&(i={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}}t(e,i,r)})}const router=new Router;function logUnauthorizedWarning(e){e.message+=" not authorized",accessWarn(e)}const RESOURCE_DELETE=1,RESOURCE_PUT=2,RESOURCE_IDS={devices:"DeviceID.ID",presets:"_id",provisions:"_id",files:"_id",virtualParameters:"_id",config:"_id",permissions:"_id",users:"_id",faults:"_id",tasks:"_id"},resources={devices:1,presets:3,provisions:3,files:1,virtualParameters:3,config:3,permissions:3,users:3,faults:1,tasks:0};router.get("/devices/:id.csv",async e=>{const t=e.state.authorizer,r={message:"Query device (CSV)",context:e,id:e.params.id},s=and(t.getFilter("devices",2),["=",["PARAM",RESOURCE_IDS.devices],e.params.id]);if(!t.hasAccess("devices",2))return logUnauthorizedWarning(r),void(e.status=404);const n=await query("devices",s);if(n[0]){e.type="text/csv",e.attachment(`device-${e.params.id}-${(new Date).toISOString().replace(/[:.]/g,"")}.csv`),e.body=new stream.PassThrough,e.body.write("Parameter,Object,Object timestamp,Writable,Writable timestamp,Value,Value type,Value timestamp\n");for(const t of Object.keys(n[0]).sort()){const r=n[0][t],s=[t,r.object,r.objectTimestamp,r.writable,r.writableTimestamp,null!=r.value?`"${r.value[0].toString().replace(/"/g,'""')}"`:"",null!=r.value?r.value[1]:"",r.valueTimestamp];e.body.write(s.map(e=>null!=e?e:"").join(",")+"\n")}e.body.end(),accessInfo(r)}else e.status=404});for(const[e,t]of Object.entries(resources))router.head(`/${e}`,async(t,r)=>{const s=t.state.authorizer;let n=s.getFilter(e,1);t.request.query.filter&&(n=and(n,parse(t.request.query.filter)));const i={message:`Count ${e}`,context:t,filter:t.request.query.filter,count:null};if(!s.hasAccess(e,1))return logUnauthorizedWarning(i),void r();"tasks"!==e&&"faults"!==e||(n=and(n,["NOT",["<",["PARAM","expiry"],Date.now()+6e4]]));const a=await count(e,n);t.set("X-Total-Count",`${a}`),t.body="",i.count=a,accessInfo(i)}),router.get(`/${e}`,async(t,r)=>{const s=t.state.authorizer,n={};let i=s.getFilter(e,2);t.request.query.filter&&(i=and(i,parse(t.request.query.filter))),t.request.query.limit&&(n.limit=+t.request.query.limit),t.request.query.skip&&(n.skip=+t.request.query.skip),t.request.query.sort&&(n.sort=JSON.parse(t.request.query.sort)),t.request.query.projection&&(n.projection=t.request.query.projection.split(",").reduce((e,t)=>Object.assign(e,{[t]:1}),{}));const a={message:`Query ${e}`,context:t,filter:t.request.query.filter,limit:n.limit,skip:n.skip,sort:n.sort,projection:n.projection};if(!s.hasAccess(e,2))return logUnauthorizedWarning(a),void r();"tasks"!==e&&"faults"!==e||(i=and(i,["NOT",["<",["PARAM","expiry"],Date.now()+6e4]])),t.body=new stream.PassThrough,t.type="application/json";let o=0;t.body.write("[\n"),await query(e,i,n,e=>{t.body.write((o++?",":"")+JSON.stringify(e)+"\n")}),t.body.end("]"),accessInfo(a)}),router.get(`/${e}.csv`,async(t,r)=>{const s=t.state.authorizer,n={projection:{}};let i=s.getFilter(e,2);t.request.query.filter&&(i=and(i,parse(t.request.query.filter))),t.request.query.limit&&(n.limit=+t.request.query.limit),t.request.query.skip&&(n.skip=+t.request.query.skip),t.request.query.sort&&(n.sort=JSON.parse(t.request.query.sort));const a={message:`Query ${e} (CSV)`,context:t,filter:t.request.query.filter,limit:n.limit,skip:n.skip,sort:n.sort};if(!s.hasAccess(e,2))return logUnauthorizedWarning(a),void r();const o=JSON.parse(t.request.query.columns),c=Date.now();for(const[e,t]of Object.entries(o)){const r=evaluate(parse(t),null,c);o[e]=r;for(const e of extractParams(r))"string"==typeof e&&(n.projection[e]=1)}"tasks"!==e&&"faults"!==e||(i=and(i,["NOT",["<",["PARAM","expiry"],Date.now()+6e4]])),t.body=new stream.PassThrough,t.type="text/csv",t.attachment(`${e}-${new Date(c).toISOString().replace(/[:.]/g,"")}.csv`),t.body.write(Object.keys(o).map(e=>`"${e.replace(/"/,'""')}"`)+"\n"),await query(e,i,n,r=>{const s=Object.values(o).map(t=>{const s=evaluate(t,r,null,t=>{if(Array.isArray(t))if("PARAM"===t[0]){if("devices"===e&&"Tags"===t[1]){const e=[];for(const t in r)t.startsWith("Tags.")&&e.push(t.slice(5));return e.join(", ")}}else if("FUNC"===t[0]&&"DATE_STRING"===t[1]&&t[2]&&!Array.isArray(t[2]))return new Date(t[2]).toISOString();return t});return Array.isArray(s)||null==s?"":"string"==typeof s?`"${s.replace(/"/g,'""')}"`:s});t.body.write(s.join(",")+"\n")}),t.body.end(),accessInfo(a)}),router.head(`/${e}/:id`,async(t,r)=>{const s=t.state.authorizer,n={message:`Count ${e}`,context:t,filter:`${RESOURCE_IDS[e]} = "${t.params.id}"`},i=and(s.getFilter(e,2),["=",["PARAM",RESOURCE_IDS[e]],t.params.id]);if(!s.hasAccess(e,2))return logUnauthorizedWarning(n),void r();(await query(e,i)).length?(accessInfo(n),t.body=""):r()}),router.get(`/${e}/:id`,async(t,r)=>{const s=t.state.authorizer,n={message:`Query ${e}`,context:t,filter:`${RESOURCE_IDS[e]} = "${t.params.id}"`},i=and(s.getFilter(e,2),["=",["PARAM",RESOURCE_IDS[e]],t.params.id]);if(!s.hasAccess(e,2))return logUnauthorizedWarning(n),void r();const a=await query(e,i);a.length?(accessInfo(n),t.body=a[0]):r()}),1&t&&router.delete(`/${e}/:id`,async(t,r)=>{const s=t.state.authorizer,n={message:`Delete ${e}`,context:t,id:t.params.id},i=and(s.getFilter(e,3),["=",["PARAM",RESOURCE_IDS[e]],t.params.id]);if(!s.hasAccess(e,3))return logUnauthorizedWarning(n),void r();const a=await query(e,i);if(a.length)return s.getValidator(e,a[0])("delete")?(await deleteResource$1(e,t.params.id),accessInfo(n),void(t.body="")):(logUnauthorizedWarning(n),void(t.status=403));r()}),2&t&&router.put(`/${e}/:id`,async(t,r)=>{const s=t.state.authorizer,n=t.params.id,i={message:`Put ${e}`,context:t,id:n};if(!s.hasAccess(e,3))return logUnauthorizedWarning(i),void r();const a=t.request.body;if(!s.getValidator(e,a)("put"))return logUnauthorizedWarning(i),void(t.status=403);try{await putResource$1(e,n,a)}catch(e){return i.message+=" failed",accessWarn(i),t.body=`${e.name}: ${e.message}`,void(t.status=400)}accessInfo(i),t.body=""});router.put("/files/:id",async(e,t)=>{const r=e.state.authorizer,s=e.params.id,n={message:"Upload files",context:e,id:s,metadata:null};if(!r.hasAccess("files",3))return logUnauthorizedWarning(n),void t();const i={fileType:e.request.headers["metadata.filetype"]||"",oui:e.request.headers["metadata.oui"]||"",productClass:e.request.headers["metadata.productclass"]||"",version:e.request.headers["metadata.version"]||""};if(!r.getValidator("files",i)("put"))return logUnauthorizedWarning(n),void(e.status=403);try{await deleteFile(s)}catch(e){}await putFile(s,i,e.req),n.metadata=i,accessInfo(n),e.body=""}),router.post("/devices/:id/tasks",async(e,t)=>{const r=e.state.authorizer,s={message:"Commit tasks",context:e,deviceId:e.params.id,tasks:null},n=and(r.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!r.hasAccess("devices",3))return logUnauthorizedWarning(s),void t();const i=await query("devices",n);if(!i.length)return void t();const a=i[0],o=r.getValidator("devices",a);for(const t of e.request.body)if(!o("task",t))return logUnauthorizedWarning(s),void(e.status=403);const c=getConfig$1(e.state.configSnapshot,"cwmp.deviceOnlineThreshold",{},Date.now(),e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]){const t=a[e[1]];if(t&&t.value)return t.value[0]}else if("FUNC"===e[0]&&"REMOTE_ADDRESS"===e[1]){for(const e of["InternetGatewayDevice","Device"]){const t=a[`${e}.ManagementServer.ConnectionRequestURL`];if(t&&t.value)return url.parse(t.value[0]).host}return null}return e}),l=await postTasks(e.params.id,e.request.body,c,a);s.tasks=l.tasks.map(e=>e._id).join(","),accessInfo(s),e.set("Connection-Request",l.connectionRequest),e.body=l.tasks}),router.post("/devices/:id/tags",async(e,t)=>{const r=e.state.authorizer,s={message:"Update tags",context:e,deviceId:e.params.id,tags:e.request.body},n=and(r.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!r.hasAccess("devices",3))return logUnauthorizedWarning(s),void t();const i=await query("devices",n);if(i.length){if(!r.getValidator("devices",i[0])("tags",e.request.body))return logUnauthorizedWarning(s),void(e.status=403);try{await updateDeviceTags(e.params.id,e.request.body)}catch(t){return s.message+=" failed",accessWarn(s),e.body=t.message,void(e.status=400)}accessInfo(s),e.body=""}else t()}),router.get("/ping/:host",async e=>new Promise(t=>{ping(e.params.host,(r,s)=>{s?e.body=s:(e.status=500,e.body=`${r.name}: ${r.message}`),t()})})),router.put("/users/:id/password",async(e,t)=>{const r=e.state.authorizer,s=e.params.id,n={message:"Change password",context:e,username:s};if(e.state.user){if(!r.hasAccess("users",3))return logUnauthorizedWarning(n),void t()}else if(!await authLocal(e.state.configSnapshot,s,e.request.body.authPassword))return logUnauthorizedWarning(n),e.status=401,void(e.body="Authentication failed, check your username and password");const i=and(r.getFilter("users",3),["=",["PARAM",RESOURCE_IDS.users],s]),a=await query("users",i);if(!a.length)return void t();const o=e.request.body.newPassword;if(e.state.user){if(!r.getValidator("users",a[0])("password",{password:o}))return logUnauthorizedWarning(n),void(e.status=403)}const c=await generateSalt(64),l=await hashPassword(o,c);await putUser(s,{password:l,salt:c}),await del("presets_hash"),accessInfo(n),e.body=""});class Authorizer{constructor(e){this.permissionSets=e,this.validatorCache=new WeakMap,this.hasAccessCache=new Map,this.getFilterCache=new Map}hasAccess(e,t){const r=`${e}-${t}`;if(this.hasAccessCache.has(r))return this.hasAccessCache.get(r);let s=!1;for(const r of this.permissionSets)for(const n of r)if(n[e]&&n[e].access>=t){s=!0;break}return this.hasAccessCache.set(r,s),s}getFilter(e,t){const r=`${e}-${t}`;if(this.getFilterCache.has(r))return this.getFilterCache.get(r);let s=null;for(const r of this.permissionSets)for(const n of r)n[e]&&n[e].access>=t&&(s=or(s,n[e].filter));return this.getFilterCache.set(r,s),s}getValidator(e,t){if(this.validatorCache.has(t))return this.validatorCache.get(t);const r=[];for(const t of this.permissionSets)for(const s of t)s[e]&&s[e].access>=3&&s[e].validate&&r.push(s[e].validate);const s=(s,n,i)=>{if(!r.length)return!1;const a={mutationType:s,mutation:n,resourceType:e,object:t,options:i},o=evaluate(r.length>1?["OR",r]:r[0],e=>{const t=e.split(".",1)[0];e=e.slice(t.length+1);let r=null;if(["mutation","options"].includes(t)){r=a[t];for(const t of e.split("."))if(null==(r=null!=r&&"object"!=typeof r?null:r[t]))break}else a[t]&&(r=a[t][e]);return r},Date.now());return!Array.isArray(o)&&!!o};return this.validatorCache.set(t,s),s}getPermissionSets(){return this.permissionSets}}const BOOTSTRAP_SCRIPT='\nconst now = Date.now();\n\n// Clear cached data model to force a refresh\nclear("Device", now);\nclear("InternetGatewayDevice", now);\n'.trim(),DEFAULT_SCRIPT='\nconst hourly = Date.now(3600000);\n\n// Refresh basic parameters hourly\ndeclare("InternetGatewayDevice.DeviceInfo.HardwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.DeviceInfo.SoftwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID", {path: hourly, value: hourly});\n// Don\'t refresh password field periodically because CPEs always report blank passowrds for security reasons\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase", {path: hourly, value: 1});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress", {path: hourly, value: hourly});\n'.trim(),INFORM_SCRIPT='\n// Device ID as user name\nconst username = declare("DeviceID.ID", {value: 1}).value[0]\n\n// Password will be fixed a given device because Math.random() is seeded with devcie ID by default.\nconst password = Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER).toString(36);\n\nconst informInterval = 300;\n\n// Refresh values daily\nconst daily = Date.now(86400000);\n\n// Unique inform offset per device for better load distribution\nconst informTime = daily % 86400000;\n\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n\ndeclare("Device.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("Device.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("Device.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("Device.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("Device.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n'.trim();async function getStatus(){const e=await getCurrentSnapshot(),t=getUsers$1(e),r=getPresets$1(e),s=getUiConfig(e);return{users:!Object.keys(t).length,presets:!r.length,filters:!Object.keys(s.filters).length,device:!Object.keys(s.device).length,index:!Object.keys(s.index).length,overview:!Object.keys(s.overview).length}}async function seed(e){const t={},r=[];if(e.users&&(t.permissions=[{role:"admin",resource:"devices",access:3,validate:"true"},{role:"admin",resource:"faults",access:3,validate:"true"},{role:"admin",resource:"files",access:3,validate:"true"},{role:"admin",resource:"presets",access:3,validate:"true"},{role:"admin",resource:"provisions",access:3,validate:"true"},{role:"admin",resource:"config",access:3,validate:"true"},{role:"admin",resource:"permissions",access:3,validate:"true"},{role:"admin",resource:"users",access:3,validate:"true"},{role:"admin",resource:"virtualParameters",access:3,validate:"true"}],t.users=[{username:"admin",password:"admin",roles:["admin"]}]),e.filters&&(t.config=(t.config||[]).concat([{_id:"ui.filters.0.label",value:"'Serial number'"},{_id:"ui.filters.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.filters.0.type",value:"'string'"},{_id:"ui.filters.1.label",value:"'Product class'"},{_id:"ui.filters.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.filters.1.type",value:"'string'"},{_id:"ui.filters.2.label",value:"'Tag'"},{_id:"ui.filters.2.type",value:"'tag'"}])),e.device&&(t.config=(t.config||[]).concat([{_id:"ui.device.0.type",value:"'tags'"},{_id:"ui.device.1.type",value:"'ping'"},{_id:"ui.device.2.type",value:"'parameter-list'"},{_id:"ui.device.2.parameters.0.type",value:"'container'"},{_id:"ui.device.2.parameters.0.element",value:"'span.inform'"},{_id:"ui.device.2.parameters.0.label",value:"'Last inform'"},{_id:"ui.device.2.parameters.0.components.0.type",value:"'parameter'"},{_id:"ui.device.2.parameters.0.components.1.chart",value:"'online'"},{_id:"ui.device.2.parameters.0.components.1.type",value:"'overview-dot'"},{_id:"ui.device.2.parameters.0.components.2.type",value:"'summon-button'"},{_id:"ui.device.2.parameters.0.components.2.parameters.0",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.1",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.2",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.3",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.4",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID"},{_id:"ui.device.2.parameters.0.components.2.parameters.5",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase"},{_id:"ui.device.2.parameters.0.components.2.parameters.6",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName"},{_id:"ui.device.2.parameters.0.components.2.parameters.7",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.8",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress"},{_id:"ui.device.2.parameters.0.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.device.2.parameters.1.label",value:"'Serial number'"},{_id:"ui.device.2.parameters.1.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.device.2.parameters.2.label",value:"'Product class'"},{_id:"ui.device.2.parameters.2.parameter",value:"DeviceID.ProductClass"},{_id:"ui.device.2.parameters.3.label",value:"'OUI'"},{_id:"ui.device.2.parameters.3.parameter",value:"DeviceID.OUI"},{_id:"ui.device.2.parameters.4.label",value:"'Manufacturer'"},{_id:"ui.device.2.parameters.4.parameter",value:"DeviceID.Manufacturer"},{_id:"ui.device.2.parameters.5.label",value:"'Hardware version'"},{_id:"ui.device.2.parameters.5.parameter",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.6.label",value:"'Software version'"},{_id:"ui.device.2.parameters.6.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.7.label",value:"'MAC'"},{_id:"ui.device.2.parameters.7.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.MACAddress"},{_id:"ui.device.2.parameters.8.label",value:"'IP'"},{_id:"ui.device.2.parameters.8.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.device.2.parameters.9.label",value:"'WLAN SSID'"},{_id:"ui.device.2.parameters.9.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.device.2.parameters.10.label",value:"'WLAN passphrase'"},{_id:"ui.device.2.parameters.10.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.KeyPassphrase"},{_id:"ui.device.3.type",value:"'parameter-table'"},{_id:"ui.device.3.label",value:"'WLAN hosts'"},{_id:"ui.device.3.parameter",value:"InternetGatewayDevice.LANDevice.1.Hosts.Host"},{_id:"ui.device.3.childParameters.0.label",value:"'Host name'"},{_id:"ui.device.3.childParameters.0.parameter",value:"HostName"},{_id:"ui.device.3.childParameters.1.label",value:"'IP address'"},{_id:"ui.device.3.childParameters.1.parameter",value:"IPAddress"},{_id:"ui.device.3.childParameters.2.label",value:"'MAC address'"},{_id:"ui.device.3.childParameters.2.parameter",value:"MACAddress"},{_id:"ui.device.4.type",value:"'container'"},{_id:"ui.device.4.element",value:"'div'"},{_id:"ui.device.4.components.0.components.0",value:"'Faults'"},{_id:"ui.device.4.components.0.element",value:"'h3'"},{_id:"ui.device.4.components.0.type",value:"'container'"},{_id:"ui.device.4.components.1.type",value:"'device-faults'"},{_id:"ui.device.5.type",value:"'container'"},{_id:"ui.device.5.element",value:"'div.container-full-width'"},{_id:"ui.device.5.components.0.components.0",value:"'All parameters'"},{_id:"ui.device.5.components.0.element",value:"'h3'"},{_id:"ui.device.5.components.0.type",value:"'container'"},{_id:"ui.device.5.components.1.type",value:"'all-parameters'"},{_id:"ui.device.6.type",value:"'device-actions'"}])),e.index&&(t.config=(t.config||[]).concat([{_id:"ui.index.0.type",value:"'device-link'"},{_id:"ui.index.0.label",value:"'Serial number'"},{_id:"ui.index.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.index.0.components.0.type",value:"'parameter'"},{_id:"ui.index.1.label",value:"'Product class'"},{_id:"ui.index.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.index.2.label",value:"'Software version'"},{_id:"ui.index.2.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.index.3.label",value:"'IP'"},{_id:"ui.index.3.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.index.4.label",value:"'SSID'"},{_id:"ui.index.4.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.index.5.type",value:"'container'"},{_id:"ui.index.5.label",value:"'Last inform'"},{_id:"ui.index.5.element",value:"'span.inform'"},{_id:"ui.index.5.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.index.5.components.0.type",value:"'parameter'"},{_id:"ui.index.5.components.1.chart",value:"'online'"},{_id:"ui.index.5.components.1.type",value:"'overview-dot'"},{_id:"ui.index.6.type",value:"'tags'"},{_id:"ui.index.6.label",value:"'Tags'"},{_id:"ui.index.6.parameter",value:"Tags"},{_id:"ui.index.6.unsortable",value:"true"},{_id:"ui.index.6.writable",value:"false"}])),e.overview&&(t.config=(t.config||[]).concat([{_id:"ui.overview.charts.online.label",value:"'Online status'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.color",value:"'#31a354'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.filter",value:"Events.Inform > NOW() - 5 * 60 * 1000"},{_id:"ui.overview.charts.online.slices.1_onlineNow.label",value:"'Online now'"},{_id:"ui.overview.charts.online.slices.2_past24.color",value:"'#a1d99b'"},{_id:"ui.overview.charts.online.slices.2_past24.filter",value:"Events.Inform > (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000) AND Events.Inform < (NOW() - 5 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.2_past24.label",value:"'Past 24 hours'"},{_id:"ui.overview.charts.online.slices.3_others.color",value:"'#e5f5e0'"},{_id:"ui.overview.charts.online.slices.3_others.filter",value:"Events.Inform < (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.3_others.label",value:"'Others'"},{_id:"ui.overview.groups.online.label",value:"''"},{_id:"ui.overview.groups.online.charts.0",value:"'online'"}])),e.presets&&(t.presets=[{_id:"bootstrap",weight:0,channel:"bootstrap",events:"0 BOOTSTRAP",provision:"bootstrap"},{_id:"default",weight:0,channel:"default",provision:"default"},{_id:"inform",weight:0,channel:"inform",provision:"inform"}],t.provisions=[{_id:"bootstrap",script:BOOTSTRAP_SCRIPT},{_id:"default",script:DEFAULT_SCRIPT},{_id:"inform",script:INFORM_SCRIPT}]),t.permissions)for(const e of t.permissions)e._id=`${e.role}:${e.resource}:${e.access}`,r.push(putPermission(e._id,e));if(t.users)for(const e of t.users)e.salt=await generateSalt(64),e.password=await hashPassword(e.password,e.salt),e.roles=(e.roles||[]).join(","),e._id=e.username,delete e.username,r.push(putUser(e._id,e));if(t.provisions)for(const e of t.provisions)r.push(putProvision(e._id,e));if(t.presets)for(const e of t.presets)r.push(putPreset(e._id,e));if(t.config)for(const e of t.config)r.push(putConfig(e._id,e));return await r,del("presets_hash")}const version="1.2.0-beta.0+20200714065211";let cache1=new Map,cache2=new Map;const keys=new WeakMap;function getKey(e){if(null===e)return"null";if(void 0===e)return"undefined";const t=typeof e;if("number"===t||"boolean"===t||"string"===t)return`${t}:${e}`;if("function"!==t&&"object"!==t)throw new Error(`Cannot memoize ${t} arguments`);let r=keys.get(e);if(!r){r=`${t}:${Math.trunc(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)}`,keys.set(e,r)}return r}function memoize(e){const t=getKey(e);return(...r)=>{const s=JSON.stringify(r.map(getKey))+t;if(cache1.has(s))return cache1.get(s);let n;return n=cache2.has(s)?cache2.get(s):e(...r),cache1.set(s,n),n}}const interval$1=setInterval(()=>{cache2=cache1,cache1=new Map},12e4);interval$1.unref&&interval$1.unref();const koa=new Koa,router$1=new Router,JWT_SECRET=""+get("UI_JWT_SECRET"),JWT_COOKIE="genieacs-ui-jwt",getAuthorizer=memoize((e,t)=>{const r=JSON.parse(t),s=getPermissions$1(e),n=r.map(e=>Object.values(s[e]||{}));return new Authorizer(n)});koa.on("error",async e=>{throw e}),koa.use(async(e,t)=>{const r=await getCurrentSnapshot();return e.state.configSnapshot=r,e.set("X-Config-Snapshot",r),e.set("GenieACS-Version",version),t()}),koa.use(koaJwt({secret:JWT_SECRET,passthrough:!0,cookie:JWT_COOKIE,isRevoked:async(e,t)=>"local"!==t.authMethod||!getUsers$1(e.state.configSnapshot)[t.username]})),koa.use(async(e,t)=>{let r=[];if(e.state.user&&e.state.user.username){let t;if("local"!==e.state.user.authMethod)throw new Error("Invalid auth method");r=(t=getUsers$1(e.state.configSnapshot)[e.state.user.username]).roles||[]}return e.state.authorizer=getAuthorizer(e.state.configSnapshot,JSON.stringify(r)),t()}),router$1.post("/login",async e=>{if(!JWT_SECRET)return e.status=500,e.body="UI_JWT_SECRET is not set",void error({message:"UI_JWT_SECRET is not set"});const t=e.request.body.username,r=e.request.body.password,s={message:"Log in",context:e,username:t,method:null};await authLocal(e.state.configSnapshot,t,r)?function(r){s.method=r;const n=jwt.sign({username:t,authMethod:r},JWT_SECRET);e.cookies.set(JWT_COOKIE,n,{sameSite:"lax"}),e.body=JSON.stringify(n),accessInfo(s)}("local"):(e.status=400,e.body="Incorrect username or password",s.message+=" failed",accessWarn(s))}),router$1.post("/logout",async e=>{e.cookies.set(JWT_COOKIE),e.body="",accessInfo({message:"Log out",context:e})}),koa.use(async(e,t)=>("application/octet-stream"===e.request.type&&(e.disableBodyParser=!0),t())),koa.use(koaBodyParser()),router$1.use("/api",router.routes(),router.allowedMethods()),router$1.get("/status",e=>{e.body="OK"}),router$1.get("/init",async e=>{const t=await getStatus();Object.keys(getUsers$1(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),e.body=t}),router$1.post("/init",async e=>{const t=e.request.body;Object.keys(getUsers$1(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),await seed(t),e.body=""}),router$1.get("/",async e=>{const t=e.state.authorizer.getPermissionSets();let r="";Object.keys(getUsers$1(e.state.configSnapshot)).length||(r='<script>window.location.hash = "#!/wizard";<\/script>'),e.body=`\n  <html>\n    <head>\n      <title>GenieACS</title>\n      <link rel="shortcut icon" type="image/png" href="favicon.png" />\n      <link rel="stylesheet" href="app.css">\n    </head>\n    <body>\n    <noscript>GenieACS UI requires JavaScript to work. Please enable JavaScript in your browser.</noscript>\n      <script>\n        window.clientConfig = ${JSON.stringify({ui:getUiConfig(e.state.configSnapshot)})};\n        window.configSnapshot = ${JSON.stringify(e.state.configSnapshot)};\n        window.genieacsVersion = ${JSON.stringify(version)};\n        window.username = ${JSON.stringify(e.state.user?e.state.user.username:"")};\n        window.permissionSets = ${JSON.stringify(t)};\n      <\/script>\n      <script src="app.js"><\/script>${r} \n    </body>\n  </html>\n  `}),koa.use(koaCompress({flush:zlib.Z_SYNC_FLUSH})),koa.use(router$1.routes()),koa.use(koaStatic(ROOT_DIR+"/public"));const listener$1=koa.callback();init("ui",version);const SERVICE_ADDRESS=get("UI_INTERFACE"),SERVICE_PORT=get("UI_PORT");function exitWorkerGracefully(){setTimeout(exitWorkerUngracefully,5e3).unref(),Promise.all([disconnect(),disconnect$2(),disconnect$1(),killAll(),worker.disconnect()]).catch(exitWorkerUngracefully)}function exitWorkerUngracefully(){killAll().then(()=>{process.exit(1)})}if(worker){const e={key:get("UI_SSL_KEY"),cert:get("UI_SSL_CERT")};let t=!1;process.on("uncaughtException",e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(error({message:"Uncaught exception",exception:e,pid:process.pid}),t=!0,stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully))});const r=(e,r)=>{t&&r.setHeader("Connection","close"),listener$1(e,r)},s=Promise.all([connect$1(),connect()]).then(()=>{start$1(SERVICE_PORT,SERVICE_ADDRESS,e,r)}).catch(e=>{setTimeout(()=>{throw e})});process.on("SIGINT",()=>{t=!0,s.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})}),process.on("SIGTERM",()=>{t=!0,s.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})})}else{const e=get("UI_WORKER_PROCESSES");info({message:"genieacs-ui starting",pid:process.pid,version:version}),start(e,SERVICE_PORT,SERVICE_ADDRESS),process.on("SIGINT",()=>{info({message:"Received signal SIGINT, exiting",pid:process.pid}),stop()}),process.on("SIGTERM",()=>{info({message:"Received signal SIGTERM, exiting",pid:process.pid}),stop()})}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
