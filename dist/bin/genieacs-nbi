#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}const path=require("path"),fs=require("fs"),fs__default=_interopDefault(fs),os=require("os"),ipaddr_js=require("ipaddr.js"),cluster=_interopDefault(require("cluster")),http=require("http"),https=require("https"),url=require("url"),mongodb=require("mongodb"),querystring=require("querystring"),vm=require("vm"),parsimmon=require("parsimmon"),crypto=require("crypto"),later=require("later"),dgram=require("dgram"),child_process=require("child_process"),yaml=require("yaml"),jwt=_interopDefault(require("jsonwebtoken"));let configDir,cwmpSsl,nbiSsl,fsSsl,uiSsl,fsHostname,ROOT_DIR=path.resolve(__dirname,"..");for(;!fs.existsSync(`${ROOT_DIR}/package.json`);){const e=path.resolve(ROOT_DIR,"..");if(e===ROOT_DIR){ROOT_DIR=process.cwd();break}ROOT_DIR=e}const options={EXT_DIR:{type:"path",default:path.resolve(ROOT_DIR,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},allConfig={};function setConfig(e,t,r=!1){if(null!=allConfig[e])return!0;function s(e,t){switch(t){case"int":return Number(e);case"bool":return["true","1"].includes(String(e).trim().toLowerCase());case"string":return String(e);case"path":return e?path.resolve(e):"";default:return null}}"CONFIG_DIR"!==e&&"config-dir"!==e||(configDir=configDir||path.resolve(ROOT_DIR,t)),"CWMP_SSL"!==e&&"cwmp-ssl"!==e||(cwmpSsl=cwmpSsl||String(t).toLowerCase().trim()),"NBI_SSL"!==e&&"nbi-ssl"!==e||(nbiSsl=nbiSsl||String(t).toLowerCase().trim()),"FS_SSL"!==e&&"fs-ssl"!==e||(fsSsl=fsSsl||String(t).toLowerCase().trim()),"UI_SSL"!==e&&"ui-ssl"!==e||(uiSsl=uiSsl||String(t).toLowerCase().trim()),"FS_HOSTNAME"!==e&&"fs-hostname"!==e||(fsHostname=fsHostname||String(t).trim()),"PRESETS_CACHE_DURATION"!==e&&"presets-cache-duration"!==e||setConfig("MAX_CACHE_TTL",t),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==e&&"get-parameter-names-depth-threshold"!==e||setConfig("GPN_NEXT_LEVEL",t),"TASK_PARAMETERS_BATCH_SIZE"!==e&&"task-parameters-batch-size"!==e||setConfig("GPV_BATCH_SIZE",t),"FS_IP"!==e&&"fs-ip"!==e||setConfig("FS_HOSTNAME",t);let n=null;for(const[i,o]of Object.entries(options)){let a=i;if(r&&(a=a.toLowerCase().replace(/_/g,"-")),e===a?(n=s(t,o.type),a=i):e.startsWith(`${a}-`)&&(n=s(t,o.type),a=`${i}-${e.slice(i.length+1)}`),null!=n)return allConfig[a]=n,process.env[`GENIEACS_${a}`]=n,!0}return!1}const argv=process.argv.slice(2);for(;argv.length;){const e=argv.shift();if("-"===e[0]){const t=argv.shift();setConfig(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&setConfig(e.slice(9),t);const configFilename=configDir?`${configDir}/config.json`:`${ROOT_DIR}/config/config.json`;if(fs.existsSync(configFilename)){const e=JSON.parse(fs.readFileSync(configFilename).toString());for(const[t,r]of Object.entries(e))setConfig(t,r)||(process.env[`GENIEACS_${t}`]=`${r}`)}if(configDir&&setConfig("EXT_DIR",`${configDir}/ext`),["true","1"].includes(cwmpSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("CWMP_SSL_CERT",`${e}/cwmp.crt`),setConfig("CWMP_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(nbiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("NBI_SSL_CERT",`${e}/cwmp.crt`),setConfig("NBI_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(fsSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("FS_SSL_CERT",`${e}/cwmp.crt`),setConfig("FS_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(uiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("UI_SSL_CERT",`${e}/cwmp.crt`),setConfig("UI_SSL_KEY",`${e}/cwmp.key`)}if(fsHostname){const e=allConfig.FS_PORT||7567;setConfig("FS_URL_PREFIX",(!!allConfig.FS_SSL_CERT?"https":"http")+`://${fsHostname}:${e}/`)}for(const[e,t]of Object.entries(options))null!=t.default&&setConfig(e,t.default);function get(e,t){if(!t)return allConfig[e];let r=allConfig[e=`${e}-${t}`];if(null!=r)return r;let s=e.lastIndexOf("-");return null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1),null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1),null!=(r=allConfig[e.slice(0,s)])?r:(s=e.lastIndexOf("-",s-1))>0&&null!=(r=allConfig[e.slice(0,s)])?r:null))}const FORWARDED_HEADER=""+get("FORWARDED_HEADER"),cache=new WeakMap,cidrs=[];for(const e of FORWARDED_HEADER.split(",").map(e=>e.trim()))try{cidrs.push(ipaddr_js.parseCIDR(e))}catch(t){try{const t=ipaddr_js.parse(e);cidrs.push([t,8*t.toByteArray().length])}catch(e){}}function parseForwardedHeader(e){e=e.toLowerCase();const t={};let r,s=0,n=-1;for(let i=0;i<e.length;++i){const o=e.charCodeAt(i);if(61===o)s>=0&&(r=e.slice(s,i).trim(),s=-1,n=i+1);else if(59===o)n>=0&&(t[r]=e.slice(n,i).trim()),n=-1,s=i+1;else{if(44===o)return n>=0&&(t[r]=e.slice(n,i).trim()),t;if(34===o&&n>=0){const o=i;if(!e.slice(n,o).trim())for(i+=1;i<e.length;++i){const a=e.charCodeAt(i);if(92===a&&++i,34===a){t[r]=JSON.parse(e.slice(o,i+1).trim()),n=-1,s=i+1;break}}}}}return n>=0&&(t[r]=e.slice(n).trim()),t}function getRequestOrigin(e){let t=cache.get(e);if(!t){const r=e.socket;t={localAddress:r.localAddress,localPort:r.localPort,remoteAddress:r.remoteAddress,remotePort:r.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const s=e.headers.forwarded;if(s){const e=ipaddr_js.parse(r.remoteAddress);if(cidrs.some(t=>e.match(t))){const e=parseForwardedHeader(s);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,r]=e.host.split(":",2);t.localPort=+r||t.localPort}if(e.for)if(e.for.startsWith("[")){const r=e.for.lastIndexOf("]");r>=0&&(t.remoteAddress=e.for.slice(1,r),t.remotePort=parseInt(e.for.slice(r+2))||t.remotePort)}else{const r=e.for.lastIndexOf(":");r>=0?(t.remoteAddress=e.for.slice(0,r),t.remotePort=parseInt(e.for.slice(r+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const r=e.by.lastIndexOf("]");r>=0&&(t.localAddress=e.by.slice(1,r),t.localPort=parseInt(e.by.slice(r+2))||t.localPort)}else{const r=e.by.lastIndexOf(":");r>=0?(t.localAddress=e.by.slice(0,r),t.localPort=parseInt(e.by.slice(r+1))||t.localPort):t.localAddress=e.by}}}cache.set(e,t)}return t}const REOPEN_EVERY=6e4,LOG_FORMAT=get("LOG_FORMAT"),ACCESS_LOG_FORMAT=get("ACCESS_LOG_FORMAT")||LOG_FORMAT,defaultMeta={};let LOG_FILE,ACCESS_LOG_FILE,LOG_SYSTEMD=!1,logStream=fs.createWriteStream(null,{fd:process.stderr.fd}),logStat=fs.fstatSync(logStream.fd),accessLogStream=fs.createWriteStream(null,{fd:process.stdout.fd}),accessLogStat=fs.fstatSync(accessLogStream.fd);function reopen(){let e=1;LOG_FILE&&(++e,fs.stat(LOG_FILE,(t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===logStat.dev&&r.ino===logStat.ino||(logStream.end(),logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),ACCESS_LOG_FILE&&(++e,fs.stat(ACCESS_LOG_FILE,(t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===accessLogStat.dev&&r.ino===accessLogStat.ino||(accessLogStream.end(),accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function init(e,t){defaultMeta.hostname=os.hostname(),defaultMeta.pid=process.pid,defaultMeta.name=`genieacs-${e}`,defaultMeta.version=t,LOG_FILE=get(`${e.toUpperCase()}_LOG_FILE`),ACCESS_LOG_FILE=get(`${e.toUpperCase()}_ACCESS_LOG_FILE`),LOG_FILE&&(logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),ACCESS_LOG_FILE&&(accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd));const r=process.env.JOURNAL_STREAM;if(r){const[e,t]=r.split(":").map(parseInt);LOG_SYSTEMD=logStat.dev===e&&logStat.ino===t}(LOG_FILE||ACCESS_LOG_FILE)&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function flatten(e){e.sessionContext&&(e.deviceId=e.sessionContext.deviceId,e.remoteAddress=getRequestOrigin(e.sessionContext.httpRequest).remoteAddress,delete e.sessionContext),e.exception&&(e.exceptionName=e.exception.name,e.exceptionMessage=e.exception.message,e.exceptionStack=e.exception.stack,delete e.exception),e.task&&(e.taskId=e.task._id,delete e.task),e.rpc&&(e.rpc.acsRequest?(e.acsRequestId=e.rpc.id,e.acsRequestName=e.rpc.acsRequest.name,e.rpc.acsRequest.commandKey&&(e.acsRequestCommandKey=e.rpc.acsRequest.commandKey)):e.rpc.cpeRequest?(e.cpeRequestId=e.rpc.id,"Inform"===e.rpc.cpeRequest.name?(e.informEvent=e.rpc.cpeRequest.event.join(","),e.informRetryCount=e.rpc.cpeRequest.retryCount):(e.cpeRequestName=e.rpc.cpeRequest.name,e.rpc.cpeRequest.commandKey&&(e.cpeRequestCommandKey=e.rpc.cpeRequest.commandKey))):e.rpc.cpeFault&&(e.acsRequestId=e.rpc.id,e.cpeFaultCode=e.rpc.cpeFault.detail.faultCode,e.cpeFaultString=e.rpc.cpeFault.detail.faultString),delete e.rpc),e.fault&&(e.faultCode=e.fault.code,e.faultMessage=e.fault.message,delete e.fault),e.context&&(e.remoteAddress=getRequestOrigin(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,r]of Object.entries(e))null==r&&delete e[t];return e}function formatJson(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(flatten(e))}${os.EOL}`}return`${JSON.stringify(flatten(e))}${os.EOL}`}function formatSimple(e,t){const r={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};flatten(e);let s="";e.remoteAddress&&(s=e.deviceId&&r.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:`${e.remoteAddress}: `);const n=Object.keys(e);let i="";const o=[];for(const t of n)r[t]||o.push(`${t}=${JSON.stringify(e[t])}`);if(o.length&&(i=`; ${o.join(" ")}`),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${i}${os.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${i}${os.EOL}`}function log(e){e.timestamp=(new Date).toISOString(),"json"===LOG_FORMAT?(e=Object.assign({},defaultMeta,e),logStream.write(formatJson(e,LOG_SYSTEMD))):logStream.write(formatSimple(e,LOG_SYSTEMD))}function info(e){e.severity="info",log(e)}function warn(e){e.severity="warn",log(e)}function error(e){e.severity="error",log(e)}let respawnTimestamp=0,crashes=[];function fork(){const e=cluster.fork();return e.on("error",t=>{if("EPIPE"!==t.code)throw t;setTimeout(()=>{if(!e.isDead())throw t},50)}),e}function restartWorker(e,t,r){const s={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(s.exitCode=t),null!=r&&(s.signal=r),error(s);const n=Date.now();crashes.push(n);let i=0,o=0,a=0;if(crashes=crashes.filter(e=>{if(e>n-6e4)++i;else if(e>n-12e4)++o;else{if(!(e>n-18e4))return!1;++a}return!0}),i>5&&o>5&&a>5){process.exitCode=1,cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill();error({message:"Too many crashes, exiting",pid:process.pid})}else(respawnTimestamp=Math.max(n,respawnTimestamp+2e3))!==n?setTimeout(()=>{process.exitCode||fork()},respawnTimestamp-n):fork()}function start(e,t,r){cluster.on("listening",(e,s)=>{4!==s.addressType&&6!==s.addressType||s.address!==r||s.port!==t||info({message:"Worker listening",pid:e.process.pid,address:s.address,port:s.port})}),cluster.on("exit",restartWorker),e||(e=Math.max(2,os.cpus().length));for(let t=0;t<e;++t)fork()}function stop(){cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill()}const worker=cluster.worker;let server,listener;function closeServer(e,t){server?(setTimeout(()=>{if(!t)return;server.removeListener("request",listener),server.setTimeout(1);const e=t;t=null,setTimeout(e,1e3)},e).unref(),server.close(()=>{if(!t)return;const e=t;t=null,setTimeout(e,50)})):t()}function start$1(e,t,r,s,n,i=-1){if(listener=s,r&&r.key&&r.cert){const e={key:r.key.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim()))),cert:r.cert.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim())))};server=https.createServer(e,listener),null!=n&&server.on("secureConnection",n)}else server=http.createServer(listener),null!=n&&server.on("connection",n);i>=0&&(server.keepAliveTimeout=i),server.listen(e,t)}function stop$1(){return new Promise((e,t)=>{setTimeout(()=>{t(new Error("Could not close server in a timely manner"))},3e4).unref(),closeServer(2e4,e)})}const STRING_TYPE="[object String]",ARRAY_TYPE="[object Array]",OBJECT_TYPE="[object Object]",DATE_TYPE="[object Date]",typeOf=e=>Object.prototype.toString.call(e);function escapeRegExp(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function interpretEscapes(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,(e,r)=>{const s=r.charAt(0),n=r.slice(1);return"u"===s?String.fromCharCode(parseInt(n,16)):t.hasOwnProperty(s)?t[s]:s})}function map(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=map(e[s],t);n!==e[s]&&((r=r||e.slice())[s]=n)}return t(r||e)}async function mapAsync(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=await mapAsync(e[s],t);n!==e[s]&&((r=r||e.slice())[s]=n)}return t(r||e)}function binaryLeft(e,t){return parsimmon.seqMap(t,parsimmon.seq(e,t).many(),(e,t)=>t.reduce((e,t)=>{const[r,s]=t;return Array.isArray(e)&&r===e[0]?e.concat([s]):Array.isArray(s)&&r===s[0]?[r,e].concat(s.slice(1)):[r,e,s]},e))}const lang=parsimmon.createLanguage({ComparisonOperator:function(){return parsimmon.alt(parsimmon.string(">="),parsimmon.string("<>"),parsimmon.string("<="),parsimmon.string("="),parsimmon.string(">"),parsimmon.string("<")).skip(parsimmon.optWhitespace)},LikeOperator:function(){return parsimmon.alt(parsimmon.regexp(/like/i).result("LIKE").desc("LIKE"),parsimmon.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},IsNullOperator:function(){return parsimmon.alt(parsimmon.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),parsimmon.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NotOperator:function(){return parsimmon.regexp(/not/i).result("NOT").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("NOT")},AndOperator:function(){return parsimmon.regexp(/and/i).result("AND").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("AND")},OrOperator:function(){return parsimmon.regexp(/or/i).result("OR").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("OR")},Parameter:function(e){return parsimmon.alt(parsimmon.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(parsimmon.string("{").skip(parsimmon.optWhitespace),parsimmon.string("}"))).atLeast(1).map(e=>["PARAM",e.length>1?["||"].concat(e):e[0]]).skip(parsimmon.optWhitespace).desc("parameter")},StringValueSql:function(){return parsimmon.regexp(/'([^']*)'/,1).atLeast(1).skip(parsimmon.optWhitespace).map(e=>e.join("'")).desc("string")},StringValueJs:function(){return parsimmon.regexp(/"((?:\\.|.)*?)"/,1).skip(parsimmon.optWhitespace).map(interpretEscapes).desc("string")},NumberValue:function(){return parsimmon.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).skip(parsimmon.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return parsimmon.alt(parsimmon.regexp(/true/i).result(!0).desc("TRUE"),parsimmon.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NullValue:function(){return parsimmon.regexp(/null/i).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return parsimmon.seqMap(parsimmon.regexp(/([a-zA-Z0-9_]+)/,1).skip(parsimmon.optWhitespace).desc("function"),e.ValueExpression.sepBy(parsimmon.string(",").skip(parsimmon.optWhitespace)).wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace)),(e,t)=>["FUNC",e.toUpperCase()].concat(t))},Value:function(e){return parsimmon.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue)},ValueExpression:function(e){return binaryLeft(parsimmon.string("||").skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("+"),parsimmon.string("-")).skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("*"),parsimmon.string("/")).skip(parsimmon.optWhitespace),parsimmon.alt(e.Value,e.Parameter,e.Expression.wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace))))))},Comparison:function(e){return parsimmon.alt(parsimmon.seqMap(e.ValueExpression,e.IsNullOperator,(e,t)=>[t,e]),parsimmon.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,(e,t,r)=>[t,e,r]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(parsimmon.regexp(/escape/i).result("ESCAPE").skip(parsimmon.whitespace).desc("ESCAPE")),e.ValueExpression,(e,t,r,s)=>[t,e,r,s]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,(e,t,r)=>[t,e,r]))},Expression:function(e){return binaryLeft(e.OrOperator,binaryLeft(e.AndOperator,(t=e.NotOperator,r=e.Comparison.or(e.ValueExpression),parsimmon.seq(t,r).or(r)))).trim(parsimmon.optWhitespace);var t,r}});function parse(e){return e?lang.Expression.tryParse(e):null}function parseLikePattern(e,t){const r=e.split("");for(let e=0;e<r.length;++e){const s=r[e];if(s===t)r[e]=r[e+1]||"",r[e+1]="";else if("_"===s)r[e]="\\_";else if("%"===s)for(r[e]="\\%";"%"===r[e+1];)r[++e]=""}return r.filter(e=>e)}let cache1=new Map,cache2=new Map;class Path{static parseAlias(e,t){const r=[];for(;t<e.length&&"]"!==e[t];){const{index:s,segments:n}=Path.parsePath(e,t);let i=t=s+1;for(;"]"!==e[i]&&","!==e[i];){if('"'===e[i]&&t===i)for(++i;'"'!==e[i]||"\\"===e[i-1];)if(++i>=e.length)throw new Error("Invalid alias expression");if(++i>=e.length)throw new Error("Invalid alias expression")}let o=e.slice(t,i).trim();if(t=i,'"'===o[0])try{o=JSON.parse(o)}catch(e){throw new Error("Invalid alias expression")}r.push([new Path(n),o]),","===e[t]&&++t}return r.sort((e,t)=>e[0].toString()>t[0].toString()?1:e[0].toString()<t[0].toString()?-1:e[1]>t[1]?1:e[1]<t[1]?-1:0),Object.freeze(r),{index:t,alias:r}}static parsePath(e,t){const r=[];if(t<e.length&&":"!==e[t])for(;;){if("["===e[t]){const{index:s,alias:n}=Path.parseAlias(e,t+1);t=s+1,r.push(n)}else{const s=t;for(;t<e.length&&":"!==e[t]&&"."!==e[t];)++t;const n=e.slice(s,t).trim();if(!n)throw new Error("Invalid parameter path");r.push(n)}if(t>=e.length||":"===e[t])break;if("."!==e[t])throw new Error("Invalid alias expression");++t}return Object.freeze(r),{index:t,segments:r}}constructor(e){let t=0,r=0;const s=e.map((e,s)=>{if(Array.isArray(e)){return t|=1<<s,`[${e.map(e=>`${e[0].toString()}:${JSON.stringify(e[1])}`).join(",")}]`}return"*"===e&&(r|=1<<s),e});let n=0;const i=s.map((e,t)=>(n+=e.length)+t);this.segments=e,this.wildcard=r,this.alias=t,this._string=s.join("."),this._stringIndex=i}static parse(e){let t=cache1.get(e);if(!t){if(!(t=cache2.get(e))){const{segments:r}=Path.parsePath(e,0);(t=new Path(r)).toString()!==e&&cache1.set(t.toString(),t)}cache1.set(e,t)}return t}get length(){return this.segments.length}toString(){return this._string}slice(e=0,t=this.segments.length){let r;if(e<0&&(e=Math.max(0,this.segments.length+e)),t<0&&(t=Math.max(0,this.segments.length+t)),e>=t)r="";else{const s=e>0?this._stringIndex[e-1]+1:0,n=t<=this.segments.length?this._stringIndex[t-1]:this._string.length;r=this._string.slice(s,n)}let s=cache1.get(r);if(!s){if(!(s=cache2.get(r))){const r=this.segments.slice(e,t);Object.freeze(r),s=new Path(r)}cache1.set(r,s)}return s}concat(e){if(!e._string)return this;if(!this._string)return e;const t=`${this._string}.${e._string}`;let r=cache1.get(t);if(!r){if(!(r=cache2.get(t))){const t=this.segments.concat(e.segments);Object.freeze(t),r=new Path(t)}cache1.set(t,r)}return r}stripAlias(){if(!this.alias)return this;const e=this.segments.map(e=>Array.isArray(e)?"*":e),t=e.join(".");let r=cache1.get(t);return r||((r=cache2.get(t))||(Object.freeze(e),r=new Path(e)),cache1.set(t,r)),r}}const interval=setInterval(()=>{cache2=cache1,cache1=new Map},12e4);let tasksCollection,devicesCollection,presetsCollection,objectsCollection,provisionsCollection,virtualParametersCollection,faultsCollection,filesCollection,operationsCollection,permissionsCollection,usersCollection,configCollection,clientPromise,client;async function connect(){clientPromise=mongodb.MongoClient.connect(""+get("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0});const e=(client=await clientPromise).db();tasksCollection=e.collection("tasks"),await tasksCollection.createIndex({device:1,timestamp:1}),devicesCollection=e.collection("devices"),presetsCollection=e.collection("presets"),objectsCollection=e.collection("objects"),filesCollection=e.collection("fs.files"),provisionsCollection=e.collection("provisions"),virtualParametersCollection=e.collection("virtualParameters"),faultsCollection=e.collection("faults"),operationsCollection=e.collection("operations"),permissionsCollection=e.collection("permissions"),usersCollection=e.collection("users"),configCollection=e.collection("config")}async function disconnect(){clientPromise&&await(await clientPromise).close()}function optimizeProjection(e){if(e[""])return{"":e[""]};const t=Object.keys(e).sort();if(t.length<=1)return e;for(let r=1;r<t.length;++r){const s=t[r-1],n=t[r];n.startsWith(s)&&("."!==n.charAt(s.length)&&"."!==n.charAt(s.length-1)||(delete e[n],t.splice(r--,1)))}return e}async function fetchDevice(e,t){const r=[[Path.parse("Events"),t,{object:[t,1],writable:[t,0]}],[Path.parse("DeviceID"),t,{object:[t,1],writable:[t,0]}]],s=await devicesCollection.findOne({_id:e});if(!s)return null;for(const[e,n]of Object.entries(s))switch(e){case"_lastInform":r.push([Path.parse("Events.Inform"),+n,{object:[+n,0],writable:[+n,0],value:[+n,[+n,"xsd:dateTime"]]}]);break;case"_lastBoot":r.push([Path.parse("Events.1_BOOT"),+n,{object:[+n,0],writable:[+n,0],value:[+n,[+n,"xsd:dateTime"]]}]);break;case"_lastBootstrap":r.push([Path.parse("Events.0_BOOTSTRAP"),+n,{object:[+n,0],writable:[+n,0],value:[+n,[+n,"xsd:dateTime"]]}]);break;case"_registered":r.push([Path.parse("Events.Registered"),t,{object:[t,0],writable:[t,0],value:[t,[+n,"xsd:dateTime"]]}]);break;case"_id":r.push([Path.parse("DeviceID.ID"),t,{object:[t,0],writable:[t,0],value:[t,[n,"xsd:string"]]}]);break;case"_tags":n.length&&r.push([Path.parse("Tags"),t,{object:[t,1],writable:[t,0]}]);for(let e of n)e=e.replace(/[^a-zA-Z0-9-]+/g,"_"),r.push([Path.parse("Tags."+e),t,{object:[t,0],writable:[t,1],value:[t,[!0,"xsd:boolean"]]}]);break;case"_deviceId":null!=n._Manufacturer&&r.push([Path.parse("DeviceID.Manufacturer"),t,{object:[t,0],writable:[t,0],value:[t,[n._Manufacturer,"xsd:string"]]}]),null!=n._OUI&&r.push([Path.parse("DeviceID.OUI"),t,{object:[t,0],writable:[t,0],value:[t,[n._OUI,"xsd:string"]]}]),null!=n._ProductClass&&r.push([Path.parse("DeviceID.ProductClass"),t,{object:[t,0],writable:[t,0],value:[t,[n._ProductClass,"xsd:string"]]}]),null!=n._SerialNumber&&r.push([Path.parse("DeviceID.SerialNumber"),t,{object:[t,0],writable:[t,0],value:[t,[n._SerialNumber,"xsd:string"]]}])}return function e(t,s,n,i){t._timestamp&&(t._timestamp=+t._timestamp);const o={};let a=t._timestamp||1;i>a&&(a=i),null!=t._value&&(o.value=[t._timestamp||1,[t._value,t._type]],"xsd:dateTime"===t._type&&(o.value[1][0]=+o.value[1][0]),t._object=!1),null!=t._writable&&(o.writable=[i||1,t._writable?1:0]),null!=t._object&&(o.object=[a,t._object?1:0]),r.push([Path.parse(s.slice(0,-1)),a,o]);for(const[r,i]of Object.entries(t))r.startsWith("_")||(t._object=!0,e(i,s+r+".",n+1,t._timestamp));!t._object&&n||!t._timestamp||r.push([Path.parse(s+"*"),t._timestamp])}(s,"",0,0),r}async function saveDevice(e,t,r,s){const n={$set:{},$unset:{},$addToSet:{},$pull:{}};for(const e of t.timestamps.diff()){if(e[0].wildcard!==1<<e[0].length-1)continue;if("Events"===e[0].segments[0]||"DeviceID"===e[0].segments[0]||"Tags"===e[0].segments[0])continue;const r=t.paths.get(e[0].slice(0,-1));e[2]>s&&(e[2]=s),null==e[2]&&null!=e[1]?n.$unset[r.length?r.toString()+"._timestamp":"_timestamp"]=1:!r||r.length&&!t.attributes.has(r)||(n.$set[r.length?r.toString()+"._timestamp":"_timestamp"]=new Date(e[2]))}for(const e of t.attributes.diff()){const t=e[0],r=(((e[1]||{}).value||[])[1]||[])[0],i=(((e[2]||{}).value||[])[1]||[])[0],o=(((e[1]||{}).value||[])[1]||[])[1],a=(((e[2]||{}).value||[])[1]||[])[1],c=((e[1]||{}).value||[])[0],l=((e[2]||{}).value||[])[0],u=((e[1]||{}).object||[])[1],p=((e[2]||{}).object||[])[1],f=((e[2]||{}).writable||[])[1],d=((e[1]||{}).writable||[])[1];switch(t.segments[0]){case"Events":if(2===t.length&&i!==r)if(e[2]){const r=new Date(e[2].value[1][0]);switch(t.segments[1]){case"Inform":n.$set._lastInform=r;break;case"1_BOOT":n.$set._lastBoot=r;break;case"0_BOOTSTRAP":n.$set._lastBootstrap=r;break;case"Registered":n.$set._registered=r}}else switch(t.segments[1]){case"Inform":n.$unset._lastInform=1;break;case"1_BOOT":n.$unset._lastBoot=1;break;case"0_BOOTSTRAP":n.$unset._lastBootstrap=1;break;case"Registered":n.$unset._registered=1}break;case"DeviceID":if(i!==r){const r=e[2].value[1][0];switch(t.segments[1]){case"ID":n.$set._id=r;break;case"Manufacturer":n.$set["_deviceId._Manufacturer"]=r;break;case"OUI":n.$set["_deviceId._OUI"]=r;break;case"ProductClass":n.$set["_deviceId._ProductClass"]=r;break;case"SerialNumber":n.$set["_deviceId._SerialNumber"]=r}}break;case"Tags":i!==r&&(null!=i?(n.$addToSet._tags||(n.$addToSet._tags={$each:[]}),n.$addToSet._tags.$each.push(t.segments[1])):(n.$pull._tags||(n.$pull._tags={$in:[]}),n.$pull._tags.$in.push(t.segments[1])));break;default:if(!e[2]){n.$unset[t.toString()]=1;continue}for(const m of Object.keys(e[2]))if(e[2][m][0]>s&&(e[2][m][0]=s),null!=e[2][m][1])switch(m){case"value":i!==r&&("xsd:dateTime"===a&&Number.isInteger(i)?n.$set[t.toString()+"._value"]=new Date(i):n.$set[t.toString()+"._value"]=i),a!==o&&(n.$set[t.toString()+"._type"]=a),l!==c&&(n.$set[t.toString()+"._timestamp"]=new Date(l));break;case"object":e[1]&&e[1].object&&p===u||(n.$set[t.length?t.toString()+"._object":"_object"]=!!p);break;case"writable":e[1]&&e[1].writable&&f===d||(n.$set[t.length?t.toString()+"._writable":"_writable"]=!!f)}if(e[1])for(const r of Object.keys(e[1]))if(!(null==e[1][r][1]||e[2]&&e[2][r]&&null!=e[2][r][1])){const e=t.length?t.toString()+".":"";n.$unset[`${e}_${r}`]=1,"value"===r&&(n.$unset[e+"_type"]=1,n.$unset[e+"_timestamp"]=1)}}}n.$unset=optimizeProjection(n.$unset);for(const e of Object.keys(n.$unset))null!=n.$set[e]&&delete n.$unset[e];for(const[e,t]of Object.entries(n)){if("$addToSet"===e)for(const[e,r]of Object.entries(t))r.$each.length||delete t[e];else if("$pull"===e)for(const[e,r]of Object.entries(t))r.$in.length||delete t[e];Object.keys(t).length||delete n[e]}if(!Object.keys(n).length)return;let i;if(n.$addToSet&&n.$pull&&(i={$pull:n.$pull},delete n.$pull),1!==(await devicesCollection.updateOne({_id:e},n,{upsert:r})).result.n)throw new Error(`Device ${e} not found in database`);i&&await devicesCollection.updateOne({_id:e},i)}async function getFaults(e){const t=await faultsCollection.find({_id:{$regex:`^${escapeRegExp(e)}\\:`}}).toArray(),r={};for(const s of t){const t=s._id.slice(e.length+1);delete s._id,delete s.channel,delete s.device,s.timestamp=+s.timestamp,s.provisions=JSON.parse(s.provisions),r[t]=s}return r}async function saveFault(e,t,r){const s=`${e}:${t}`;(r=Object.assign({},r))._id=s,r.device=e,r.channel=t,r.timestamp=new Date(r.timestamp),r.provisions=JSON.stringify(r.provisions),await faultsCollection.replaceOne({_id:s},r,{upsert:!0})}async function deleteFault(e,t){await faultsCollection.deleteOne({_id:`${e}:${t}`})}async function getDueTasks(e,t){const r=tasksCollection.find({device:e}).sort(["timestamp"]),s=[];for await(const e of r){if(e.timestamp&&(e.timestamp=+e.timestamp),e.expiry&&(e.expiry=+e.expiry),e.timestamp>=t)return[s,+e.timestamp];if(e._id=String(e._id),s.push(e),"download"===e.name&&e.file){let t;t=mongodb.ObjectID.isValid(e.file)?{_id:{$in:[e.file,new mongodb.ObjectID(e.file)]}}:{_id:e.file};const r=await filesCollection.find(t).toArray();r[0]&&(e.fileType||(e.fileType=r[0].metadata.fileType),e.fileName||(e.fileName=r[0].filename||r[0]._id.toString()))}}return[s,null]}async function clearTasks(e,t){await tasksCollection.deleteMany({_id:{$in:t.map(e=>new mongodb.ObjectID(e))}})}async function getOperations(e){const t=await operationsCollection.find({_id:{$regex:`^${escapeRegExp(e)}\\:`}}).toArray(),r={};for(const s of t){const t=s._id.slice(e.length+1);delete s._id,s.timestamp=+s.timestamp,s.args&&(s.args=JSON.parse(s.args)),s.provisions=JSON.parse(s.provisions),s.retries=JSON.parse(s.retries),r[t]=s}return r}async function saveOperation(e,t,r){const s=`${e}:${t}`;(r=Object.assign({},r))._id=s,r.timestamp=new Date(r.timestamp),r.provisions=JSON.stringify(r.provisions),r.retries=JSON.stringify(r.retries),r.args=JSON.stringify(r.args),await operationsCollection.replaceOne({_id:s},r,{upsert:!0})}async function deleteOperation(e,t){await operationsCollection.deleteOne({_id:`${e}:${t}`})}async function getPresets(){return presetsCollection.find().toArray()}async function getObjects(){return objectsCollection.find().toArray()}async function getProvisions(){return provisionsCollection.find().toArray()}async function getVirtualParameters(){return virtualParametersCollection.find().toArray()}function getFiles(){return filesCollection.find().toArray()}async function getConfig(){return(await configCollection.find().toArray()).map(e=>({id:e._id,value:parse(e.value)}))}async function getPermissions(){return permissionsCollection.find().toArray()}async function getUsers(){return usersCollection.find().toArray()}interval.unref&&interval.unref();const db=Object.freeze({get tasksCollection(){return tasksCollection},get devicesCollection(){return devicesCollection},get presetsCollection(){return presetsCollection},get objectsCollection(){return objectsCollection},get provisionsCollection(){return provisionsCollection},get virtualParametersCollection(){return virtualParametersCollection},get faultsCollection(){return faultsCollection},get filesCollection(){return filesCollection},get operationsCollection(){return operationsCollection},get permissionsCollection(){return permissionsCollection},get usersCollection(){return usersCollection},get configCollection(){return configCollection},get client(){return client},connect:connect,disconnect:disconnect,fetchDevice:fetchDevice,saveDevice:saveDevice,getFaults:getFaults,saveFault:saveFault,deleteFault:deleteFault,getDueTasks:getDueTasks,clearTasks:clearTasks,getOperations:getOperations,saveOperation:saveOperation,deleteOperation:deleteOperation,getPresets:getPresets,getObjects:getObjects,getProvisions:getProvisions,getVirtualParameters:getVirtualParameters,getFiles:getFiles,getConfig:getConfig,getPermissions:getPermissions,getUsers:getUsers});function stringToRegexp(e,t){if(-1===e.indexOf("*"))return!1;let r=e.replace(/[[\]\\^$.|?+()]/,"\\$&");return"*"===(r="*"===r[0]?r.replace(/^\*+/g,""):"^"+r)[r.length-1]?r=r.replace(/\*+$/g,""):r+="$",r=r.replace(/[*]/,".*"),new RegExp(r,t)}function normalize(e){if(typeOf(e)===STRING_TYPE){const t=[e],r=/^\/(.*?)\/(g?i?m?y?)$/.exec(e);r&&t.push({$regex:new RegExp(r[1],r[2])}),+e===parseFloat(e)&&t.push(+e);const s=new Date(e);e.length>=8&&s.getFullYear()>1983&&t.push(s);const n=stringToRegexp(e);return!1!==n&&t.push({$regex:n}),t}return e}function expandValue(e){if(typeOf(e)===ARRAY_TYPE){let t=[];for(const r of e)t=t.concat(expandValue(r));return[t]}if(typeOf(e)!==OBJECT_TYPE){const t=normalize(e);return typeOf(t)!==ARRAY_TYPE?[t]:t}const t=[],r=[],s=[],n=[];for(const[t,i]of Object.entries(e))s.push(t),n.push(expandValue(i)),r.push(0);let i=0;for(;i<r.length;){const e={};for(let t=0;t<s.length;++t)e[s[t]]=n[t][r[t]];for(t.push(e),i=0;i<r.length&&(r[i]+=1,!(r[i]<n[i].length));++i)r[i]=0}return t}function permute(e,t){const r=[],s=expandValue(t);"_"!==e[e.lastIndexOf(".")+1]&&(e+="._value");for(const t of s){const s={};s[e]=t,r.push(s)}return r}function expand(e){const t={};for(const[r,s]of Object.entries(e))if("$"===r[0])t[r]=s.map(e=>expand(e));else{const e=permute(r,s);if(e.length>1)if(t.$and=t.$and||[],!s||null==s.$ne&&null==s.$not)t.$and.push({$or:e});else{if(Object.keys(s).length>1)throw new Error("Cannot mix $ne or $not with other operators");for(const r of e)t.$an.push(r)}else Object.assign(t,e[0])}return t}function sanitizeQueryTypes(e,t){for(const[r,s]of Object.entries(e))if("$"===r[0])for(const e of s)sanitizeQueryTypes(e,t);else if(r in t)if(typeOf(s)===OBJECT_TYPE)for(const[e,n]of Object.entries(s))switch(e){case"$in":case"$nin":for(let e=0;e<n.length;++e)n[e]=t[r](n[e]);break;case"$eq":case"$gt":case"$gte":case"$lt":case"$lte":case"$ne":s[e]=t[r](n);break;case"$exists":case"$type":break;default:throw new Error("Operator not supported")}else e[r]=t[r](e[r]);return e}const MAX_CACHE_TTL=+get("MAX_CACHE_TTL");let clientPromise$1,mongoCollection,mongoTimeOffset=0;async function connect$1(){const e=""+get("MONGODB_CONNECTION_URL");clientPromise$1=mongodb.MongoClient.connect(e,{useNewUrlParser:!0});const t=(await clientPromise$1).db();mongoCollection=t.collection("cache"),await mongoCollection.createIndex({expire:1},{expireAfterSeconds:0});const r=Date.now(),s=await t.command({hostInfo:1});mongoTimeOffset=s.system.currentTime.getTime()-r}async function disconnect$1(){clientPromise$1&&await(await clientPromise$1).close()}async function get$1(e){const t=new Date(Date.now()-mongoTimeOffset);if(Array.isArray(e)){const r=await mongoCollection.find({_id:{$in:e}}).toArray(),s={};e.forEach((e,t)=>{s[e]=t});const n=[];return r.forEach(e=>{e.expire>t&&(n[s[e._id]]=e.value)}),n}{const r=await mongoCollection.findOne({_id:{$in:[e]}});return r&&r.expire>t?r.value:null}}async function del(e){Array.isArray(e)?await mongoCollection.deleteMany({_id:{$in:e}}):await mongoCollection.deleteOne({_id:e})}async function set(e,t,r=MAX_CACHE_TTL){const s=new Date(Date.now()-mongoTimeOffset+1e3*r);await mongoCollection.replaceOne({_id:e},{_id:e,value:t,expire:s},{upsert:!0})}async function lock(e,t){const r=Math.random().toString(36).slice(2);const s=new Date(Date.now()-mongoTimeOffset),n=new Date(Date.now()-mongoTimeOffset+1e3*t);try{await mongoCollection.updateOne({_id:e,expire:{$lte:s}},{$set:{value:r,expire:n}},{upsert:!0})}catch(r){if(r&&11e3===r.code)return await new Promise(e=>setTimeout(e,200)),lock(e,t)}return async function(t){if(t){const s=new Date(Date.now()-mongoTimeOffset+1e3*t);if(1!==(await mongoCollection.updateOne({_id:e,value:r},{expire:s})).result.n)throw new Error("Lock expired")}else if(1!==(await mongoCollection.deleteOne({_id:e,value:r})).result.n)throw new Error("Lock expired")}}const isArray=Array.isArray,regExpCache=new WeakMap,REDUCE_SKIP={};function reduce(e,t){let r=!0;for(;r;){r=!1;for(let s=2;s<e.length;++s){const n=t(e[s-1],e[s],s-2);n!==REDUCE_SKIP&&(r=!0,(e=e.slice()).splice(s-1,2,n))}}return 2===e.length?e[1]:e}function likePatternToRegExp(e,t="",r=""){const s={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let n=parseLikePattern(e,t);if(!n.length)return new RegExp("^$",r);(n=n.map(e=>s[e]||e))[0]=".*"===n[0]?"":"^"+n[0];const i=n.length-1;return n[i]=[".*",""].includes(n[i])?"":n[i]+"$",new RegExp(n.join(""),r)}function evalExp(e){if("AND"===e[0])return reduce(e,(e,t)=>isArray(e)?isArray(t)?REDUCE_SKIP:t?e:t:e?t:e);if("OR"===e[0])return reduce(e,(e,t)=>isArray(e)?isArray(t)?REDUCE_SKIP:t||e:e||t);if("NOT"===e[0]){if(!isArray(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return isArray(e[1])?e:null==e[1]||null;if("IS NOT NULL"===e[0])return isArray(e[1])?e:null!=e[1]||null;if("LIKE"===e[0]){if(isArray(e[1])||isArray(e[2])||isArray(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=regExpCache.get(e);return t||(t=likePatternToRegExp(e[2],e[3]),regExpCache.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(isArray(e[1])||isArray(e[2])||isArray(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=regExpCache.get(e);return t||(t=likePatternToRegExp(e[2],e[3]),regExpCache.set(e,t)),!t.test(e[1])}if("="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]===e[2];if("<>"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]!==e[2];if(">"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]>e[2];if(">="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]>=e[2];if("<"===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]<e[2];if("<="===e[0])return isArray(e[1])||isArray(e[2])?e:null==e[1]||null==e[2]?null:e[1]<=e[2];if("*"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:e*t);if("/"===e[0])return reduce(e,(e,t,r)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:0===r?e/t:e*t);if("+"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:e+t);if("-"===e[0])return reduce(e,(e,t,r)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:0===r?e-t:e+t);if("||"===e[0])return reduce(e,(e,t)=>isArray(e)||isArray(t)?REDUCE_SKIP:null==e||null==t?null:`${e}${t}`)}return e}function evaluate(e,t,r,s){return map(e,e=>{if(s&&(e=s(e)),!isArray(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(r)return r}else if("UPPER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!isArray(e[1])){let r;return null==(r="function"==typeof t?t(e[1]):t[e[1]])?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return evalExp(e)})}async function evaluateAsync(e,t,r,s){return mapAsync(e,async e=>{if(s&&(e=await s(e)),!isArray(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(r)return r}else if("UPPER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!isArray(e[2]))return`${e[2]}`.toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!isArray(e[1])){let r=t[e[1]];return null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return evalExp(e)})}const isArray$1=Array.isArray;function parseDate(e){const t=+e;return isNaN(t)?""+e:t}function flattenDevice(e){const t={};return function e(t,r,s,n){for(const[i,o]of Object.entries(t)){if(!r)if("_lastInform"===i)s["Events.Inform"]={value:[parseDate(o),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_registered"===i)s["Events.Registered"]={value:[parseDate(o),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBoot"===i)s["Events.1_BOOT"]={value:[parseDate(o),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBootstrap"===i)s["Events.0_BOOTSTRAP"]={value:[parseDate(o),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_id"===i)s["DeviceID.ID"]={value:[o,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_deviceId"===i)s["DeviceID.Manufacturer"]={value:[o._Manufacturer,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.OUI"]={value:[o._OUI,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.ProductClass"]={value:[o._ProductClass,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.SerialNumber"]={value:[o._SerialNumber,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_tags"===i){s.Tags={writable:!1,writableTimestamp:n,object:!0,objectTimestamp:n};for(const e of o)s[`Tags.${e}`]={value:[!0,"xsd:boolean"],valueTimestamp:n,writable:!0,writableTimestamp:n,object:!1,objectTimestamp:n}}if(i.startsWith("_"))continue;let a=n;r?+t._timestamp>n&&(a=+t._timestamp):a=+(t._timestamp||1);const c={};null!=o._value?(c.value=[o._value instanceof Date?+o._value:o._value,o._type],c.valueTimestamp=+(o._timestamp||a),c.object=!1,c.objectTimestamp=a):null!=o._object&&(c.object=o._object,c.objectTimestamp=a),null!=o._writable&&(c.writable=o._writable,c.writableTimestamp=a);const l=r?`${r}.${i}`:i;s[l]=c,(c.object||null==o.object)&&e(o,l,s,a)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}function mongoQueryToFilter(e){return!Object.keys(e).length||function e(t){const r=[];for(const[s,n]of Object.entries(t))if("$"===s[0])if("$and"===s){const t=["AND"];for(const r of Object.values(n))t.push(e(r));r.push(t)}else{if("$or"!==s)throw new Error(`Operator ${s} not supported`);{const t=["OR"];for(const r of Object.values(n))t.push(e(r));r.push(t)}}else if("_tags"===s)if("object"==typeof n){if(isArray$1(n))throw new Error("Invalid type");if(n.hasOwnProperty("$ne"))r.push(["IS NULL",["PARAM",`Tags.${n.$ne}`]]);else{if(!n.hasOwnProperty("$eq"))throw new Error("Invalid tag query");r.push(["IS NOT NULL",["PARAM",`Tags.${n.$eq}`]])}}else r.push(["IS NOT NULL",["PARAM",`Tags.${n}`]]);else if(s.startsWith("Tags.")){let e;if("boolean"==typeof n)e=n;else if(n.hasOwnProperty("$eq"))e=!!n.$eq;else if(n.hasOwnProperty("$ne"))e=!n.$ne;else{if(!n.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!n.$exists}r.push([e?"IS NOT NULL":"IS NULL",["PARAM",s]])}else if("object"==typeof n){if(isArray$1(n))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(n)){let n;switch(t){case"$eq":n="=";break;case"$ne":n="<>";break;case"$lt":n="<";break;case"$lte":n="<=";break;case"$gt":n=">";break;case"$gte":n=">=";break;default:throw new Error(`Operator ${t} not supported`)}e.push([n,["PARAM",s],r])}if(1===e.length)r.push(e[0]);else{const t=["AND"];r.push(t.concat(e))}}else r.push(["=",["PARAM",s],n]);if(1===r.length)return r[0];return["AND"].concat(r)}(e)}function parseCron(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),later.schedule(later.parse.cron(t.join(" "),!0))}const REFRESH=3e3,EVICT_TIMEOUT=6e4,snapshots=new Map;let currentSnapshot=null,nextRefresh=1;function computeHash(e){const t=crypto.createHash("md5");for(const r of e.presets)t.update(JSON.stringify(r.name)),t.update(JSON.stringify(r.channel)),t.update(JSON.stringify(r.schedule)),t.update(JSON.stringify(r.events)),t.update(JSON.stringify(r.precondition)),t.update(JSON.stringify(r.provisions));let r;r=Object.keys(e.provisions).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.provisions[s].md5);r=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.virtualParameters[s].md5);r=Object.keys(e.config).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.config[s]));r=Object.keys(e.files).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.files[s]));r=Object.keys(e.users).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.users[s]));const s=Object.keys(e.permissions).sort();t.update(JSON.stringify(s));for(const n of s){const s=Object.keys(e.permissions[n]).sort();t.update(JSON.stringify(s));for(const i of s){r=Object.keys(e.permissions[n][i]).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.permissions[n][i][s]))}}return t.digest("hex")}function flattenObject(e,t="",r={}){for(const s of Object.keys(e)){const n=e[s];"object"!=typeof n||Array.isArray(n)?r[`${t}${s}`]=n:flattenObject(n,`${t}${s}.`,r)}return r}async function fetchPresets(){const e=await getPresets();let t=await getObjects();t=t.map(e=>((e=flattenObject(e))._keys&&e._keys.length||(e._keys=Object.keys(e).filter(e=>!e.startsWith("_"))),e)),e.sort((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight);const r=[];for(const s of e){let e=null;if(s.schedule){const t=s.schedule.trim().split(/\s+/);e={md5:crypto.createHash("md5").update(s.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=parseCron(t.join(" "))}catch(t){warn({message:"Invalid preset schedule",preset:s._id,schedule:s.schedule}),e.schedule=!1}}const n=s.events||{};let i=!0;if(s.precondition){try{i=parse(s.precondition)}catch(e){i=mongoQueryToFilter(JSON.parse(s.precondition))}i=evaluate(i)}const o=s.provisions||[];for(const e of s.configurations)switch(e.type){case"age":o.push(["refresh",e.name,e.age]);break;case"value":o.push(["value",e.name,e.value]);break;case"add_tag":o.push(["tag",e.tag,!0]);break;case"delete_tag":o.push(["tag",e.tag,!1]);break;case"provision":o.push([e.name].concat(e.args||[]));break;case"add_object":for(const r of t)if(r._id===e.object){const t=r._keys.map(e=>`${e}:${JSON.stringify(r[e])}`).join(","),s=`${e.name}.[${t}]`;o.push(["instances",s,1]);for(const e in r)e.startsWith("_")||-1!==r._keys.indexOf(e)||o.push(["value",`${s}.${e}`,r[e]])}break;case"delete_object":for(const r of t)if(r._id===e.object){const t=r._keys.map(e=>`${e}:${JSON.stringify(r[e])}`).join(","),s=`${e.name}.[${t}]`;o.push(["instances",s,0])}break;default:throw new Error(`Unknown configuration type ${e.type}`)}r.push({name:s._id,channel:s.channel||"default",schedule:e,events:n,precondition:i,provisions:o})}return r}async function fetchProvisions(){const e=await getProvisions(),t={};for(const r of e)t[r._id]={},t[r._id].md5=crypto.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new vm.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function fetchVirtualParameters(){const e=await getVirtualParameters(),t={};for(const r of e)t[r._id]={},t[r._id].md5=crypto.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new vm.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function fetchPermissions(){const e=await getPermissions(),t={};for(const r of e)t[r.role]||(t[r.role]={}),t[r.role][r.access]||(t[r.role][r.access]={}),t[r.role][r.access][r.resource]={access:r.access,filter:parse(r.filter||"true")},r.validate&&(t[r.role][r.access][r.resource].validate=parse(r.validate));return t}async function fetchFiles(){const e=await getFiles(),t={};for(const r of e){const e=r.filename||r._id.toString();t[e]={},t[e].length=r.length,t[e].md5=r.md5,t[e].contentType=r.contentType}return t}async function fetchUsers(){const e=await getUsers(),t={};for(const r of e)t[r._id]={password:r.password,salt:r.salt,roles:r.roles.split(",").map(e=>e.trim())};return t}async function fetchConfig(){const e=await getConfig();e.sort((e,t)=>e.id>t.id?1:e.id<t.id?-1:0);const t={filters:{},device:{},index:{},overview:{}},r={};for(const s of e){const e=evaluate(s.value);if(r[s.id]=e,s.id.startsWith("ui.")){const r=s.id.split(".");r.shift();let n=t;for(;r.length>1;){const e=r.shift();"object"!=typeof n[e]&&(n[e]={}),n=n[e]}n[r[0]]=e}}return[r,t]}async function refresh(){if(!nextRefresh)return await new Promise(e=>setTimeout(e,20)),void await refresh();nextRefresh=0;const e=Date.now(),t=await get$1("presets_hash");if(currentSnapshot&&t===currentSnapshot)return void(nextRefresh=e+(REFRESH-e%REFRESH));const r=await lock("presets_hash_lock",3),s=await Promise.all([fetchPresets(),fetchProvisions(),fetchVirtualParameters(),fetchFiles(),fetchPermissions(),fetchUsers(),fetchConfig()]),n={presets:s[0],provisions:s[1],virtualParameters:s[2],files:s[3],permissions:s[4],users:s[5],config:s[6][0],ui:s[6][1]};if(currentSnapshot){const e=currentSnapshot,t=snapshots.get(e);setTimeout(()=>{snapshots.get(e)===t&&snapshots.delete(e)},EVICT_TIMEOUT).unref()}currentSnapshot=computeHash(n),snapshots.set(currentSnapshot,n),await set("presets_hash",currentSnapshot,300),await r(0),nextRefresh=e+(REFRESH-e%REFRESH)}async function getCurrentSnapshot(){return Date.now()>nextRefresh&&await refresh(),currentSnapshot}function getConfig$1(e,t,r,s,n){const i=snapshots.get(e);if(!i)throw new Error("Cache snapshot does not exist");const o={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in o){let e;return r&&r.id?e=r.id:n&&(e=n(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),get(o[t],e)}return null}const a=evaluate(i.config[t],r,s,n);return Array.isArray(a)?null:a}function getConfigExpression(e,t){const r=snapshots.get(e);if(!r)throw new Error("Cache snapshot does not exist");return r.config[t]}function parseHeaderFeilds(e){const t={},r=e.split(",");let s;for(;null!=(s=r.shift());){const e=s.split("=",1)[0];if(e.length===s.length){if(!s.trim())continue;throw new Error("Unable to parse auth header")}let n=s.slice(e.length+1);if(/^\s*"/.test(n)){for(;!/[^\\]"\s*$/.test(n);){const e=r.shift();if(null==e)throw new Error("Unable to parse auth header");n+=","+e}try{n=JSON.parse(n)}catch(e){throw new Error("Unable to parse auth header")}}else n=n.trim();t[e.trim()]=n}return t}function parseWwwAuthenticateHeader(e){const t=(e=e.trim()).split(" ",1)[0],r={method:t};return Object.assign(r,parseHeaderFeilds(e.slice(t.length+1))),r}function basic(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function digest(e,t,r,s,n,i,o,a,c,l){const u=crypto.createHash("md5");u.update(e).update(":").update(t).update(":").update(r);const p=u.digest("hex"),f=crypto.createHash("md5");if(f.update(n).update(":").update(i),"auth-int"===o){const e=crypto.createHash("md5").update(a||"").digest("hex");f.update(":").update(e)}const d=f.digest("hex"),m=crypto.createHash("md5");return m.update(p).update(":").update(s),o&&m.update(":").update(l).update(":").update(c).update(":").update(o),m.update(":").update(d),m.digest("hex")}function solveDigest(e,t,r,s,n,i){const o=crypto.randomBytes(8).toString("hex"),a="00000001";let c;i.qop&&(c=-1!==i.qop.indexOf(",")?"auth":i.qop);const l=digest(e,i.realm,t,i.nonce,s,r,c,n,o,a);let u=`Digest username="${e}"`;return u+=`,realm="${i.realm}"`,u+=`,nonce="${i.nonce}"`,u+=`,uri="${r}"`,i.algorithm&&(u+=`,algorithm=${i.algorithm}`),c&&(u+=`,qop=${c},nc=${a},cnonce="${o}"`),u+=`,response="${l}"`,i.opaque&&(u+=`,opaque="${i.opaque}"`),u}const TIMEOUT=+get("EXT_TIMEOUT"),processes={},jobs=new Map;function messageHandler(e){const t=jobs.get(e[0]);t&&(jobs.delete(e[0]),t({fault:e[1],value:e[2]}))}function run(e){return new Promise(t=>{const r=e[0],s=crypto.randomBytes(8).toString("hex");if(jobs.set(s,t),!processes[r]){const e=child_process.spawn(ROOT_DIR+"/bin/genieacs-ext",[r],{stdio:["inherit","inherit","inherit","ipc"]});processes[r]=e,e.on("error",n=>{processes[r]===e&&(jobs.delete(s)&&t({fault:{code:n.name,message:n.message},value:null}),kill(processes[r]),delete processes[r])}),e.on("disconnect",()=>{processes[r]===e&&delete processes[r]}),e.on("message",messageHandler)}return setTimeout(()=>{jobs.delete(s)&&t({fault:{code:"timeout",message:"Extension timed out"},value:null})},TIMEOUT),!!processes[r].connected&&processes[r].send([s,e.slice(1)])})}function kill(e){return new Promise(t=>{const r=Date.now()+5e3;e.kill();const s=setInterval(()=>{e.connected?Date.now()>r&&(e.kill("SIGKILL"),clearInterval(s),t()):(clearInterval(s),t())},100)})}async function killAll(){await Promise.all(Object.entries(processes).map(([e,t])=>(delete processes[e],kill(t))))}const DEBUG_FILE=""+get("DEBUG_FILE"),DEBUG_FORMAT=""+get("DEBUG_FORMAT"),connectionTimestamps=new WeakMap;function getConnectionTimestamp(e){let t=connectionTimestamps.get(e);return t||(t=new Date,connectionTimestamps.set(e,t)),t}function outgoingHttpRequest(e,t,r,s){if(!DEBUG_FILE)return;const n=new Date,i=e.connection,o={event:"outgoing HTTP request",timestamp:n,remoteAddress:i.remoteAddress,deviceId:t,connection:getConnectionTimestamp(i),remotePort:r.port,method:r.method||"GET",url:r.path,headers:e.getHeaders(),body:s};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(o));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(o)+"\n")}}function outgoingHttpRequestError(e,t,r,s){if(!DEBUG_FILE)return;const n={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:r.hostname,deviceId:t,connection:null,remotePort:r.port,method:r.method,url:r.path,headers:e.getHeaders(),error:s.message};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(n));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(n)+"\n")}}function incomingHttpResponse(e,t,r){if(!DEBUG_FILE)return;const s={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.connection.remoteAddress,deviceId:t,connection:getConnectionTimestamp(e.connection),statusCode:e.statusCode,headers:e.headers,body:r};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(s));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(s)+"\n")}}function outgoingUdpMessage(e,t,r,s){if(!DEBUG_FILE)return;const n={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:t,remotePort:r,body:s};if("yaml"===DEBUG_FORMAT)fs.appendFileSync(DEBUG_FILE,"---\n"+yaml.stringify(n));else{if("json"!==DEBUG_FORMAT)throw new Error("Unrecognized DEBUG_FORMAT option");fs.appendFileSync(DEBUG_FILE,JSON.stringify(n)+"\n")}}async function extractAuth(e,t){let r,s;const n=await evaluateAsync(e,{},0,async e=>{if(!r&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:r}=await run(e.slice(2));return t?null:r}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(r=e[2]||"",s=e[3]||""),t}return e});return[r,s,n]}function httpGet(e,t,r,s){return new Promise((n,i)=>{const o=http.get(e,t=>{t.resume(),n({statusCode:t.statusCode,headers:t.headers}),r&&(outgoingHttpRequest(o,s,e,null),incomingHttpResponse(t,s,null))}).on("error",t=>{o.abort(),i(new Error("Device is offline")),r&&outgoingHttpRequestError(o,s,e,t)}).on("socket",e=>{e.setTimeout(t),e.on("timeout",()=>{o.abort()})})})}async function httpConnectionRequest(e,t,r,s,n,i){const o=url.parse(e);if("http:"!==o.protocol)throw new Error("Invalid connection request URL or protocol");let a,c,l;for(o.agent=new http.Agent({maxSockets:1,keepAlive:!0});!a||null!=c&&null!=l;){let e=o;if(a)if("Basic"===a.method){if(!r)throw new Error("Basic HTTP authentication not allowed");e=Object.assign({headers:{Authorization:basic(c||"",l||"")}},o)}else{if("Digest"!==a.method)throw new Error("Unrecognized auth method");e=Object.assign({headers:{Authorization:solveDigest(c,l,o.path,"GET",null,a)}},o)}let u=await httpGet(e,s,n,i);if(0===u.statusCode&&a&&(u=await httpGet(e,s,n,i)),0===u.statusCode)throw new Error("Device is offline");if(200===u.statusCode||204===u.statusCode)return;if(401!==u.statusCode||!u.headers["www-authenticate"])throw new Error(`Unexpected response code from device: ${u.statusCode}`);a=parseWwwAuthenticateHeader(u.headers["www-authenticate"]),[c,l,t]=await extractAuth(t,!1)}throw new Error("Incorrect connection request credentials")}async function udpConnectionRequest(e,t,r=0,s,n){const[i,o]=e.split(":",2),a=o?parseInt(o):80,c=Date.now(),l=dgram.createSocket({type:"udp4",reuseAddr:!0});let u,p;for(r&&l.bind({port:r,exclusive:!0}),[u,p,t]=await extractAuth(t,null),null==u&&(u=""),null==p&&(p="");null!=u&&null!=p;){const r=Math.trunc(c/1e3),o=Math.trunc(4294967295*Math.random()),f=crypto.randomBytes(8).toString("hex"),d=`GET ${`http://${e}?ts=${r}&id=${o}&un=${u}&cn=${f}&sig=${crypto.createHmac("sha1",p).update(`${r}${o}${u}${f}`).digest("hex")}`} HTTP/1.1\r\nHost: ${e}\r\n\r\n`,m=Buffer.from(d);for(let e=0;e<3;++e)await new Promise((e,t)=>{l.send(m,0,m.length,a,i,r=>{r?t(r):e(),s&&outgoingUdpMessage(i,n,a,d)})});[u,p,t]=await extractAuth(t,null)}l.close()}async function connectionRequest(e,t){if(!t){const r=await devicesCollection.findOne({_id:e});if(!r)throw new Error("No such device");t=flattenDevice(r)}let r,s,n,i;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(r=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(r=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const o=url.parse(r).host,a=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]){let r=e[1];if("id"===r)r="DeviceID.ID";else if("serialNumber"===r)r="DeviceID.SerialNumber";else if("productClass"===r)r="DeviceID.ProductClass";else if("oui"===r)r="DeviceID.OUI";else{if("remoteAddress"===r)return o;if("username"===r)return n;if("password"===r)return i}const s=t[r];if(s&&s.value)return s.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return o;if("USERNAME"===e[1])return n;if("PASSWORD"===e[1])return i}return e},c=await getCurrentSnapshot(),l=Date.now(),u=+getConfig$1(c,"cwmp.udpConnectionRequestPort",{},l,a),p=+getConfig$1(c,"cwmp.connectionRequestTimeout",{},l,a),f=!!getConfig$1(c,"cwmp.connectionRequestAllowBasicAuth",{},l,a);let d=getConfigExpression(c,"cwmp.connectionRequestAuth");void 0===d&&(d=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),d=evaluate(d,{},l,a);const m=!!getConfig$1(c,"cwmp.debug",{},l,a);let g;s&&(g=udpConnectionRequest(s,d,u,m,e));try{await httpConnectionRequest(r,d,f,p,m,e)}catch(e){if(!g)throw e;await g}}async function watchTask(e,t,r){if(await new Promise(e=>setTimeout(e,500)),!await tasksCollection.findOne({_id:t},{projection:{_id:1}}))return"completed";const s={_id:`${e}:task_${t}`};return await faultsCollection.findOne(s,{projection:{_id:1}})?"fault":(r-=500)<=0?"timeout":watchTask(e,t,r)}function sanitizeTask(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(typeOf(e.expiry)===DATE_TYPE||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`);break;case"refreshObject":case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property")}return e}async function insertTasks(e){if(e&&typeOf(e)!==ARRAY_TYPE)e=[e];else if(!e||0===e.length)return e||[];for(const t of e)sanitizeTask(t),t.uniqueKey&&await tasksCollection.deleteOne({device:t.device,uniqueKey:t.uniqueKey});return await tasksCollection.insertMany(e),e}async function deleteDevice(e){await Promise.all([tasksCollection.deleteMany({device:e}),devicesCollection.deleteOne({_id:e}),faultsCollection.deleteMany({_id:{$regex:`^${escapeRegExp(e)}\\:`}}),operationsCollection.deleteMany({_id:{$regex:`^${escapeRegExp(e)}\\:`}}),del(`${e}_tasks_faults_operations`)])}const version="1.2.0-beta.0+20200714065211";function ping(e,t){let r,s,n;switch(os.platform()){case"linux":r=`ping -w 1 -i 0.2 -c 3 ${e}`,s=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,n=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;case"freebsd":r=`ping -t 1 -c 3 ${e}`,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,n=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/;break;default:return t(new Error("Platform not supported"))}child_process.exec(r,(e,r)=>{let i;if(r){const e=r.match(s);if(e)i={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:+e[4],avg:+e[5],max:+e[6],mdev:+e[7]};else{const e=r.match(n);e&&(i={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}}t(e,i,r)})}const AUTH_TOKEN_REGEX=/^\/auth\/token\/?$/,DEVICE_TASKS_REGEX=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tasks\/?$/,TASKS_REGEX=/^\/tasks\/([a-zA-Z0-9\-_%]+)(\/[a-zA-Z_]*)?$/,TAGS_REGEX=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tags\/([a-zA-Z0-9\-_%]+)\/?$/,PRESETS_REGEX=/^\/presets\/([a-zA-Z0-9\-_%]+)\/?$/,OBJECTS_REGEX=/^\/objects\/([a-zA-Z0-9\-_%]+)\/?$/,FILES_REGEX=/^\/files\/([a-zA-Z0-9%!*'();:@&=+$,?#[\]\-_.~]+)\/?$/,PING_REGEX=/^\/ping\/([a-zA-Z0-9\-_.:]+)\/?$/,QUERY_REGEX=/^\/([a-zA-Z0-9_]+)\/?$/,DELETE_DEVICE_REGEX=/^\/devices\/([a-zA-Z0-9\-_%]+)\/?$/,PROVISIONS_REGEX=/^\/provisions\/([a-zA-Z0-9\-_%]+)\/?$/,VIRTUAL_PARAMETERS_REGEX=/^\/virtual_parameters\/([a-zA-Z0-9\-_%]+)\/?$/,FAULTS_REGEX=/^\/faults\/([a-zA-Z0-9\-_%:]+)\/?$/;function throwError(e,t){throw t&&(t.writeHead(500,{Connection:"close"}),t.end(`${e.name}: ${e.message}`)),e}function listener$1(e,t){const r=[];let s=0;function n(e){info({message:e})}function i(e){return new Promise(function(t,r){var s;e.headers.hasOwnProperty("authorization")||(n("token authentication/verification failed - no Bearer token was specified"),Object.keys(e.headers).forEach(function(t){info({message:t+": "+e.headers[t]})}),n("token authentication/verification failed - no Bearer token was specified end"),r(!1)),e.headers.hasOwnProperty("authorization")&&(s=e.headers.authorization,new Promise(function(e,t){var r=fs__default.readFileSync("/home/acs/.ssh/id_rsa");try{var n=jwt.verify(s.split(" ")[1],r,{algorithms:["RS256"]});getUsers().then(r=>{var s=!1;Object.keys(r).forEach(function(t){r[t]._id==n.username&&e(s=!0)}),t(s)})}catch(e){warn({message:"error authenticating/verifying token"}),warn({message:e}),t(!1)}})).then(function(e){t(!0)},function(t){n("token authentication/verification failed"),Object.keys(e.headers).forEach(function(t){info({message:t+": "+e.headers[t]})}),n("token authentication/verification failed"),r(!1)})})}t.setHeader("GenieACS-Version",version),e.addListener("data",e=>{r.push(e),s+=e.length}),e.addListener("end",()=>{const n=function(){const e=Buffer.allocUnsafe(s);let t=0;for(const s of r)s.copy(e,t,0,s.length),t+=s.length;return e}(),o=url.parse(e.url,!0);i(e).then(function(r){if(PRESETS_REGEX.test(o.pathname)){const r=querystring.unescape(PRESETS_REGEX.exec(o.pathname)[1]);if("PUT"===e.method){const e=JSON.parse(n.toString());e._id=r,presetsCollection.replaceOne({_id:r},e,{upsert:!0},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else"DELETE"===e.method?presetsCollection.deleteOne({_id:r},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(OBJECTS_REGEX.test(o.pathname)){const r=querystring.unescape(OBJECTS_REGEX.exec(o.pathname)[1]);if("PUT"===e.method){const e=JSON.parse(n.toString());e._id=r,objectsCollection.replaceOne({_id:r},e,{upsert:!0},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else"DELETE"===e.method?objectsCollection.deleteOne({_id:r},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(PROVISIONS_REGEX.test(o.pathname)){const r=querystring.unescape(PROVISIONS_REGEX.exec(o.pathname)[1]);if("PUT"===e.method){const e={_id:r,script:n.toString()};try{new vm.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}provisionsCollection.replaceOne({_id:r},e,{upsert:!0},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else"DELETE"===e.method?provisionsCollection.deleteOne({_id:r},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(VIRTUAL_PARAMETERS_REGEX.test(o.pathname)){const r=querystring.unescape(VIRTUAL_PARAMETERS_REGEX.exec(o.pathname)[1]);if("PUT"===e.method){const e={_id:r,script:n.toString()};try{new vm.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}virtualParametersCollection.replaceOne({_id:r},e,{upsert:!0},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else"DELETE"===e.method?virtualParametersCollection.deleteOne({_id:r},e=>{e?throwError(e,t):del("presets_hash").then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(TAGS_REGEX.test(o.pathname)){const r=TAGS_REGEX.exec(o.pathname),s=querystring.unescape(r[1]),n=querystring.unescape(r[2]);"POST"===e.method?devicesCollection.updateOne({_id:s},{$addToSet:{_tags:n}},e=>{e?throwError(e,t):(t.writeHead(200),t.end())}):"DELETE"===e.method?devicesCollection.updateOne({_id:s},{$pull:{_tags:n}},e=>{e?throwError(e,t):(t.writeHead(200),t.end())}):(t.writeHead(405,{Allow:"POST, DELETE"}),t.end("405 Method Not Allowed"))}else if(FAULTS_REGEX.test(o.pathname))if("DELETE"===e.method){const e=querystring.unescape(FAULTS_REGEX.exec(o.pathname)[1]),r=e.split(":",1)[0],s=e.slice(r.length+1);faultsCollection.deleteOne({_id:e},e=>{if(e)throwError(e,t);else if(s.startsWith("task_")){const e=new mongodb.ObjectID(s.slice(5));tasksCollection.deleteOne({_id:e},e=>{e?throwError(e,t):del(`${r}_tasks_faults_operations`).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else del(`${r}_tasks_faults_operations`).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}else t.writeHead(405,{Allow:"DELETE"}),t.end("405 Method Not Allowed");else if(DEVICE_TASKS_REGEX.test(o.pathname))if("POST"===e.method){const e=querystring.unescape(DEVICE_TASKS_REGEX.exec(o.pathname)[1]);if(n.length){const r=JSON.parse(n.toString());r.device=e,insertTasks(r).then(()=>{del(`${e}_tasks_faults_operations`).then(()=>{null!=o.query.connection_request?connectionRequest(e).then(()=>{const s=o.query.timeout&&parseInt(o.query.timeout)||get("DEVICE_ONLINE_THRESHOLD",e);watchTask(e,r._id,s).then(e=>{"timeout"===e?(t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),t.end(JSON.stringify(r))):"fault"===e?tasksCollection.findOne({_id:r._id},(e,r)=>{e?throwError(e,t):(t.writeHead(202,"Task faulted",{"Content-Type":"application/json"}),t.end(JSON.stringify(r)))}):(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(r)))}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}).catch(e=>{t.writeHead(202,e.message,{"Content-Type":"application/json"}),t.end(JSON.stringify(r))}):(t.writeHead(202,{"Content-Type":"application/json"}),t.end(JSON.stringify(r)))}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}else null!=o.query.connection_request?connectionRequest(e).then(()=>{t.writeHead(200),t.end()}).catch(e=>{t.writeHead(504),t.end(`${e.name}: ${e.message}`)}):(t.writeHead(400),t.end())}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else if(TASKS_REGEX.test(o.pathname)){const r=TASKS_REGEX.exec(o.pathname),s=querystring.unescape(r[1]),n=r[2];n&&"/"!==n?"/retry"===n?"POST"===e.method?tasksCollection.findOne({_id:new mongodb.ObjectID(s)},{projection:{device:1}},(e,r)=>{if(e)return void throwError(e,t);const n=r.device;faultsCollection.deleteOne({_id:`${n}:task_${s}`},e=>{e?throwError(e,t):del(`${n}_tasks_faults_operations`).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})}):(t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed")):(t.writeHead(404),t.end()):"DELETE"===e.method?tasksCollection.findOne({_id:new mongodb.ObjectID(s)},{projection:{device:1}},(e,r)=>{if(e)return void throwError(e,t);if(!r)return t.writeHead(404),void t.end("Task not found");const n=r.device;tasksCollection.deleteOne({_id:new mongodb.ObjectID(s)},e=>{e?throwError(e,t):faultsCollection.deleteOne({_id:`${n}:task_${s}`},e=>{e?throwError(e,t):del(`${n}_tasks_faults_operations`).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})})})}):(t.writeHead(405,{Allow:"PUT DELETE"}),t.end("405 Method Not Allowed"))}else if(FILES_REGEX.test(o.pathname)){const r=querystring.unescape(FILES_REGEX.exec(o.pathname)[1]);if("PUT"===e.method){const s={fileType:e.headers.filetype,oui:e.headers.oui,productClass:e.headers.productclass,version:e.headers.version},i=new mongodb.GridFSBucket(client.db());i.delete(r,()=>{const e=i.openUploadStreamWithId(r,r,{metadata:s});e.on("error",e=>{throwError(e,t)}),e.end(n,()=>{t.writeHead(201),t.end()})})}else if("DELETE"===e.method){new mongodb.GridFSBucket(client.db()).delete(r,e=>{if(e)return e.message.startsWith("FileNotFound")?(t.writeHead(404),void t.end("404 Not Found")):void throwError(e,t);t.writeHead(200),t.end()})}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed")}else if(PING_REGEX.test(o.pathname)){ping(querystring.unescape(PING_REGEX.exec(o.pathname)[1]),(e,r,s)=>{if(e)return r?(t.writeHead(404,{"Cache-Control":"no-cache"}),void t.end(`${e.name}: ${e.message}`)):(t.writeHead(500,{Connection:"close"}),void t.end(`${e.name}: ${e.message}`));t.writeHead(200,{"Content-Type":"text/plain","Cache-Control":"no-cache"}),t.end(s)})}else if(DELETE_DEVICE_REGEX.test(o.pathname)){if("DELETE"!==e.method)return t.writeHead(405,{Allow:"DELETE"}),void t.end("405 Method Not Allowed");deleteDevice(querystring.unescape(DELETE_DEVICE_REGEX.exec(o.pathname)[1])).then(()=>{t.writeHead(200),t.end()}).catch(e=>{setTimeout(()=>{throwError(e,t)})})}else if(QUERY_REGEX.test(o.pathname)){let r=QUERY_REGEX.exec(o.pathname)[1],s=r.indexOf("_");for(;s++>=0;){const e=s<r.length?r[s].toUpperCase():"";r=r.slice(0,s-1)+e+r.slice(s+1),s=r.indexOf("_",s)}if("GET"!==e.method&&"HEAD"!==e.method)return t.writeHead(405,{Allow:"GET, HEAD"}),void t.end("405 Method Not Allowed");const n=db[`${r}Collection`];if(!n)return t.writeHead(404),void t.end("404 Not Found");let i={};if(o.query.query)try{i=JSON.parse(o.query.query)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}switch(r){case"devices":i=expand(i);break;case"tasks":i=sanitizeQueryTypes(i,{_id:e=>new mongodb.ObjectID(e),timestamp:e=>new Date(e),retries:Number});break;case"faults":i=sanitizeQueryTypes(i,{timestamp:e=>new Date(e),retries:Number})}let a=null;if(o.query.projection){a={};for(const e of o.query.projection.split(","))a[e.trim()]=1}const c=n.find(i,{projection:a});if(o.query.sort){const e=JSON.parse(o.query.sort),t={};for(const[s,n]of Object.entries(e))"_"!==s[s.lastIndexOf(".")+1]&&"devices"===r?t[`${s}._value`]=n:t[s]=n;c.sort(t)}o.query.skip&&c.skip(parseInt(o.query.skip)),o.query.limit&&c.limit(parseInt(o.query.limit)),c.count(!1,(r,n)=>{r?throwError(r):(t.writeHead(200,{"Content-Type":"application/json",total:n}),"HEAD"!==e.method?(t.write("[\n"),s=0,c.forEach(e=>{s++&&t.write(",\n"),t.write(JSON.stringify(e))},e=>{e?throwError(e):t.end("\n]")})):t.end())})}else t.writeHead(404),t.end("404 Not Found")},function(r){if(AUTH_TOKEN_REGEX.test(o.pathname))if("POST"===e.method){var s=fs__default.readFileSync("/home/acs/.ssh/id_rsa");jwt.sign({exp:Math.floor(Date.now()/1e3)+31536e4,username:"admin"},s,{algorithm:"RS256"})}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else t.writeHead(401),t.end("401 Not Authorized")})})}init("nbi",version);const SERVICE_ADDRESS=get("NBI_INTERFACE"),SERVICE_PORT=get("NBI_PORT");function exitWorkerGracefully(){setTimeout(exitWorkerUngracefully,5e3).unref(),Promise.all([disconnect(),disconnect$1(),killAll(),worker.disconnect()]).catch(exitWorkerUngracefully)}function exitWorkerUngracefully(){killAll().then(()=>{process.exit(1)})}if(worker){const e={key:get("NBI_SSL_KEY"),cert:get("NBI_SSL_CERT")};let t=!1;process.on("uncaughtException",e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(error({message:"Uncaught exception",exception:e,pid:process.pid}),t=!0,stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully))});const r=(e,r)=>{t&&r.setHeader("Connection","close"),listener$1(e,r)},s=Promise.all([connect(),connect$1()]).then(()=>{start$1(SERVICE_PORT,SERVICE_ADDRESS,e,r)}).catch(e=>{setTimeout(()=>{throw e})});process.on("SIGINT",()=>{t=!0,s.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})}),process.on("SIGTERM",()=>{t=!0,s.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})})}else{const e=get("NBI_WORKER_PROCESSES");info({message:"genieacs-nbi starting",pid:process.pid,version:version}),start(e,SERVICE_PORT,SERVICE_ADDRESS),process.on("SIGINT",()=>{info({message:"Received signal SIGINT, exiting",pid:process.pid}),stop()}),process.on("SIGTERM",()=>{info({message:"Received signal SIGTERM, exiting",pid:process.pid}),stop()})}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuaWVhY3MtbmJpIiwic291cmNlcyI6WyIuLi8uLi9saWIvY29uZmlnLnRzIiwiLi4vLi4vbGliL2ZvcndhcmRlZC50cyIsIi4uLy4uL2xpYi9sb2dnZXIudHMiLCIuLi8uLi9saWIvY2x1c3Rlci50cyIsIi4uLy4uL2xpYi9zZXJ2ZXIudHMiLCIuLi8uLi9saWIvY29tbW9uLnRzIiwiLi4vLi4vbGliL2NvbW1vbi9leHByZXNzaW9uLXBhcnNlci50cyIsIi4uLy4uL2xpYi9jb21tb24vcGF0aC50cyIsIi4uLy4uL2xpYi9kYi50cyIsIi4uLy4uL2xpYi9xdWVyeS50cyIsIi4uLy4uL2xpYi9jYWNoZS50cyIsIi4uLy4uL2xpYi9jb21tb24vZXhwcmVzc2lvbi50cyIsIi4uLy4uL2xpYi9tb25nb2RiLWZ1bmN0aW9ucy50cyIsIi4uLy4uL2xpYi9zY2hlZHVsaW5nLnRzIiwiLi4vLi4vbGliL2xvY2FsLWNhY2hlLnRzIiwiLi4vLi4vbGliL2F1dGgudHMiLCIuLi8uLi9saWIvZXh0ZW5zaW9ucy50cyIsIi4uLy4uL2xpYi9kZWJ1Zy50cyIsIi4uLy4uL2xpYi9jb25uZWN0aW9uLXJlcXVlc3QudHMiLCIuLi8uLi9saWIvYXBpLWZ1bmN0aW9ucy50cyIsIi4uLy4uL2xpYi9waW5nLnRzIiwiLi4vLi4vbGliL25iaS50cyIsIi4uLy4uL2Jpbi9nZW5pZWFjcy1uYmkiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbImNvbmZpZ0RpciIsImN3bXBTc2wiLCJuYmlTc2wiLCJmc1NzbCIsInVpU3NsIiwiZnNIb3N0bmFtZSIsIlJPT1RfRElSIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImV4aXN0c1N5bmMiLCJkIiwicHJvY2VzcyIsImN3ZCIsIm9wdGlvbnMiLCJFWFRfRElSIiwidHlwZSIsImRlZmF1bHQiLCJNT05HT0RCX0NPTk5FQ1RJT05fVVJMIiwiQ1dNUF9XT1JLRVJfUFJPQ0VTU0VTIiwiQ1dNUF9QT1JUIiwiQ1dNUF9JTlRFUkZBQ0UiLCJDV01QX1NTTF9DRVJUIiwiQ1dNUF9TU0xfS0VZIiwiQ1dNUF9MT0dfRklMRSIsIkNXTVBfQUNDRVNTX0xPR19GSUxFIiwiTkJJX1dPUktFUl9QUk9DRVNTRVMiLCJOQklfUE9SVCIsIk5CSV9JTlRFUkZBQ0UiLCJOQklfU1NMX0NFUlQiLCJOQklfU1NMX0tFWSIsIk5CSV9MT0dfRklMRSIsIk5CSV9BQ0NFU1NfTE9HX0ZJTEUiLCJGU19XT1JLRVJfUFJPQ0VTU0VTIiwiRlNfUE9SVCIsIkZTX0lOVEVSRkFDRSIsIkZTX1NTTF9DRVJUIiwiRlNfU1NMX0tFWSIsIkZTX1VSTF9QUkVGSVgiLCJGU19MT0dfRklMRSIsIkZTX0FDQ0VTU19MT0dfRklMRSIsIlVJX1dPUktFUl9QUk9DRVNTRVMiLCJVSV9QT1JUIiwiVUlfSU5URVJGQUNFIiwiVUlfU1NMX0NFUlQiLCJVSV9TU0xfS0VZIiwiVUlfTE9HX0ZJTEUiLCJVSV9BQ0NFU1NfTE9HX0ZJTEUiLCJVSV9KV1RfU0VDUkVUIiwiVURQX0NPTk5FQ1RJT05fUkVRVUVTVF9QT1JUIiwiRk9SV0FSREVEX0hFQURFUiIsIkRPV05MT0FEX1RJTUVPVVQiLCJFWFRfVElNRU9VVCIsIk1BWF9DQUNIRV9UVEwiLCJERUJVR19GSUxFIiwiREVCVUdfRk9STUFUIiwiREVCVUciLCJSRVRSWV9ERUxBWSIsIlNFU1NJT05fVElNRU9VVCIsIkNPTk5FQ1RJT05fUkVRVUVTVF9USU1FT1VUIiwiR1BOX05FWFRfTEVWRUwiLCJHUFZfQkFUQ0hfU0laRSIsIk1BWF9ERVBUSCIsIkNPT0tJRVNfUEFUSCIsIkxPR19GT1JNQVQiLCJBQ0NFU1NfTE9HX0ZPUk1BVCIsIk1BWF9DT05DVVJSRU5UX1JFUVVFU1RTIiwiREFURVRJTUVfTUlMTElTRUNPTkRTIiwiQk9PTEVBTl9MSVRFUkFMIiwiQ09OTkVDVElPTl9SRVFVRVNUX0FMTE9XX0JBU0lDX0FVVEgiLCJNQVhfQ09NTUlUX0lURVJBVElPTlMiLCJERVZJQ0VfT05MSU5FX1RIUkVTSE9MRCIsImFsbENvbmZpZyIsInNldENvbmZpZyIsIm5hbWUiLCJ2YWx1ZSIsImNvbW1hbmRMaW5lQXJndW1lbnQiLCJjYXN0IiwidmFsIiwiTnVtYmVyIiwiaW5jbHVkZXMiLCJTdHJpbmciLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJfdmFsdWUiLCJvcHRpb25OYW1lIiwib3B0aW9uRGV0YWlscyIsIk9iamVjdCIsImVudHJpZXMiLCJuIiwicmVwbGFjZSIsInN0YXJ0c1dpdGgiLCJzbGljZSIsImxlbmd0aCIsImVudiIsImFyZ3YiLCJhcmciLCJzaGlmdCIsInYiLCJrIiwiY29uZmlnRmlsZW5hbWUiLCJjb25maWdGaWxlIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwidG9TdHJpbmciLCJnZXQiLCJkZXZpY2VJZCIsImkiLCJsYXN0SW5kZXhPZiIsImNvbmZpZy5nZXQiLCJjYWNoZSIsIldlYWtNYXAiLCJjaWRycyIsInN0ciIsInNwbGl0IiwibWFwIiwicyIsInB1c2giLCJwYXJzZUNJRFIiLCJlcnIiLCJpcCIsInRvQnl0ZUFycmF5IiwicGFyc2VGb3J3YXJkZWRIZWFkZXIiLCJyZXMiLCJrZXkiLCJrZXlJZHgiLCJ2YWx1ZUlkeCIsImNoYXIiLCJjaGFyQ29kZUF0IiwicXVvdGVJZHgiLCJjIiwiZ2V0UmVxdWVzdE9yaWdpbiIsInJlcXVlc3QiLCJvcmlnaW4iLCJzb2MiLCJzb2NrZXQiLCJsb2NhbEFkZHJlc3MiLCJsb2NhbFBvcnQiLCJyZW1vdGVBZGRyZXNzIiwicmVtb3RlUG9ydCIsImhvc3QiLCJoZWFkZXJzIiwiZW5jcnlwdGVkIiwiaGVhZGVyIiwic29tZSIsImNpZHIiLCJtYXRjaCIsInBhcnNlZCIsInBvcnQiLCJwYXJzZUludCIsInNldCIsIlJFT1BFTl9FVkVSWSIsImRlZmF1bHRNZXRhIiwiTE9HX0ZJTEUiLCJBQ0NFU1NfTE9HX0ZJTEUiLCJMT0dfU1lTVEVNRCIsImxvZ1N0cmVhbSIsImZzLmNyZWF0ZVdyaXRlU3RyZWFtIiwiZmQiLCJzdGRlcnIiLCJsb2dTdGF0IiwiZnMuZnN0YXRTeW5jIiwiYWNjZXNzTG9nU3RyZWFtIiwic3Rkb3V0IiwiYWNjZXNzTG9nU3RhdCIsInJlb3BlbiIsImNvdW50ZXIiLCJmcy5zdGF0Iiwic3RhdCIsIm1lc3NhZ2UiLCJkZXYiLCJpbm8iLCJlbmQiLCJmcy5vcGVuU3luYyIsInNldFRpbWVvdXQiLCJEYXRlIiwibm93IiwidW5yZWYiLCJpbml0Iiwic2VydmljZSIsInZlcnNpb24iLCJob3N0bmFtZSIsIm9zLmhvc3RuYW1lIiwicGlkIiwidG9VcHBlckNhc2UiLCJKT1VSTkFMX1NUUkVBTSIsImlub2RlIiwiZmxhdHRlbiIsImRldGFpbHMiLCJzZXNzaW9uQ29udGV4dCIsImh0dHBSZXF1ZXN0IiwiZXhjZXB0aW9uIiwiZXhjZXB0aW9uTmFtZSIsImV4Y2VwdGlvbk1lc3NhZ2UiLCJleGNlcHRpb25TdGFjayIsInN0YWNrIiwidGFzayIsInRhc2tJZCIsIl9pZCIsInJwYyIsImFjc1JlcXVlc3QiLCJhY3NSZXF1ZXN0SWQiLCJpZCIsImFjc1JlcXVlc3ROYW1lIiwiY29tbWFuZEtleSIsImFjc1JlcXVlc3RDb21tYW5kS2V5IiwiY3BlUmVxdWVzdCIsImNwZVJlcXVlc3RJZCIsImluZm9ybUV2ZW50IiwiZXZlbnQiLCJqb2luIiwiaW5mb3JtUmV0cnlDb3VudCIsInJldHJ5Q291bnQiLCJjcGVSZXF1ZXN0TmFtZSIsImNwZVJlcXVlc3RDb21tYW5kS2V5IiwiY3BlRmF1bHQiLCJjcGVGYXVsdENvZGUiLCJkZXRhaWwiLCJmYXVsdENvZGUiLCJjcGVGYXVsdFN0cmluZyIsImZhdWx0U3RyaW5nIiwiZmF1bHQiLCJjb2RlIiwiZmF1bHRNZXNzYWdlIiwiY29udGV4dCIsInJlcSIsInN0YXRlIiwidXNlciIsInVzZXJuYW1lIiwiZm9ybWF0SnNvbiIsInN5c3RlbWQiLCJzZXZlcml0eSIsInN0cmluZ2lmeSIsIm9zLkVPTCIsImZvcm1hdFNpbXBsZSIsInNraXAiLCJ0aW1lc3RhbXAiLCJyZW1vdGUiLCJrZXlzIiwibWV0YSIsImt2IiwibG9nIiwidG9JU09TdHJpbmciLCJhc3NpZ24iLCJ3cml0ZSIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJyZXNwYXduVGltZXN0YW1wIiwiY3Jhc2hlcyIsImZvcmsiLCJ3IiwiY2x1c3RlciIsIm9uIiwiaXNEZWFkIiwicmVzdGFydFdvcmtlciIsIndvcmtlciIsInNpZ25hbCIsIm1zZyIsImV4aXRDb2RlIiwibG9nZ2VyLmVycm9yIiwibWluMSIsIm1pbjIiLCJtaW4zIiwiZmlsdGVyIiwicmVtb3ZlTGlzdGVuZXIiLCJ3b3JrZXJzIiwia2lsbCIsIk1hdGgiLCJtYXgiLCJzdGFydCIsIndvcmtlckNvdW50Iiwic2VydmljZVBvcnQiLCJzZXJ2aWNlQWRkcmVzcyIsImFkZHJlc3MiLCJhZGRyZXNzVHlwZSIsImxvZ2dlci5pbmZvIiwiY3B1cyIsInN0b3AiLCJzZXJ2ZXIiLCJsaXN0ZW5lciIsImNsb3NlU2VydmVyIiwidGltZW91dCIsImNhbGxiYWNrIiwiY2IiLCJjbG9zZSIsIm5ldHdvcmtJbnRlcmZhY2UiLCJzc2wiLCJfbGlzdGVuZXIiLCJvbkNvbm5lY3Rpb24iLCJrZWVwQWxpdmVUaW1lb3V0IiwiY2VydCIsImYiLCJmcy5yZWFkRmlsZVN5bmMiLCJwYXRoLnJlc29sdmUiLCJodHRwcy5jcmVhdGVTZXJ2ZXIiLCJodHRwLmNyZWF0ZVNlcnZlciIsImxpc3RlbiIsIlByb21pc2UiLCJyZWplY3QiLCJFcnJvciIsIlNUUklOR19UWVBFIiwiQVJSQVlfVFlQRSIsIk9CSkVDVF9UWVBFIiwiREFURV9UWVBFIiwidHlwZU9mIiwib2JqIiwicHJvdG90eXBlIiwiY2FsbCIsImVzY2FwZVJlZ0V4cCIsImludGVycHJldEVzY2FwZXMiLCJlc2NhcGVzIiwiYiIsInIiLCJ0IiwiXyIsImVzY2FwZSIsImNoYXJBdCIsImhleCIsImZyb21DaGFyQ29kZSIsImhhc093blByb3BlcnR5IiwiZXhwIiwiQXJyYXkiLCJpc0FycmF5IiwiY2xvbmUiLCJzdWIiLCJhc3luYyIsIm1hcEFzeW5jIiwiYmluYXJ5TGVmdCIsIm9wZXJhdG9yc1BhcnNlciIsIm5leHRQYXJzZXIiLCJwYXJzaW1tb24uc2VxTWFwIiwicGFyc2ltbW9uLnNlcSIsIm1hbnkiLCJmaXJzdCIsInJlc3QiLCJyZWR1Y2UiLCJhY2MiLCJjaCIsIm9wIiwiYW5vdGhlciIsImNvbmNhdCIsImxhbmciLCJwYXJzaW1tb24uY3JlYXRlTGFuZ3VhZ2UiLCJDb21wYXJpc29uT3BlcmF0b3IiLCJwYXJzaW1tb25cbiAgICAgICAgICAgIC5hbHQiLCJwYXJzaW1tb24uc3RyaW5nIiwicGFyc2ltbW9uLm9wdFdoaXRlc3BhY2UiLCJMaWtlT3BlcmF0b3IiLCJwYXJzaW1tb25cbiAgICAgICAgICAgIC5yZWdleHAiLCJyZXN1bHQiLCJkZXNjIiwibm90Rm9sbG93ZWRCeSIsInBhcnNpbW1vbi5yZWdleHAiLCJJc051bGxPcGVyYXRvciIsIk5vdE9wZXJhdG9yIiwiQW5kT3BlcmF0b3IiLCJPck9wZXJhdG9yIiwiUGFyYW1ldGVyIiwiRXhwcmVzc2lvbiIsIndyYXAiLCJhdExlYXN0IiwieCIsIlN0cmluZ1ZhbHVlU3FsIiwiU3RyaW5nVmFsdWVKcyIsIk51bWJlclZhbHVlIiwiQm9vbGVhblZhbHVlIiwiTnVsbFZhbHVlIiwiRnVuY1ZhbHVlIiwiVmFsdWVFeHByZXNzaW9uIiwic2VwQnkiLCJhcmdzIiwiVmFsdWUiLCJwYXJzaW1tb24uYWx0IiwiQ29tcGFyaXNvbiIsInAiLCJvIiwicGFyc2ltbW9uLndoaXRlc3BhY2UiLCJhIiwib3IiLCJ0cnlQYXJzZSIsInBhcnNlTGlrZVBhdHRlcm4iLCJwYXQiLCJlc2MiLCJjaGFycyIsImNhY2hlMSIsIk1hcCIsImNhY2hlMiIsIlBhdGgiLCJbb2JqZWN0IE9iamVjdF0iLCJwYXR0ZXJuIiwiaW5kZXgiLCJhbGlhcyIsImlkeCIsInNlZ21lbnRzIiwicGFyc2VQYXRoIiwiaiIsInNvcnQiLCJmcmVlemUiLCJwYXJzZUFsaWFzIiwid2lsZGNhcmQiLCJhcnIiLCJhbCIsIm9mZnNldCIsInN0cmluZ0luZGV4IiwidGhpcyIsIl9zdHJpbmciLCJfc3RyaW5nSW5kZXgiLCJwYXRoIiwiaTEiLCJpMiIsInBhdGgyIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInRhc2tzQ29sbGVjdGlvbiIsImRldmljZXNDb2xsZWN0aW9uIiwicHJlc2V0c0NvbGxlY3Rpb24iLCJvYmplY3RzQ29sbGVjdGlvbiIsInByb3Zpc2lvbnNDb2xsZWN0aW9uIiwidmlydHVhbFBhcmFtZXRlcnNDb2xsZWN0aW9uIiwiZmF1bHRzQ29sbGVjdGlvbiIsImZpbGVzQ29sbGVjdGlvbiIsIm9wZXJhdGlvbnNDb2xsZWN0aW9uIiwicGVybWlzc2lvbnNDb2xsZWN0aW9uIiwidXNlcnNDb2xsZWN0aW9uIiwiY29uZmlnQ29sbGVjdGlvbiIsImNsaWVudFByb21pc2UiLCJjbGllbnQiLCJjb25uZWN0IiwiTW9uZ29DbGllbnQiLCJ1c2VOZXdVcmxQYXJzZXIiLCJkYiIsImNvbGxlY3Rpb24iLCJjcmVhdGVJbmRleCIsImRldmljZSIsImRpc2Nvbm5lY3QiLCJvcHRpbWl6ZVByb2plY3Rpb24iLCJzcGxpY2UiLCJmZXRjaERldmljZSIsIm9iamVjdCIsIndyaXRhYmxlIiwiZmluZE9uZSIsInN0b3JlUGFyYW1zIiwicGF0aExlbmd0aCIsInRzIiwiYXR0cnMiLCJzYXZlRGV2aWNlIiwiZGV2aWNlRGF0YSIsImlzTmV3Iiwic2Vzc2lvblRpbWVzdGFtcCIsInVwZGF0ZSIsIiRzZXQiLCIkdW5zZXQiLCIkYWRkVG9TZXQiLCIkcHVsbCIsImRpZmYiLCJ0aW1lc3RhbXBzIiwicGFyZW50IiwicGF0aHMiLCJhdHRyaWJ1dGVzIiwiaGFzIiwidmFsdWUxIiwidmFsdWUyIiwidmFsdWVUeXBlMSIsInZhbHVlVHlwZTIiLCJ2YWx1ZVRpbWVzdGFtcDEiLCJ2YWx1ZVRpbWVzdGFtcDIiLCJvYmplY3QxIiwib2JqZWN0MiIsIndyaXRhYmxlMiIsIndyaXRhYmxlMSIsIiRlYWNoIiwiJGluIiwiYXR0ck5hbWUiLCJpc0ludGVnZXIiLCJrayIsInZ2IiwidXBkYXRlMiIsInVwZGF0ZU9uZSIsInVwc2VydCIsImdldEZhdWx0cyIsImZpbmQiLCIkcmVnZXgiLCJ0b0FycmF5IiwiZmF1bHRzIiwiY2hhbm5lbCIsInByb3Zpc2lvbnMiLCJzYXZlRmF1bHQiLCJyZXBsYWNlT25lIiwiZGVsZXRlRmF1bHQiLCJkZWxldGVPbmUiLCJnZXREdWVUYXNrcyIsImN1ciIsInRhc2tzIiwiZXhwaXJ5IiwiZmlsZSIsInEiLCJPYmplY3RJRCIsImlzVmFsaWQiLCJmaWxlVHlwZSIsIm1ldGFkYXRhIiwiZmlsZU5hbWUiLCJmaWxlbmFtZSIsImNsZWFyVGFza3MiLCJ0YXNrSWRzIiwiZGVsZXRlTWFueSIsImdldE9wZXJhdGlvbnMiLCJvcGVyYXRpb25zIiwicmV0cmllcyIsInNhdmVPcGVyYXRpb24iLCJvcGVyYXRpb24iLCJkZWxldGVPcGVyYXRpb24iLCJnZXRQcmVzZXRzIiwiZ2V0T2JqZWN0cyIsImdldFByb3Zpc2lvbnMiLCJnZXRWaXJ0dWFsUGFyYW1ldGVycyIsImdldEZpbGVzIiwiZ2V0Q29uZmlnIiwiZ2V0UGVybWlzc2lvbnMiLCJnZXRVc2VycyIsInN0cmluZ1RvUmVnZXhwIiwiaW5wdXQiLCJmbGFncyIsImluZGV4T2YiLCJvdXRwdXQiLCJSZWdFeHAiLCJub3JtYWxpemUiLCJjb21tb24udHlwZU9mIiwiY29tbW9uLlNUUklOR19UWVBFIiwidmFscyIsIm0iLCJleGVjIiwicGFyc2VGbG9hdCIsImdldEZ1bGxZZWFyIiwiZXhwYW5kVmFsdWUiLCJjb21tb24uQVJSQVlfVFlQRSIsImNvbW1vbi5PQkpFQ1RfVFlQRSIsIm9ianMiLCJpbmRpY2VzIiwidmFsdWVzIiwicGVybXV0ZSIsInBhcmFtIiwiY29uZGl0aW9ucyIsImV4cGFuZCIsInF1ZXJ5IiwibmV3UXVlcnkiLCJlIiwiJG9yIiwic2FuaXRpemVRdWVyeVR5cGVzIiwidHlwZXMiLCJtb25nb0NvbGxlY3Rpb24iLCJtb25nb1RpbWVPZmZzZXQiLCJleHBpcmUiLCJleHBpcmVBZnRlclNlY29uZHMiLCJjb21tYW5kIiwiaG9zdEluZm8iLCJzeXN0ZW0iLCJjdXJyZW50VGltZSIsImdldFRpbWUiLCJmb3JFYWNoIiwiZGVsIiwidHRsIiwibG9jayIsImxvY2tOYW1lIiwidG9rZW4iLCJyYW5kb20iLCJleHBpcmVUZXN0IiwiZXhwaXJlU2V0IiwiJGx0ZSIsImV4dGVuZFR0bCIsInJlZ0V4cENhY2hlIiwiUkVEVUNFX1NLSVAiLCJsb29wIiwibGlrZVBhdHRlcm5Ub1JlZ0V4cCIsImNvbnZDaGFycyIsIi0iLCIvIiwiXFwiLCJeIiwiJCIsIioiLCIrIiwiPyIsIi4iLCIoIiwiKSIsInwiLCJbIiwiXSIsInsiLCJ9IiwiXFwlIiwiXFxfIiwibCIsImV2YWxFeHAiLCJ0ZXN0IiwiZXZhbHVhdGUiLCJldmFsdWF0ZUFzeW5jIiwicGFyc2VEYXRlIiwiaXNOYU4iLCJmbGF0dGVuRGV2aWNlIiwibmV3RGV2aWNlIiwicmVjdXJzaXZlIiwicm9vdCIsInRyZWUiLCJ2YWx1ZVRpbWVzdGFtcCIsIndyaXRhYmxlVGltZXN0YW1wIiwib2JqZWN0VGltZXN0YW1wIiwiY2hpbGRyZW5UaW1lc3RhbXAiLCJtb25nb1F1ZXJ5VG9GaWx0ZXIiLCJfcXVlcnkiLCJleHByZXNzaW9ucyIsImFuZCIsImV4aXN0cyIsImV4cHMiLCJwYXJzZUNyb24iLCJjcm9uRXhwIiwicGFydHMiLCJ1bnNoaWZ0IiwibGF0ZXIuc2NoZWR1bGUiLCJsYXRlci5wYXJzZSIsImNyb24iLCJSRUZSRVNIIiwiRVZJQ1RfVElNRU9VVCIsInNuYXBzaG90cyIsImN1cnJlbnRTbmFwc2hvdCIsIm5leHRSZWZyZXNoIiwiY29tcHV0ZUhhc2giLCJzbmFwc2hvdCIsImgiLCJjcnlwdG8uY3JlYXRlSGFzaCIsInByZXNldHMiLCJzY2hlZHVsZSIsImV2ZW50cyIsInByZWNvbmRpdGlvbiIsIm1kNSIsInZpcnR1YWxQYXJhbWV0ZXJzIiwiY29uZmlnIiwiZmlsZXMiLCJ1c2VycyIsInJvbGVzIiwicGVybWlzc2lvbnMiLCJsZXZlbHMiLCJkaWdlc3QiLCJmbGF0dGVuT2JqZWN0Iiwic3JjIiwicHJlZml4IiwiZHN0IiwiZmV0Y2hQcmVzZXRzIiwiZGIuZ2V0UHJlc2V0cyIsIm9iamVjdHMiLCJkYi5nZXRPYmplY3RzIiwicHJlc2V0IiwiY3J5cHRvXG4gICAgICAgICAgICAgICAgICAgIC5jcmVhdGVIYXNoIiwiZHVyYXRpb24iLCJzY2hlZHVsaW5nLnBhcnNlQ3JvbiIsImxvZ2dlci53YXJuIiwiZXhwcmVzc2lvbi5ldmFsdWF0ZSIsIl9wcm92aXNpb25zIiwiYWdlIiwidGFnIiwiZmV0Y2hQcm92aXNpb25zIiwiZGIuZ2V0UHJvdmlzaW9ucyIsImNyeXB0b1xuICAgICAgICAgICAgLmNyZWF0ZUhhc2giLCJzY3JpcHQiLCJ2bS5TY3JpcHQiLCJsaW5lT2Zmc2V0IiwiZmV0Y2hWaXJ0dWFsUGFyYW1ldGVycyIsImRiLmdldFZpcnR1YWxQYXJhbWV0ZXJzIiwiZmV0Y2hQZXJtaXNzaW9ucyIsInBlcm1zIiwiZGIuZ2V0UGVybWlzc2lvbnMiLCJyb2xlIiwiYWNjZXNzIiwicmVzb3VyY2UiLCJ2YWxpZGF0ZSIsImZldGNoRmlsZXMiLCJkYi5nZXRGaWxlcyIsImNvbnRlbnRUeXBlIiwiZmV0Y2hVc2VycyIsIl91c2VycyIsImRiLmdldFVzZXJzIiwicGFzc3dvcmQiLCJzYWx0IiwiZmV0Y2hDb25maWciLCJjb25mIiwiZGIuZ2V0Q29uZmlnIiwidWkiLCJmaWx0ZXJzIiwib3ZlcnZpZXciLCJfY29uZmlnIiwicmVmIiwicmVmcmVzaCIsImRiSGFzaCIsImNhY2hlLmdldCIsInVubG9ja09yRXh0ZW5kIiwiY2FjaGUubG9jayIsImFsbCIsImRlbGV0ZSIsImNhY2hlLnNldCIsImdldEN1cnJlbnRTbmFwc2hvdCIsInNuYXBzaG90S2V5Iiwib2xkT3B0cyIsImN3bXAuZG93bmxvYWRUaW1lb3V0IiwiY3dtcC5kZWJ1ZyIsImN3bXAucmV0cnlEZWxheSIsImN3bXAuc2Vzc2lvblRpbWVvdXQiLCJjd21wLmNvbm5lY3Rpb25SZXF1ZXN0VGltZW91dCIsImN3bXAuZ3BuTmV4dExldmVsIiwiY3dtcC5ncHZCYXRjaFNpemUiLCJjd21wLmNvb2tpZXNQYXRoIiwiY3dtcC5kYXRldGltZU1pbGxpc2Vjb25kcyIsImN3bXAuYm9vbGVhbkxpdGVyYWwiLCJjd21wLmNvbm5lY3Rpb25SZXF1ZXN0QWxsb3dCYXNpY0F1dGgiLCJjd21wLm1heENvbW1pdEl0ZXJhdGlvbnMiLCJjd21wLmRldmljZU9ubGluZVRocmVzaG9sZCIsImN3bXAudWRwQ29ubmVjdGlvblJlcXVlc3RQb3J0IiwiZ2V0Q29uZmlnRXhwcmVzc2lvbiIsInBhcnNlSGVhZGVyRmVpbGRzIiwicGFydCIsInBhcnNlV3d3QXV0aGVudGljYXRlSGVhZGVyIiwiYXV0aEhlYWRlciIsIm1ldGhvZCIsImJhc2ljIiwiQnVmZmVyIiwiZnJvbSIsInJlYWxtIiwibm9uY2UiLCJodHRwTWV0aG9kIiwidXJpIiwicW9wIiwiYm9keSIsImNub25jZSIsIm5jIiwiaGExIiwiY3JlYXRlSGFzaCIsImhhMWQiLCJoYTIiLCJib2R5SGFzaCIsImhhMmQiLCJoYXNoIiwic29sdmVEaWdlc3QiLCJyYW5kb21CeXRlcyIsImF1dGhTdHJpbmciLCJhbGdvcml0aG0iLCJvcGFxdWUiLCJUSU1FT1VUIiwicHJvY2Vzc2VzIiwiam9icyIsIm1lc3NhZ2VIYW5kbGVyIiwiZnVuYyIsInJ1biIsInNjcmlwdE5hbWUiLCJjcnlwdG8ucmFuZG9tQnl0ZXMiLCJzcGF3biIsInN0ZGlvIiwiY29ubmVjdGVkIiwic2VuZCIsInRpbWVUb0tpbGwiLCJjbGVhckludGVydmFsIiwia2lsbEFsbCIsImNvbm5lY3Rpb25UaW1lc3RhbXBzIiwiZ2V0Q29ubmVjdGlvblRpbWVzdGFtcCIsImNvbm5lY3Rpb24iLCJvdXRnb2luZ0h0dHBSZXF1ZXN0IiwiY29uIiwidXJsIiwiZ2V0SGVhZGVycyIsImFwcGVuZEZpbGVTeW5jIiwieWFtbC5zdHJpbmdpZnkiLCJvdXRnb2luZ0h0dHBSZXF1ZXN0RXJyb3IiLCJpbmNvbWluZ0h0dHBSZXNwb25zZSIsImh0dHBSZXNwb25zZSIsInN0YXR1c0NvZGUiLCJvdXRnb2luZ1VkcE1lc3NhZ2UiLCJleHRyYWN0QXV0aCIsImRmbHQiLCJfZXhwIiwiZXh0ZW5zaW9ucy5ydW4iLCJodHRwR2V0IiwiX2RlYnVnIiwiaHR0cFxuICAgICAgICAgICAgLmdldCIsInJlc3VtZSIsImRlYnVnLm91dGdvaW5nSHR0cFJlcXVlc3QiLCJkZWJ1Zy5pbmNvbWluZ0h0dHBSZXNwb25zZSIsImFib3J0IiwiZGVidWcub3V0Z29pbmdIdHRwUmVxdWVzdEVycm9yIiwiaHR0cENvbm5lY3Rpb25SZXF1ZXN0IiwiYXV0aEV4cCIsImFsbG93QmFzaWNBdXRoIiwicHJvdG9jb2wiLCJhZ2VudCIsImh0dHAuQWdlbnQiLCJtYXhTb2NrZXRzIiwia2VlcEFsaXZlIiwib3B0cyIsIkF1dGhvcml6YXRpb24iLCJhdXRoLmJhc2ljIiwiYXV0aC5zb2x2ZURpZ2VzdCIsImF1dGgucGFyc2VXd3dBdXRoZW50aWNhdGVIZWFkZXIiLCJ1ZHBDb25uZWN0aW9uUmVxdWVzdCIsInNvdXJjZVBvcnQiLCJwb3J0U3RyIiwiZGdyYW0uY3JlYXRlU29ja2V0IiwicmV1c2VBZGRyIiwiYmluZCIsImV4Y2x1c2l2ZSIsInRydW5jIiwiY24iLCJjcnlwdG9cbiAgICAgICAgICAgIC5jcmVhdGVIbWFjIiwiZGVidWcub3V0Z29pbmdVZHBNZXNzYWdlIiwiY29ubmVjdGlvblJlcXVlc3QiLCJkYi5kZXZpY2VzQ29sbGVjdGlvbiIsImNvbm5lY3Rpb25SZXF1ZXN0VXJsIiwidWRwQ29ubmVjdGlvblJlcXVlc3RBZGRyZXNzIiwiZXZhbENhbGxiYWNrIiwidW5kZWZpbmVkIiwiZGVidWciLCJ1ZHBQcm9tIiwid2F0Y2hUYXNrIiwiZGIudGFza3NDb2xsZWN0aW9uIiwicHJvamVjdGlvbiIsImRiLmZhdWx0c0NvbGxlY3Rpb24iLCJzYW5pdGl6ZVRhc2siLCJjb21tb24uREFURV9UWVBFIiwidmFsaWRQYXJhbVZhbHVlIiwicGFyYW1ldGVyTmFtZXMiLCJwYXJhbWV0ZXJWYWx1ZXMiLCJvYmplY3ROYW1lIiwidGFyZ2V0RmlsZU5hbWUiLCJpbnNlcnRUYXNrcyIsInVuaXF1ZUtleSIsImluc2VydE1hbnkiLCJkZWxldGVEZXZpY2UiLCJjb21tb24uZXNjYXBlUmVnRXhwIiwiZGIub3BlcmF0aW9uc0NvbGxlY3Rpb24iLCJjYWNoZS5kZWwiLCJwaW5nIiwiY21kIiwicGFyc2VSZWdFeHAxIiwicGFyc2VSZWdFeHAyIiwicGxhdGZvcm0iLCJtMSIsInBhY2tldHNUcmFuc21pdHRlZCIsInBhY2tldHNSZWNlaXZlZCIsInBhY2tldExvc3MiLCJtaW4iLCJhdmciLCJtZGV2IiwibTIiLCJBVVRIX1RPS0VOX1JFR0VYIiwiREVWSUNFX1RBU0tTX1JFR0VYIiwiVEFTS1NfUkVHRVgiLCJUQUdTX1JFR0VYIiwiUFJFU0VUU19SRUdFWCIsIk9CSkVDVFNfUkVHRVgiLCJGSUxFU19SRUdFWCIsIlBJTkdfUkVHRVgiLCJRVUVSWV9SRUdFWCIsIkRFTEVURV9ERVZJQ0VfUkVHRVgiLCJQUk9WSVNJT05TX1JFR0VYIiwiVklSVFVBTF9QQVJBTUVURVJTX1JFR0VYIiwiRkFVTFRTX1JFR0VYIiwidGhyb3dFcnJvciIsIndyaXRlSGVhZCIsIkNvbm5lY3Rpb24iLCJyZXNwb25zZSIsImNodW5rcyIsImJ5dGVzIiwiYXV0aGVudGljYXRlIiwiaGsiLCJhdXRob3JpemF0aW9uIiwicHJpdmF0ZUtleSIsImZzIiwicGF5bG9hZCIsImp3dCIsInZlcmlmeSIsImFsZ29yaXRobXMiLCJ0aGVuIiwidXNlckV4aXN0cyIsImF1dGhlbnRpY2F0ZWQiLCJzZXRIZWFkZXIiLCJWRVJTSU9OIiwiYWRkTGlzdGVuZXIiLCJjaHVuayIsImFsbG9jVW5zYWZlIiwiY29weSIsImdldEJvZHkiLCJ1cmxQYXJ0cyIsInVybC5wYXJzZSIsInBhdGhuYW1lIiwicHJlc2V0TmFtZSIsInF1ZXJ5c3RyaW5nLnVuZXNjYXBlIiwiZGIucHJlc2V0c0NvbGxlY3Rpb24iLCJjYWNoZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5kZWwiLCJjYXRjaCIsIkFsbG93IiwiZGIub2JqZWN0c0NvbGxlY3Rpb24iLCJwcm92aXNpb25OYW1lIiwiZGIucHJvdmlzaW9uc0NvbGxlY3Rpb24iLCJ2aXJ0dWFsUGFyYW1ldGVyTmFtZSIsImRiLnZpcnR1YWxQYXJhbWV0ZXJzQ29sbGVjdGlvbiIsIl90YWdzIiwiZmF1bHRJZCIsIm9iaklkIiwibW9uZ29kYi5PYmplY3RJRCIsImNhY2hlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZGVsIiwiYXBpRnVuY3Rpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluc2VydFRhc2tzIiwiY2FjaGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRlbCIsImNvbm5lY3Rpb25fcmVxdWVzdCIsImFwaUZ1bmN0aW9uc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25uZWN0aW9uUmVxdWVzdCIsInRhc2tUaW1lb3V0IiwiYXBpRnVuY3Rpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC53YXRjaFRhc2siLCJzdGF0dXMiLCJDb250ZW50LVR5cGUiLCJ0YXNrMiIsImFwaUZ1bmN0aW9uc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25uZWN0aW9uUmVxdWVzdCIsImFjdGlvbiIsImNhY2hlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRlbCIsImZpbGV0eXBlIiwib3VpIiwicHJvZHVjdENsYXNzIiwicHJvZHVjdGNsYXNzIiwiYnVja2V0IiwibW9uZ29kYi5HcmlkRlNCdWNrZXQiLCJkYi5jbGllbnQiLCJ1cGxvYWRTdHJlYW0iLCJvcGVuVXBsb2FkU3RyZWFtV2l0aElkIiwiQ2FjaGUtQ29udHJvbCIsImFwaUZ1bmN0aW9uc1xuICAgICAgICAgICAgICAgICAgICAuZGVsZXRlRGV2aWNlIiwiY29sbGVjdGlvbk5hbWUiLCJ1cCIsInF1ZXJ5LmV4cGFuZCIsInF1ZXJ5LnNhbml0aXplUXVlcnlUeXBlcyIsImxpbWl0IiwiY291bnQiLCJ0b3RhbCIsIml0ZW0iLCJzaWduIiwiZmxvb3IiLCJsb2dnZXIuaW5pdCIsIlNFUlZJQ0VfQUREUkVTUyIsIlNFUlZJQ0VfUE9SVCIsImV4aXRXb3JrZXJHcmFjZWZ1bGx5IiwiZXhpdFdvcmtlclVuZ3JhY2VmdWxseSIsImRiLmRpc2Nvbm5lY3QiLCJjYWNoZS5kaXNjb25uZWN0IiwiZXh0ZW5zaW9ucy5raWxsQWxsIiwiY2x1c3Rlci53b3JrZXIiLCJleGl0Iiwic3RvcHBpbmciLCJzZXJ2ZXJcbiAgICAgICAgICAgIC5zdG9wIiwiaW5pdFByb21pc2UiLCJkYi5jb25uZWN0IiwiY2FjaGUuY29ubmVjdCIsInNlcnZlci5zdGFydCIsImZpbmFsbHkiLCJzZXJ2ZXJcbiAgICAgICAgICAgICAgICAuc3RvcCIsIldPUktFUl9DT1VOVCIsImNsdXN0ZXIuc3RhcnQiLCJjbHVzdGVyLnN0b3AiXSwibWFwcGluZ3MiOiI7c21CQXVCQSxJQVdJQSxVQUFXQyxRQUFTQyxPQUFRQyxNQUFPQyxNQUFPQyxXQVhuQ0MsU0FBV0MsYUFBUUMsVUFBVyxNQUN6QyxNQUFRQyxpQkFBY0gsMEJBQTBCLENBQzlDLE1BQU1JLEVBQUlILGFBQVFELFNBQVUsTUFDNUIsR0FBSUksSUFBTUosU0FBVSxDQUNsQkEsU0FBV0ssUUFBUUMsTUFDbkIsTUFFRk4sU0FBV0ksRUFNYixNQUFNRyxRQUFVLENBQ2RDLFFBQVMsQ0FBRUMsS0FBTSxPQUFRQyxRQUFTVCxhQUFRRCxTQUFVLGVBQ3BEVyx1QkFBd0IsQ0FDdEJGLEtBQU0sU0FDTkMsUUFBUyxnQ0FHWEUsc0JBQXVCLENBQUVILEtBQU0sTUFBT0MsUUFBUyxHQUMvQ0csVUFBVyxDQUFFSixLQUFNLE1BQU9DLFFBQVMsTUFDbkNJLGVBQWdCLENBQUVMLEtBQU0sU0FBVUMsUUFBUyxXQUMzQ0ssY0FBZSxDQUFFTixLQUFNLFNBQVVDLFFBQVMsSUFDMUNNLGFBQWMsQ0FBRVAsS0FBTSxTQUFVQyxRQUFTLElBQ3pDTyxjQUFlLENBQUVS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
