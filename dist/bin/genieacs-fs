#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}const path=require("path"),fs=require("fs"),os=require("os"),ipaddr_js=require("ipaddr.js"),cluster=_interopDefault(require("cluster")),http=require("http"),https=require("https"),url=require("url"),querystring=require("querystring"),mongodb=require("mongodb"),parsimmon=require("parsimmon");let configDir,cwmpSsl,nbiSsl,fsSsl,uiSsl,fsHostname,ROOT_DIR=path.resolve(__dirname,"..");for(;!fs.existsSync(`${ROOT_DIR}/package.json`);){const e=path.resolve(ROOT_DIR,"..");if(e===ROOT_DIR){ROOT_DIR=process.cwd();break}ROOT_DIR=e}const options={EXT_DIR:{type:"path",default:path.resolve(ROOT_DIR,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},allConfig={};function setConfig(e,t,s=!1){if(null!=allConfig[e])return!0;function r(e,t){switch(t){case"int":return Number(e);case"bool":return["true","1"].includes(String(e).trim().toLowerCase());case"string":return String(e);case"path":return e?path.resolve(e):"";default:return null}}"CONFIG_DIR"!==e&&"config-dir"!==e||(configDir=configDir||path.resolve(ROOT_DIR,t)),"CWMP_SSL"!==e&&"cwmp-ssl"!==e||(cwmpSsl=cwmpSsl||String(t).toLowerCase().trim()),"NBI_SSL"!==e&&"nbi-ssl"!==e||(nbiSsl=nbiSsl||String(t).toLowerCase().trim()),"FS_SSL"!==e&&"fs-ssl"!==e||(fsSsl=fsSsl||String(t).toLowerCase().trim()),"UI_SSL"!==e&&"ui-ssl"!==e||(uiSsl=uiSsl||String(t).toLowerCase().trim()),"FS_HOSTNAME"!==e&&"fs-hostname"!==e||(fsHostname=fsHostname||String(t).trim()),"PRESETS_CACHE_DURATION"!==e&&"presets-cache-duration"!==e||setConfig("MAX_CACHE_TTL",t),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==e&&"get-parameter-names-depth-threshold"!==e||setConfig("GPN_NEXT_LEVEL",t),"TASK_PARAMETERS_BATCH_SIZE"!==e&&"task-parameters-batch-size"!==e||setConfig("GPV_BATCH_SIZE",t),"FS_IP"!==e&&"fs-ip"!==e||setConfig("FS_HOSTNAME",t);let o=null;for(const[n,i]of Object.entries(options)){let a=n;if(s&&(a=a.toLowerCase().replace(/_/g,"-")),e===a?(o=r(t,i.type),a=n):e.startsWith(`${a}-`)&&(o=r(t,i.type),a=`${n}-${e.slice(n.length+1)}`),null!=o)return allConfig[a]=o,process.env[`GENIEACS_${a}`]=o,!0}return!1}const argv=process.argv.slice(2);for(;argv.length;){const e=argv.shift();if("-"===e[0]){const t=argv.shift();setConfig(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&setConfig(e.slice(9),t);const configFilename=configDir?`${configDir}/config.json`:`${ROOT_DIR}/config/config.json`;if(fs.existsSync(configFilename)){const e=JSON.parse(fs.readFileSync(configFilename).toString());for(const[t,s]of Object.entries(e))setConfig(t,s)||(process.env[`GENIEACS_${t}`]=`${s}`)}if(configDir&&setConfig("EXT_DIR",`${configDir}/ext`),["true","1"].includes(cwmpSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("CWMP_SSL_CERT",`${e}/cwmp.crt`),setConfig("CWMP_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(nbiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("NBI_SSL_CERT",`${e}/cwmp.crt`),setConfig("NBI_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(fsSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("FS_SSL_CERT",`${e}/cwmp.crt`),setConfig("FS_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(uiSsl)){const e=configDir||`${ROOT_DIR}/config`;setConfig("UI_SSL_CERT",`${e}/cwmp.crt`),setConfig("UI_SSL_KEY",`${e}/cwmp.key`)}if(fsHostname){const e=allConfig.FS_PORT||7567;setConfig("FS_URL_PREFIX",(!!allConfig.FS_SSL_CERT?"https":"http")+`://${fsHostname}:${e}/`)}for(const[e,t]of Object.entries(options))null!=t.default&&setConfig(e,t.default);function get(e,t){if(!t)return allConfig[e];let s=allConfig[e=`${e}-${t}`];if(null!=s)return s;let r=e.lastIndexOf("-");return null!=(s=allConfig[e.slice(0,r)])?s:(r=e.lastIndexOf("-",r-1),null!=(s=allConfig[e.slice(0,r)])?s:(r=e.lastIndexOf("-",r-1),null!=(s=allConfig[e.slice(0,r)])?s:(r=e.lastIndexOf("-",r-1))>0&&null!=(s=allConfig[e.slice(0,r)])?s:null))}const FORWARDED_HEADER=""+get("FORWARDED_HEADER"),cache=new WeakMap,cidrs=[];for(const e of FORWARDED_HEADER.split(",").map(e=>e.trim()))try{cidrs.push(ipaddr_js.parseCIDR(e))}catch(t){try{const t=ipaddr_js.parse(e);cidrs.push([t,8*t.toByteArray().length])}catch(e){}}function parseForwardedHeader(e){e=e.toLowerCase();const t={};let s,r=0,o=-1;for(let n=0;n<e.length;++n){const i=e.charCodeAt(n);if(61===i)r>=0&&(s=e.slice(r,n).trim(),r=-1,o=n+1);else if(59===i)o>=0&&(t[s]=e.slice(o,n).trim()),o=-1,r=n+1;else{if(44===i)return o>=0&&(t[s]=e.slice(o,n).trim()),t;if(34===i&&o>=0){const i=n;if(!e.slice(o,i).trim())for(n+=1;n<e.length;++n){const a=e.charCodeAt(n);if(92===a&&++n,34===a){t[s]=JSON.parse(e.slice(i,n+1).trim()),o=-1,r=n+1;break}}}}}return o>=0&&(t[s]=e.slice(o).trim()),t}function getRequestOrigin(e){let t=cache.get(e);if(!t){const s=e.socket;t={localAddress:s.localAddress,localPort:s.localPort,remoteAddress:s.remoteAddress,remotePort:s.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const r=e.headers.forwarded;if(r){const e=ipaddr_js.parse(s.remoteAddress);if(cidrs.some(t=>e.match(t))){const e=parseForwardedHeader(r);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,s]=e.host.split(":",2);t.localPort=+s||t.localPort}if(e.for)if(e.for.startsWith("[")){const s=e.for.lastIndexOf("]");s>=0&&(t.remoteAddress=e.for.slice(1,s),t.remotePort=parseInt(e.for.slice(s+2))||t.remotePort)}else{const s=e.for.lastIndexOf(":");s>=0?(t.remoteAddress=e.for.slice(0,s),t.remotePort=parseInt(e.for.slice(s+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const s=e.by.lastIndexOf("]");s>=0&&(t.localAddress=e.by.slice(1,s),t.localPort=parseInt(e.by.slice(s+2))||t.localPort)}else{const s=e.by.lastIndexOf(":");s>=0?(t.localAddress=e.by.slice(0,s),t.localPort=parseInt(e.by.slice(s+1))||t.localPort):t.localAddress=e.by}}}cache.set(e,t)}return t}const REOPEN_EVERY=6e4,LOG_FORMAT=get("LOG_FORMAT"),ACCESS_LOG_FORMAT=get("ACCESS_LOG_FORMAT")||LOG_FORMAT,defaultMeta={};let LOG_FILE,ACCESS_LOG_FILE,LOG_SYSTEMD=!1,ACCESS_LOG_SYSTEMD=!1,logStream=fs.createWriteStream(null,{fd:process.stderr.fd}),logStat=fs.fstatSync(logStream.fd),accessLogStream=fs.createWriteStream(null,{fd:process.stdout.fd}),accessLogStat=fs.fstatSync(accessLogStream.fd);function reopen(){let e=1;LOG_FILE&&(++e,fs.stat(LOG_FILE,(t,s)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;s&&s.dev===logStat.dev&&s.ino===logStat.ino||(logStream.end(),logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),ACCESS_LOG_FILE&&(++e,fs.stat(ACCESS_LOG_FILE,(t,s)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;s&&s.dev===accessLogStat.dev&&s.ino===accessLogStat.ino||(accessLogStream.end(),accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd)),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()})),0==--e&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function init(e,t){defaultMeta.hostname=os.hostname(),defaultMeta.pid=process.pid,defaultMeta.name=`genieacs-${e}`,defaultMeta.version=t,LOG_FILE=get(`${e.toUpperCase()}_LOG_FILE`),ACCESS_LOG_FILE=get(`${e.toUpperCase()}_ACCESS_LOG_FILE`),LOG_FILE&&(logStream=fs.createWriteStream(null,{fd:fs.openSync(LOG_FILE,"a")}),logStat=fs.fstatSync(logStream.fd)),ACCESS_LOG_FILE&&(accessLogStream=fs.createWriteStream(null,{fd:fs.openSync(ACCESS_LOG_FILE,"a")}),accessLogStat=fs.fstatSync(accessLogStream.fd));const s=process.env.JOURNAL_STREAM;if(s){const[e,t]=s.split(":").map(parseInt);LOG_SYSTEMD=logStat.dev===e&&logStat.ino===t,ACCESS_LOG_SYSTEMD=accessLogStat.dev===e&&accessLogStat.ino===t}(LOG_FILE||ACCESS_LOG_FILE)&&setTimeout(reopen,REOPEN_EVERY-Date.now()%REOPEN_EVERY).unref()}function flatten(e){e.sessionContext&&(e.deviceId=e.sessionContext.deviceId,e.remoteAddress=getRequestOrigin(e.sessionContext.httpRequest).remoteAddress,delete e.sessionContext),e.exception&&(e.exceptionName=e.exception.name,e.exceptionMessage=e.exception.message,e.exceptionStack=e.exception.stack,delete e.exception),e.task&&(e.taskId=e.task._id,delete e.task),e.rpc&&(e.rpc.acsRequest?(e.acsRequestId=e.rpc.id,e.acsRequestName=e.rpc.acsRequest.name,e.rpc.acsRequest.commandKey&&(e.acsRequestCommandKey=e.rpc.acsRequest.commandKey)):e.rpc.cpeRequest?(e.cpeRequestId=e.rpc.id,"Inform"===e.rpc.cpeRequest.name?(e.informEvent=e.rpc.cpeRequest.event.join(","),e.informRetryCount=e.rpc.cpeRequest.retryCount):(e.cpeRequestName=e.rpc.cpeRequest.name,e.rpc.cpeRequest.commandKey&&(e.cpeRequestCommandKey=e.rpc.cpeRequest.commandKey))):e.rpc.cpeFault&&(e.acsRequestId=e.rpc.id,e.cpeFaultCode=e.rpc.cpeFault.detail.faultCode,e.cpeFaultString=e.rpc.cpeFault.detail.faultString),delete e.rpc),e.fault&&(e.faultCode=e.fault.code,e.faultMessage=e.fault.message,delete e.fault),e.context&&(e.remoteAddress=getRequestOrigin(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,s]of Object.entries(e))null==s&&delete e[t];return e}function formatJson(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(flatten(e))}${os.EOL}`}return`${JSON.stringify(flatten(e))}${os.EOL}`}function formatSimple(e,t){const s={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};flatten(e);let r="";e.remoteAddress&&(r=e.deviceId&&s.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:`${e.remoteAddress}: `);const o=Object.keys(e);let n="";const i=[];for(const t of o)s[t]||i.push(`${t}=${JSON.stringify(e[t])}`);if(i.length&&(n=`; ${i.join(" ")}`),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${r}${e.message}${n}${os.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${r}${e.message}${n}${os.EOL}`}function log(e){e.timestamp=(new Date).toISOString(),"json"===LOG_FORMAT?(e=Object.assign({},defaultMeta,e),logStream.write(formatJson(e,LOG_SYSTEMD))):logStream.write(formatSimple(e,LOG_SYSTEMD))}function info(e){e.severity="info",log(e)}function error(e){e.severity="error",log(e)}function accessLog(e){e.timestamp=(new Date).toISOString(),"json"===ACCESS_LOG_FORMAT?(Object.assign(e,defaultMeta),accessLogStream.write(formatJson(e,ACCESS_LOG_SYSTEMD))):accessLogStream.write(formatSimple(e,ACCESS_LOG_SYSTEMD))}function accessInfo(e){e.severity="info",accessLog(e)}function accessError(e){e.severity="error",accessLog(e)}let respawnTimestamp=0,crashes=[];function fork(){const e=cluster.fork();return e.on("error",t=>{if("EPIPE"!==t.code)throw t;setTimeout(()=>{if(!e.isDead())throw t},50)}),e}function restartWorker(e,t,s){const r={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(r.exitCode=t),null!=s&&(r.signal=s),error(r);const o=Date.now();crashes.push(o);let n=0,i=0,a=0;if(crashes=crashes.filter(e=>{if(e>o-6e4)++n;else if(e>o-12e4)++i;else{if(!(e>o-18e4))return!1;++a}return!0}),n>5&&i>5&&a>5){process.exitCode=1,cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill();error({message:"Too many crashes, exiting",pid:process.pid})}else(respawnTimestamp=Math.max(o,respawnTimestamp+2e3))!==o?setTimeout(()=>{process.exitCode||fork()},respawnTimestamp-o):fork()}function start(e,t,s){cluster.on("listening",(e,r)=>{4!==r.addressType&&6!==r.addressType||r.address!==s||r.port!==t||info({message:"Worker listening",pid:e.process.pid,address:r.address,port:r.port})}),cluster.on("exit",restartWorker),e||(e=Math.max(2,os.cpus().length));for(let t=0;t<e;++t)fork()}function stop(){cluster.removeListener("exit",restartWorker);for(const e in cluster.workers)cluster.workers[e].kill()}const worker=cluster.worker;let server,listener;function closeServer(e,t){server?(setTimeout(()=>{if(!t)return;server.removeListener("request",listener),server.setTimeout(1);const e=t;t=null,setTimeout(e,1e3)},e).unref(),server.close(()=>{if(!t)return;const e=t;t=null,setTimeout(e,50)})):t()}function start$1(e,t,s,r,o,n=-1){if(listener=r,s&&s.key&&s.cert){const e={key:s.key.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim()))),cert:s.cert.split(":").map(e=>fs.readFileSync(path.resolve(ROOT_DIR,e.trim())))};server=https.createServer(e,listener),null!=o&&server.on("secureConnection",o)}else server=http.createServer(listener),null!=o&&server.on("connection",o);n>=0&&(server.keepAliveTimeout=n),server.listen(e,t)}function stop$1(){return new Promise((e,t)=>{setTimeout(()=>{t(new Error("Could not close server in a timely manner"))},3e4).unref(),closeServer(2e4,e)})}function interpretEscapes(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,(e,s)=>{const r=s.charAt(0),o=s.slice(1);return"u"===r?String.fromCharCode(parseInt(o,16)):t.hasOwnProperty(r)?t[r]:r})}function binaryLeft(e,t){return parsimmon.seqMap(t,parsimmon.seq(e,t).many(),(e,t)=>t.reduce((e,t)=>{const[s,r]=t;return Array.isArray(e)&&s===e[0]?e.concat([r]):Array.isArray(r)&&s===r[0]?[s,e].concat(r.slice(1)):[s,e,r]},e))}const lang=parsimmon.createLanguage({ComparisonOperator:function(){return parsimmon.alt(parsimmon.string(">="),parsimmon.string("<>"),parsimmon.string("<="),parsimmon.string("="),parsimmon.string(">"),parsimmon.string("<")).skip(parsimmon.optWhitespace)},LikeOperator:function(){return parsimmon.alt(parsimmon.regexp(/like/i).result("LIKE").desc("LIKE"),parsimmon.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},IsNullOperator:function(){return parsimmon.alt(parsimmon.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),parsimmon.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NotOperator:function(){return parsimmon.regexp(/not/i).result("NOT").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("NOT")},AndOperator:function(){return parsimmon.regexp(/and/i).result("AND").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("AND")},OrOperator:function(){return parsimmon.regexp(/or/i).result("OR").notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).desc("OR")},Parameter:function(e){return parsimmon.alt(parsimmon.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(parsimmon.string("{").skip(parsimmon.optWhitespace),parsimmon.string("}"))).atLeast(1).map(e=>["PARAM",e.length>1?["||"].concat(e):e[0]]).skip(parsimmon.optWhitespace).desc("parameter")},StringValueSql:function(){return parsimmon.regexp(/'([^']*)'/,1).atLeast(1).skip(parsimmon.optWhitespace).map(e=>e.join("'")).desc("string")},StringValueJs:function(){return parsimmon.regexp(/"((?:\\.|.)*?)"/,1).skip(parsimmon.optWhitespace).map(interpretEscapes).desc("string")},NumberValue:function(){return parsimmon.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).skip(parsimmon.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return parsimmon.alt(parsimmon.regexp(/true/i).result(!0).desc("TRUE"),parsimmon.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace)},NullValue:function(){return parsimmon.regexp(/null/i).notFollowedBy(parsimmon.regexp(/[a-zA-Z0-9_]/)).skip(parsimmon.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return parsimmon.seqMap(parsimmon.regexp(/([a-zA-Z0-9_]+)/,1).skip(parsimmon.optWhitespace).desc("function"),e.ValueExpression.sepBy(parsimmon.string(",").skip(parsimmon.optWhitespace)).wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace)),(e,t)=>["FUNC",e.toUpperCase()].concat(t))},Value:function(e){return parsimmon.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue)},ValueExpression:function(e){return binaryLeft(parsimmon.string("||").skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("+"),parsimmon.string("-")).skip(parsimmon.optWhitespace),binaryLeft(parsimmon.alt(parsimmon.string("*"),parsimmon.string("/")).skip(parsimmon.optWhitespace),parsimmon.alt(e.Value,e.Parameter,e.Expression.wrap(parsimmon.string("(").skip(parsimmon.optWhitespace),parsimmon.string(")").skip(parsimmon.optWhitespace))))))},Comparison:function(e){return parsimmon.alt(parsimmon.seqMap(e.ValueExpression,e.IsNullOperator,(e,t)=>[t,e]),parsimmon.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,(e,t,s)=>[t,e,s]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(parsimmon.regexp(/escape/i).result("ESCAPE").skip(parsimmon.whitespace).desc("ESCAPE")),e.ValueExpression,(e,t,s,r)=>[t,e,s,r]),parsimmon.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,(e,t,s)=>[t,e,s]))},Expression:function(e){return binaryLeft(e.OrOperator,binaryLeft(e.AndOperator,(t=e.NotOperator,s=e.Comparison.or(e.ValueExpression),parsimmon.seq(t,s).or(s)))).trim(parsimmon.optWhitespace);var t,s}}),interval=setInterval(()=>{},12e4);let tasksCollection,devicesCollection,presetsCollection,objectsCollection,provisionsCollection,virtualParametersCollection,faultsCollection,filesCollection,operationsCollection,permissionsCollection,usersCollection,configCollection,clientPromise,client;async function connect(){clientPromise=mongodb.MongoClient.connect(""+get("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0});const e=(client=await clientPromise).db();tasksCollection=e.collection("tasks"),await tasksCollection.createIndex({device:1,timestamp:1}),devicesCollection=e.collection("devices"),presetsCollection=e.collection("presets"),objectsCollection=e.collection("objects"),filesCollection=e.collection("fs.files"),provisionsCollection=e.collection("provisions"),virtualParametersCollection=e.collection("virtualParameters"),faultsCollection=e.collection("faults"),operationsCollection=e.collection("operations"),permissionsCollection=e.collection("permissions"),usersCollection=e.collection("users"),configCollection=e.collection("config")}async function disconnect(){clientPromise&&await(await clientPromise).close()}function listener$1(e,t){const s=url.parse(e.url,!0);if("GET"===e.method){const r=querystring.unescape(s.pathname.substring(1)),o={message:"Fetch file",filename:r,remoteAddress:getRequestOrigin(e).remoteAddress};filesCollection.findOne({_id:r},(e,s)=>{if(e)throw e;if(!s)return t.writeHead(404),t.end(),o.message+=" not found",void accessError(o);t.writeHead(200,{"Content-Type":s.contentType||"application/octet-stream","Content-Length":s.length}),new mongodb.GridFSBucket(client.db()).openDownloadStreamByName(r).pipe(t),accessInfo(o)})}else t.writeHead(405,{Allow:"GET"}),t.end("405 Method Not Allowed")}interval.unref&&interval.unref();const MAX_CACHE_TTL=+get("MAX_CACHE_TTL");let clientPromise$1,mongoCollection,mongoTimeOffset=0;async function connect$1(){const e=""+get("MONGODB_CONNECTION_URL");clientPromise$1=mongodb.MongoClient.connect(e,{useNewUrlParser:!0});const t=(await clientPromise$1).db();mongoCollection=t.collection("cache"),await mongoCollection.createIndex({expire:1},{expireAfterSeconds:0});const s=Date.now(),r=await t.command({hostInfo:1});mongoTimeOffset=r.system.currentTime.getTime()-s}async function disconnect$1(){clientPromise$1&&await(await clientPromise$1).close()}const version="1.2.0-beta.0+20200713141912";init("fs",version);const SERVICE_ADDRESS=get("FS_INTERFACE"),SERVICE_PORT=get("FS_PORT");function exitWorkerGracefully(){setTimeout(exitWorkerUngracefully,5e3).unref(),Promise.all([disconnect(),disconnect$1(),worker.disconnect()]).catch(exitWorkerUngracefully)}function exitWorkerUngracefully(){process.exit(1)}if(worker){const e={key:get("FS_SSL_KEY"),cert:get("FS_SSL_CERT")};let t=!1;process.on("uncaughtException",e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(error({message:"Uncaught exception",exception:e,pid:process.pid}),t=!0,stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully))});const s=(e,s)=>{t&&s.setHeader("Connection","close"),listener$1(e,s)},r=Promise.all([connect(),connect$1()]).then(()=>{start$1(SERVICE_PORT,SERVICE_ADDRESS,e,s)}).catch(e=>{setTimeout(()=>{throw e})});process.on("SIGINT",()=>{t=!0,r.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})}),process.on("SIGTERM",()=>{t=!0,r.finally(()=>{stop$1().then(exitWorkerGracefully).catch(exitWorkerUngracefully)})})}else{const e=get("FS_WORKER_PROCESSES");info({message:"genieacs-fs starting",pid:process.pid,version:version}),start(e,SERVICE_PORT,SERVICE_ADDRESS),process.on("SIGINT",()=>{info({message:"Received signal SIGINT, exiting",pid:process.pid}),stop()}),process.on("SIGTERM",()=>{info({message:"Received signal SIGTERM, exiting",pid:process.pid}),stop()})}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuaWVhY3MtZnMiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9jb25maWcudHMiLCIuLi8uLi9saWIvZm9yd2FyZGVkLnRzIiwiLi4vLi4vbGliL2xvZ2dlci50cyIsIi4uLy4uL2xpYi9jbHVzdGVyLnRzIiwiLi4vLi4vbGliL3NlcnZlci50cyIsIi4uLy4uL2xpYi9jb21tb24vZXhwcmVzc2lvbi1wYXJzZXIudHMiLCIuLi8uLi9saWIvY29tbW9uL3BhdGgudHMiLCIuLi8uLi9saWIvZGIudHMiLCIuLi8uLi9saWIvZnMudHMiLCIuLi8uLi9saWIvY2FjaGUudHMiLCIuLi8uLi9iaW4vZ2VuaWVhY3MtZnMiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbImNvbmZpZ0RpciIsImN3bXBTc2wiLCJuYmlTc2wiLCJmc1NzbCIsInVpU3NsIiwiZnNIb3N0bmFtZSIsIlJPT1RfRElSIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImV4aXN0c1N5bmMiLCJkIiwicHJvY2VzcyIsImN3ZCIsIm9wdGlvbnMiLCJFWFRfRElSIiwidHlwZSIsImRlZmF1bHQiLCJNT05HT0RCX0NPTk5FQ1RJT05fVVJMIiwiQ1dNUF9XT1JLRVJfUFJPQ0VTU0VTIiwiQ1dNUF9QT1JUIiwiQ1dNUF9JTlRFUkZBQ0UiLCJDV01QX1NTTF9DRVJUIiwiQ1dNUF9TU0xfS0VZIiwiQ1dNUF9MT0dfRklMRSIsIkNXTVBfQUNDRVNTX0xPR19GSUxFIiwiTkJJX1dPUktFUl9QUk9DRVNTRVMiLCJOQklfUE9SVCIsIk5CSV9JTlRFUkZBQ0UiLCJOQklfU1NMX0NFUlQiLCJOQklfU1NMX0tFWSIsIk5CSV9MT0dfRklMRSIsIk5CSV9BQ0NFU1NfTE9HX0ZJTEUiLCJGU19XT1JLRVJfUFJPQ0VTU0VTIiwiRlNfUE9SVCIsIkZTX0lOVEVSRkFDRSIsIkZTX1NTTF9DRVJUIiwiRlNfU1NMX0tFWSIsIkZTX1VSTF9QUkVGSVgiLCJGU19MT0dfRklMRSIsIkZTX0FDQ0VTU19MT0dfRklMRSIsIlVJX1dPUktFUl9QUk9DRVNTRVMiLCJVSV9QT1JUIiwiVUlfSU5URVJGQUNFIiwiVUlfU1NMX0NFUlQiLCJVSV9TU0xfS0VZIiwiVUlfTE9HX0ZJTEUiLCJVSV9BQ0NFU1NfTE9HX0ZJTEUiLCJVSV9KV1RfU0VDUkVUIiwiVURQX0NPTk5FQ1RJT05fUkVRVUVTVF9QT1JUIiwiRk9SV0FSREVEX0hFQURFUiIsIkRPV05MT0FEX1RJTUVPVVQiLCJFWFRfVElNRU9VVCIsIk1BWF9DQUNIRV9UVEwiLCJERUJVR19GSUxFIiwiREVCVUdfRk9STUFUIiwiREVCVUciLCJSRVRSWV9ERUxBWSIsIlNFU1NJT05fVElNRU9VVCIsIkNPTk5FQ1RJT05fUkVRVUVTVF9USU1FT1VUIiwiR1BOX05FWFRfTEVWRUwiLCJHUFZfQkFUQ0hfU0laRSIsIk1BWF9ERVBUSCIsIkNPT0tJRVNfUEFUSCIsIkxPR19GT1JNQVQiLCJBQ0NFU1NfTE9HX0ZPUk1BVCIsIk1BWF9DT05DVVJSRU5UX1JFUVVFU1RTIiwiREFURVRJTUVfTUlMTElTRUNPTkRTIiwiQk9PTEVBTl9MSVRFUkFMIiwiQ09OTkVDVElPTl9SRVFVRVNUX0FMTE9XX0JBU0lDX0FVVEgiLCJNQVhfQ09NTUlUX0lURVJBVElPTlMiLCJERVZJQ0VfT05MSU5FX1RIUkVTSE9MRCIsImFsbENvbmZpZyIsInNldENvbmZpZyIsIm5hbWUiLCJ2YWx1ZSIsImNvbW1hbmRMaW5lQXJndW1lbnQiLCJjYXN0IiwidmFsIiwiTnVtYmVyIiwiaW5jbHVkZXMiLCJTdHJpbmciLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJfdmFsdWUiLCJvcHRpb25OYW1lIiwib3B0aW9uRGV0YWlscyIsIk9iamVjdCIsImVudHJpZXMiLCJuIiwicmVwbGFjZSIsInN0YXJ0c1dpdGgiLCJzbGljZSIsImxlbmd0aCIsImVudiIsImFyZ3YiLCJhcmciLCJzaGlmdCIsInYiLCJrIiwiY29uZmlnRmlsZW5hbWUiLCJjb25maWdGaWxlIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwidG9TdHJpbmciLCJnZXQiLCJkZXZpY2VJZCIsImkiLCJsYXN0SW5kZXhPZiIsImNvbmZpZy5nZXQiLCJjYWNoZSIsIldlYWtNYXAiLCJjaWRycyIsInN0ciIsInNwbGl0IiwibWFwIiwicyIsInB1c2giLCJwYXJzZUNJRFIiLCJlcnIiLCJpcCIsInRvQnl0ZUFycmF5IiwicGFyc2VGb3J3YXJkZWRIZWFkZXIiLCJyZXMiLCJrZXkiLCJrZXlJZHgiLCJ2YWx1ZUlkeCIsImNoYXIiLCJjaGFyQ29kZUF0IiwicXVvdGVJZHgiLCJjIiwiZ2V0UmVxdWVzdE9yaWdpbiIsInJlcXVlc3QiLCJvcmlnaW4iLCJzb2MiLCJzb2NrZXQiLCJsb2NhbEFkZHJlc3MiLCJsb2NhbFBvcnQiLCJyZW1vdGVBZGRyZXNzIiwicmVtb3RlUG9ydCIsImhvc3QiLCJoZWFkZXJzIiwiZW5jcnlwdGVkIiwiaGVhZGVyIiwic29tZSIsImNpZHIiLCJtYXRjaCIsInBhcnNlZCIsInBvcnQiLCJwYXJzZUludCIsInNldCIsIlJFT1BFTl9FVkVSWSIsImRlZmF1bHRNZXRhIiwiTE9HX0ZJTEUiLCJBQ0NFU1NfTE9HX0ZJTEUiLCJMT0dfU1lTVEVNRCIsIkFDQ0VTU19MT0dfU1lTVEVNRCIsImxvZ1N0cmVhbSIsImZzLmNyZWF0ZVdyaXRlU3RyZWFtIiwiZmQiLCJzdGRlcnIiLCJsb2dTdGF0IiwiZnMuZnN0YXRTeW5jIiwiYWNjZXNzTG9nU3RyZWFtIiwic3Rkb3V0IiwiYWNjZXNzTG9nU3RhdCIsInJlb3BlbiIsImNvdW50ZXIiLCJmcy5zdGF0Iiwic3RhdCIsIm1lc3NhZ2UiLCJkZXYiLCJpbm8iLCJlbmQiLCJmcy5vcGVuU3luYyIsInNldFRpbWVvdXQiLCJEYXRlIiwibm93IiwidW5yZWYiLCJpbml0Iiwic2VydmljZSIsInZlcnNpb24iLCJob3N0bmFtZSIsIm9zLmhvc3RuYW1lIiwicGlkIiwidG9VcHBlckNhc2UiLCJKT1VSTkFMX1NUUkVBTSIsImlub2RlIiwiZmxhdHRlbiIsImRldGFpbHMiLCJzZXNzaW9uQ29udGV4dCIsImh0dHBSZXF1ZXN0IiwiZXhjZXB0aW9uIiwiZXhjZXB0aW9uTmFtZSIsImV4Y2VwdGlvbk1lc3NhZ2UiLCJleGNlcHRpb25TdGFjayIsInN0YWNrIiwidGFzayIsInRhc2tJZCIsIl9pZCIsInJwYyIsImFjc1JlcXVlc3QiLCJhY3NSZXF1ZXN0SWQiLCJpZCIsImFjc1JlcXVlc3ROYW1lIiwiY29tbWFuZEtleSIsImFjc1JlcXVlc3RDb21tYW5kS2V5IiwiY3BlUmVxdWVzdCIsImNwZVJlcXVlc3RJZCIsImluZm9ybUV2ZW50IiwiZXZlbnQiLCJqb2luIiwiaW5mb3JtUmV0cnlDb3VudCIsInJldHJ5Q291bnQiLCJjcGVSZXF1ZXN0TmFtZSIsImNwZVJlcXVlc3RDb21tYW5kS2V5IiwiY3BlRmF1bHQiLCJjcGVGYXVsdENvZGUiLCJkZXRhaWwiLCJmYXVsdENvZGUiLCJjcGVGYXVsdFN0cmluZyIsImZhdWx0U3RyaW5nIiwiZmF1bHQiLCJjb2RlIiwiZmF1bHRNZXNzYWdlIiwiY29udGV4dCIsInJlcSIsInN0YXRlIiwidXNlciIsInVzZXJuYW1lIiwiZm9ybWF0SnNvbiIsInN5c3RlbWQiLCJzZXZlcml0eSIsInN0cmluZ2lmeSIsIm9zLkVPTCIsImZvcm1hdFNpbXBsZSIsInNraXAiLCJ0aW1lc3RhbXAiLCJyZW1vdGUiLCJrZXlzIiwibWV0YSIsImt2IiwibG9nIiwidG9JU09TdHJpbmciLCJhc3NpZ24iLCJ3cml0ZSIsImluZm8iLCJlcnJvciIsImFjY2Vzc0xvZyIsImFjY2Vzc0luZm8iLCJhY2Nlc3NFcnJvciIsInJlc3Bhd25UaW1lc3RhbXAiLCJjcmFzaGVzIiwiZm9yayIsInciLCJjbHVzdGVyIiwib24iLCJpc0RlYWQiLCJyZXN0YXJ0V29ya2VyIiwid29ya2VyIiwic2lnbmFsIiwibXNnIiwiZXhpdENvZGUiLCJsb2dnZXIuZXJyb3IiLCJtaW4xIiwibWluMiIsIm1pbjMiLCJmaWx0ZXIiLCJyZW1vdmVMaXN0ZW5lciIsIndvcmtlcnMiLCJraWxsIiwiTWF0aCIsIm1heCIsInN0YXJ0Iiwid29ya2VyQ291bnQiLCJzZXJ2aWNlUG9ydCIsInNlcnZpY2VBZGRyZXNzIiwiYWRkcmVzcyIsImFkZHJlc3NUeXBlIiwibG9nZ2VyLmluZm8iLCJjcHVzIiwic3RvcCIsInNlcnZlciIsImxpc3RlbmVyIiwiY2xvc2VTZXJ2ZXIiLCJ0aW1lb3V0IiwiY2FsbGJhY2siLCJjYiIsImNsb3NlIiwibmV0d29ya0ludGVyZmFjZSIsInNzbCIsIl9saXN0ZW5lciIsIm9uQ29ubmVjdGlvbiIsImtlZXBBbGl2ZVRpbWVvdXQiLCJjZXJ0IiwiZiIsImZzLnJlYWRGaWxlU3luYyIsInBhdGgucmVzb2x2ZSIsImh0dHBzLmNyZWF0ZVNlcnZlciIsImh0dHAuY3JlYXRlU2VydmVyIiwibGlzdGVuIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwiaW50ZXJwcmV0RXNjYXBlcyIsImVzY2FwZXMiLCJiIiwiciIsInQiLCJfIiwiZXNjYXBlIiwiY2hhckF0IiwiaGV4IiwiZnJvbUNoYXJDb2RlIiwiaGFzT3duUHJvcGVydHkiLCJiaW5hcnlMZWZ0Iiwib3BlcmF0b3JzUGFyc2VyIiwibmV4dFBhcnNlciIsInBhcnNpbW1vbi5zZXFNYXAiLCJwYXJzaW1tb24uc2VxIiwibWFueSIsImZpcnN0IiwicmVzdCIsInJlZHVjZSIsImFjYyIsImNoIiwib3AiLCJhbm90aGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiY29uY2F0IiwibGFuZyIsInBhcnNpbW1vbi5jcmVhdGVMYW5ndWFnZSIsIkNvbXBhcmlzb25PcGVyYXRvciIsInBhcnNpbW1vblxuICAgICAgICAgICAgLmFsdCIsInBhcnNpbW1vbi5zdHJpbmciLCJwYXJzaW1tb24ub3B0V2hpdGVzcGFjZSIsIkxpa2VPcGVyYXRvciIsInBhcnNpbW1vblxuICAgICAgICAgICAgLnJlZ2V4cCIsInJlc3VsdCIsImRlc2MiLCJub3RGb2xsb3dlZEJ5IiwicGFyc2ltbW9uLnJlZ2V4cCIsIklzTnVsbE9wZXJhdG9yIiwiTm90T3BlcmF0b3IiLCJBbmRPcGVyYXRvciIsIk9yT3BlcmF0b3IiLCJQYXJhbWV0ZXIiLCJFeHByZXNzaW9uIiwid3JhcCIsImF0TGVhc3QiLCJ4IiwiU3RyaW5nVmFsdWVTcWwiLCJTdHJpbmdWYWx1ZUpzIiwiTnVtYmVyVmFsdWUiLCJCb29sZWFuVmFsdWUiLCJOdWxsVmFsdWUiLCJGdW5jVmFsdWUiLCJWYWx1ZUV4cHJlc3Npb24iLCJzZXBCeSIsImFyZ3MiLCJWYWx1ZSIsInBhcnNpbW1vbi5hbHQiLCJDb21wYXJpc29uIiwicCIsIm8iLCJwYXJzaW1tb24ud2hpdGVzcGFjZSIsImEiLCJvciIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJ0YXNrc0NvbGxlY3Rpb24iLCJkZXZpY2VzQ29sbGVjdGlvbiIsInByZXNldHNDb2xsZWN0aW9uIiwib2JqZWN0c0NvbGxlY3Rpb24iLCJwcm92aXNpb25zQ29sbGVjdGlvbiIsInZpcnR1YWxQYXJhbWV0ZXJzQ29sbGVjdGlvbiIsImZhdWx0c0NvbGxlY3Rpb24iLCJmaWxlc0NvbGxlY3Rpb24iLCJvcGVyYXRpb25zQ29sbGVjdGlvbiIsInBlcm1pc3Npb25zQ29sbGVjdGlvbiIsInVzZXJzQ29sbGVjdGlvbiIsImNvbmZpZ0NvbGxlY3Rpb24iLCJjbGllbnRQcm9taXNlIiwiY2xpZW50IiwiYXN5bmMiLCJjb25uZWN0IiwiTW9uZ29DbGllbnQiLCJ1c2VOZXdVcmxQYXJzZXIiLCJkYiIsImNvbGxlY3Rpb24iLCJjcmVhdGVJbmRleCIsImRldmljZSIsImRpc2Nvbm5lY3QiLCJyZXNwb25zZSIsInVybFBhcnRzIiwidXJsLnBhcnNlIiwidXJsIiwibWV0aG9kIiwiZmlsZW5hbWUiLCJxdWVyeXN0cmluZy51bmVzY2FwZSIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwiZGIuZmlsZXNDb2xsZWN0aW9uIiwiZmluZE9uZSIsImZpbGUiLCJ3cml0ZUhlYWQiLCJsb2dnZXIuYWNjZXNzRXJyb3IiLCJDb250ZW50LVR5cGUiLCJjb250ZW50VHlwZSIsIkNvbnRlbnQtTGVuZ3RoIiwiR3JpZEZTQnVja2V0IiwiZGIuY2xpZW50Iiwib3BlbkRvd25sb2FkU3RyZWFtQnlOYW1lIiwicGlwZSIsImxvZ2dlci5hY2Nlc3NJbmZvIiwiQWxsb3ciLCJtb25nb0NvbGxlY3Rpb24iLCJtb25nb1RpbWVPZmZzZXQiLCJleHBpcmUiLCJleHBpcmVBZnRlclNlY29uZHMiLCJjb21tYW5kIiwiaG9zdEluZm8iLCJzeXN0ZW0iLCJjdXJyZW50VGltZSIsImdldFRpbWUiLCJsb2dnZXIuaW5pdCIsIlZFUlNJT04iLCJTRVJWSUNFX0FERFJFU1MiLCJTRVJWSUNFX1BPUlQiLCJleGl0V29ya2VyR3JhY2VmdWxseSIsImV4aXRXb3JrZXJVbmdyYWNlZnVsbHkiLCJhbGwiLCJkYi5kaXNjb25uZWN0IiwiY2FjaGUuZGlzY29ubmVjdCIsImNsdXN0ZXIud29ya2VyIiwiY2F0Y2giLCJleGl0Iiwic3RvcHBpbmciLCJzZXJ2ZXJcbiAgICAgICAgICAgIC5zdG9wIiwidGhlbiIsInNldEhlYWRlciIsImluaXRQcm9taXNlIiwiZGIuY29ubmVjdCIsImNhY2hlLmNvbm5lY3QiLCJzZXJ2ZXIuc3RhcnQiLCJmaW5hbGx5Iiwic2VydmVyXG4gICAgICAgICAgICAgICAgLnN0b3AiLCJXT1JLRVJfQ09VTlQiLCJjbHVzdGVyLnN0YXJ0IiwiY2x1c3Rlci5zdG9wIl0sIm1hcHBpbmdzIjoiO3FZQXVCQSxJQVdJQSxVQUFXQyxRQUFTQyxPQUFRQyxNQUFPQyxNQUFPQyxXQVhuQ0MsU0FBV0MsYUFBUUMsVUFBVyxNQUN6QyxNQUFRQyxpQkFBY0gsMEJBQTBCLENBQzlDLE1BQU1JLEVBQUlILGFBQVFELFNBQVUsTUFDNUIsR0FBSUksSUFBTUosU0FBVSxDQUNsQkEsU0FBV0ssUUFBUUMsTUFDbkIsTUFFRk4sU0FBV0ksRUFNYixNQUFNRyxRQUFVLENBQ2RDLFFBQVMsQ0FBRUMsS0FBTSxPQUFRQyxRQUFTVCxhQUFRRCxTQUFVLGVBQ3BEVyx1QkFBd0IsQ0FDdEJGLEtBQU0sU0FDTkMsUUFBUyxnQ0FHWEUsc0JBQXVCLENBQUVILEtBQU0sTUFBT0MsUUFBUyxHQUMvQ0csVUFBVyxDQUFF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
